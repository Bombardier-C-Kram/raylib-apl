:Namespace setup
⍝ Makes an importer that improves the ffi function creation syntax
∇ OutputStr ← {outType} MakeImporter (pathToBin funcName inpTypes)
    ;NestedStructToStr ;NestedStructToStrReturn ;⎕IO
  ⎕IO←1
  ⍝ outType's default is ''
  :If 0=⎕NC'outType'
    outType←''
  :EndIf

  NestedStructToStr ← {
    2=+/⍵∊'<=>': '=P[]'
    2>|≡⍵:⍵
    m←0≠≡¨⍵
    (PtrLeft BracketsRight) ← {n←∨\⍵='['⋄((~n)/⍵)(n/⍵)}(~m)/⍵
    PtrLeft,BracketsRight,⍨{
      2>|≡⍵:⍵
      ('{','}',⍨1↓⊃,/' ',¨∇¨⍵/⍨0≠≡¨⍵),⍵/⍨0=≡¨⍵
    } PadStruct m/⍵
  }
  NestedStructToStrReturn ← {
    ((,'=')≢1↑⍵)∧1≥|≡⍵:⍵
    ptr
  }
  OutputStr ← (NestedStructToStrReturn outType),' ',pathToBin,'|',funcName,⊃,/' ',¨NestedStructToStr¨inpTypes
∇

R ← {⍺←''⋄⍺ MakeImporter (⊂pathToBinary),⍵}

⍝ predefined C types
bool ← 'I1'
c    ← 'I1'
i    ← 'I4'
f    ← 'F4'
u    ← 'U4'
i1   ← 'I1'
u1   ← 'U1'
u8   ← 'U8'
str  ← '=0C1'
ustr ← '=C1'
ptr  ← ,'P'
f8   ← 'F8'
i8   ← 'I8'
u2   ← 'U2'

ComputerAlignment ← 8
types ← i u i1 ptr f8 i8 u2 f u1 u8 'U3' 'F4[2]' 'F4[2]' 'F4[2]' 'F4[2]' 'F4[2]' 'F4[2]' 'F4[4]' 'F4[4]' 'I4[4]' 'U1[32]' 'U4[4]'
sizes ← 4 4  1 8    8  8  2 4  1  8   3    8       8       8       8       8       8       8       8      8        8        8

⍝ Building struct
⍝ Struct memory needs to be alligned, so we need to add padding.
PadStruct ← {
  PadFlat←{
    ⍝ ┌Add to struct
    ⍝ │ ┌Add the new elem after fills to allign it
    ⍝ │ │    ┌Add fills       ┌Measure offset off alignment
    ⍝ │ │    │    Alignment┐  │   ┌Position in memory
    ⍝ ├┐├───┐├──────────┐┌─┴─┐├┐┌─┴─┐ ┌──────┬Loop over ⍵ with initial ⍬
    ⊃{⍵,⍺,∘⊂⍨1 1 'U1'⍴∘⊂⍨(2⊃⍺)|-+/⊃¨⍵}/⍬,∘⊂⍨⌽⍵
  }
  Size ← {
    (⊂⍵)∊types: sizes[types⍳⊂⍵]
    1⊃⍬⊣⎕←'Length of type unknown, please add to types list in this script: ',⍵
  }
  Align←{
    0=≡⍵:⍵
    s←∇¨⍵
    ∨/'<=>'∊⊃s: 8 8(,'P')
    1=|≡s:(2⍴Size s),⊂s
    m←0≠≡¨s
    la←PadFlat m/s
    size←+/1⊃¨la
    alignment←⌈/2⊃¨la
    size alignment,⊂(s/⍨⌽∧\⌽~m),⍨(s/⍨∧\~m),3⊃¨la
  }
  (size padding items) ← Align ⍵

  ⍝ {{F4 F4 F4} {F4 F4 F4} {F4 F4 F4} F4 I4} ⍝ unchanged (does work with padding)

  ⍝ {U4 I4 I4 I4 I4} → {U4 I4 I4 I4 I4 U1 U1 U1 U1}
  ⍝ ={U4 I4 I4 I4 I4} {P I4 I4 I4 I4}
  items,u1⍴∘⊂⍨ComputerAlignment|size
}

:EndNamespace