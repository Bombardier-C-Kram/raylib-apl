:Namespace raylib
⍝ THIS TEXT HAS BEEN AUTOGENERATED

⎕THIS ⎕NS 0 ⎕FIX (⊃1⎕NPARTS''),'../parse-raylib-apl/setup.apln'

RAYLIB_VERSION_MAJOR ← 5     ⍝
RAYLIB_VERSION_MINOR ← 0     ⍝
RAYLIB_VERSION_PATCH ← 0     ⍝
RAYLIB_VERSION       ← '5.0' ⍝

:Namespace ConfigFlags ⍝ System/Window config flags
  FLAG_VSYNC_HINT               ← 64     ⍝ Set to try enabling V-Sync on GPU
  FLAG_FULLSCREEN_MODE          ← 2      ⍝ Set to run program in fullscreen
  FLAG_WINDOW_RESIZABLE         ← 4      ⍝ Set to allow resizable window
  FLAG_WINDOW_UNDECORATED       ← 8      ⍝ Set to disable window decoration (frame and buttons)
  FLAG_WINDOW_HIDDEN            ← 128    ⍝ Set to hide window
  FLAG_WINDOW_MINIMIZED         ← 512    ⍝ Set to minimize window (iconify)
  FLAG_WINDOW_MAXIMIZED         ← 1024   ⍝ Set to maximize window (expanded to monitor)
  FLAG_WINDOW_UNFOCUSED         ← 2048   ⍝ Set to window non focused
  FLAG_WINDOW_TOPMOST           ← 4096   ⍝ Set to window always on top
  FLAG_WINDOW_ALWAYS_RUN        ← 256    ⍝ Set to allow windows running while minimized
  FLAG_WINDOW_TRANSPARENT       ← 16     ⍝ Set to allow transparent framebuffer
  FLAG_WINDOW_HIGHDPI           ← 8192   ⍝ Set to support HighDPI
  FLAG_WINDOW_MOUSE_PASSTHROUGH ← 16384  ⍝ Set to support mouse passthrough, only supported when FLAG_WINDOW_UNDECORATED
  FLAG_BORDERLESS_WINDOWED_MODE ← 32768  ⍝ Set to run program in borderless windowed mode
  FLAG_MSAA_4X_HINT             ← 32     ⍝ Set to try enabling MSAA 4X
  FLAG_INTERLACED_HINT          ← 65536  ⍝ Set to try enabling interlaced video format (for V3D)
:EndNamespace

:Namespace TraceLogLevel ⍝ Trace log level
  LOG_ALL     ← 0  ⍝ Display all logs
  LOG_TRACE   ← 1  ⍝ Trace logging, intended for internal use only
  LOG_DEBUG   ← 2  ⍝ Debug logging, used for internal debugging, it should be disabled on release builds
  LOG_INFO    ← 3  ⍝ Info logging, used for program execution info
  LOG_WARNING ← 4  ⍝ Warning logging, used on recoverable failures
  LOG_ERROR   ← 5  ⍝ Error logging, used on unrecoverable failures
  LOG_FATAL   ← 6  ⍝ Fatal logging, used to abort program: exit(EXIT_FAILURE)
  LOG_NONE    ← 7  ⍝ Disable logging
:EndNamespace

:Namespace KeyboardKey ⍝ Keyboard keys (US keyboard layout)
  KEY_NULL          ← 0    ⍝ Key: NULL, used for no key pressed
  KEY_APOSTROPHE    ← 39   ⍝ Key: '
  KEY_COMMA         ← 44   ⍝ Key: ,
  KEY_MINUS         ← 45   ⍝ Key: -
  KEY_PERIOD        ← 46   ⍝ Key: .
  KEY_SLASH         ← 47   ⍝ Key: /
  KEY_ZERO          ← 48   ⍝ Key: 0
  KEY_ONE           ← 49   ⍝ Key: 1
  KEY_TWO           ← 50   ⍝ Key: 2
  KEY_THREE         ← 51   ⍝ Key: 3
  KEY_FOUR          ← 52   ⍝ Key: 4
  KEY_FIVE          ← 53   ⍝ Key: 5
  KEY_SIX           ← 54   ⍝ Key: 6
  KEY_SEVEN         ← 55   ⍝ Key: 7
  KEY_EIGHT         ← 56   ⍝ Key: 8
  KEY_NINE          ← 57   ⍝ Key: 9
  KEY_SEMICOLON     ← 59   ⍝ Key: ;
  KEY_EQUAL         ← 61   ⍝ Key: =
  KEY_A             ← 65   ⍝ Key: A | a
  KEY_B             ← 66   ⍝ Key: B | b
  KEY_C             ← 67   ⍝ Key: C | c
  KEY_D             ← 68   ⍝ Key: D | d
  KEY_E             ← 69   ⍝ Key: E | e
  KEY_F             ← 70   ⍝ Key: F | f
  KEY_G             ← 71   ⍝ Key: G | g
  KEY_H             ← 72   ⍝ Key: H | h
  KEY_I             ← 73   ⍝ Key: I | i
  KEY_J             ← 74   ⍝ Key: J | j
  KEY_K             ← 75   ⍝ Key: K | k
  KEY_L             ← 76   ⍝ Key: L | l
  KEY_M             ← 77   ⍝ Key: M | m
  KEY_N             ← 78   ⍝ Key: N | n
  KEY_O             ← 79   ⍝ Key: O | o
  KEY_P             ← 80   ⍝ Key: P | p
  KEY_Q             ← 81   ⍝ Key: Q | q
  KEY_R             ← 82   ⍝ Key: R | r
  KEY_S             ← 83   ⍝ Key: S | s
  KEY_T             ← 84   ⍝ Key: T | t
  KEY_U             ← 85   ⍝ Key: U | u
  KEY_V             ← 86   ⍝ Key: V | v
  KEY_W             ← 87   ⍝ Key: W | w
  KEY_X             ← 88   ⍝ Key: X | x
  KEY_Y             ← 89   ⍝ Key: Y | y
  KEY_Z             ← 90   ⍝ Key: Z | z
  KEY_LEFT_BRACKET  ← 91   ⍝ Key: [
  KEY_BACKSLASH     ← 92   ⍝ Key: '\'
  KEY_RIGHT_BRACKET ← 93   ⍝ Key: ]
  KEY_GRAVE         ← 96   ⍝ Key: `
  KEY_SPACE         ← 32   ⍝ Key: Space
  KEY_ESCAPE        ← 256  ⍝ Key: Esc
  KEY_ENTER         ← 257  ⍝ Key: Enter
  KEY_TAB           ← 258  ⍝ Key: Tab
  KEY_BACKSPACE     ← 259  ⍝ Key: Backspace
  KEY_INSERT        ← 260  ⍝ Key: Ins
  KEY_DELETE        ← 261  ⍝ Key: Del
  KEY_RIGHT         ← 262  ⍝ Key: Cursor right
  KEY_LEFT          ← 263  ⍝ Key: Cursor left
  KEY_DOWN          ← 264  ⍝ Key: Cursor down
  KEY_UP            ← 265  ⍝ Key: Cursor up
  KEY_PAGE_UP       ← 266  ⍝ Key: Page up
  KEY_PAGE_DOWN     ← 267  ⍝ Key: Page down
  KEY_HOME          ← 268  ⍝ Key: Home
  KEY_END           ← 269  ⍝ Key: End
  KEY_CAPS_LOCK     ← 280  ⍝ Key: Caps lock
  KEY_SCROLL_LOCK   ← 281  ⍝ Key: Scroll down
  KEY_NUM_LOCK      ← 282  ⍝ Key: Num lock
  KEY_PRINT_SCREEN  ← 283  ⍝ Key: Print screen
  KEY_PAUSE         ← 284  ⍝ Key: Pause
  KEY_F1            ← 290  ⍝ Key: F1
  KEY_F2            ← 291  ⍝ Key: F2
  KEY_F3            ← 292  ⍝ Key: F3
  KEY_F4            ← 293  ⍝ Key: F4
  KEY_F5            ← 294  ⍝ Key: F5
  KEY_F6            ← 295  ⍝ Key: F6
  KEY_F7            ← 296  ⍝ Key: F7
  KEY_F8            ← 297  ⍝ Key: F8
  KEY_F9            ← 298  ⍝ Key: F9
  KEY_F10           ← 299  ⍝ Key: F10
  KEY_F11           ← 300  ⍝ Key: F11
  KEY_F12           ← 301  ⍝ Key: F12
  KEY_LEFT_SHIFT    ← 340  ⍝ Key: Shift left
  KEY_LEFT_CONTROL  ← 341  ⍝ Key: Control left
  KEY_LEFT_ALT      ← 342  ⍝ Key: Alt left
  KEY_LEFT_SUPER    ← 343  ⍝ Key: Super left
  KEY_RIGHT_SHIFT   ← 344  ⍝ Key: Shift right
  KEY_RIGHT_CONTROL ← 345  ⍝ Key: Control right
  KEY_RIGHT_ALT     ← 346  ⍝ Key: Alt right
  KEY_RIGHT_SUPER   ← 347  ⍝ Key: Super right
  KEY_KB_MENU       ← 348  ⍝ Key: KB menu
  KEY_KP_0          ← 320  ⍝ Key: Keypad 0
  KEY_KP_1          ← 321  ⍝ Key: Keypad 1
  KEY_KP_2          ← 322  ⍝ Key: Keypad 2
  KEY_KP_3          ← 323  ⍝ Key: Keypad 3
  KEY_KP_4          ← 324  ⍝ Key: Keypad 4
  KEY_KP_5          ← 325  ⍝ Key: Keypad 5
  KEY_KP_6          ← 326  ⍝ Key: Keypad 6
  KEY_KP_7          ← 327  ⍝ Key: Keypad 7
  KEY_KP_8          ← 328  ⍝ Key: Keypad 8
  KEY_KP_9          ← 329  ⍝ Key: Keypad 9
  KEY_KP_DECIMAL    ← 330  ⍝ Key: Keypad .
  KEY_KP_DIVIDE     ← 331  ⍝ Key: Keypad /
  KEY_KP_MULTIPLY   ← 332  ⍝ Key: Keypad *
  KEY_KP_SUBTRACT   ← 333  ⍝ Key: Keypad -
  KEY_KP_ADD        ← 334  ⍝ Key: Keypad +
  KEY_KP_ENTER      ← 335  ⍝ Key: Keypad Enter
  KEY_KP_EQUAL      ← 336  ⍝ Key: Keypad =
  KEY_BACK          ← 4    ⍝ Key: Android back button
  KEY_MENU          ← 82   ⍝ Key: Android menu button
  KEY_VOLUME_UP     ← 24   ⍝ Key: Android volume up button
  KEY_VOLUME_DOWN   ← 25   ⍝ Key: Android volume down button
:EndNamespace

:Namespace MouseButton ⍝ Mouse buttons
  MOUSE_BUTTON_LEFT    ← 0  ⍝ Mouse button left
  MOUSE_BUTTON_RIGHT   ← 1  ⍝ Mouse button right
  MOUSE_BUTTON_MIDDLE  ← 2  ⍝ Mouse button middle (pressed wheel)
  MOUSE_BUTTON_SIDE    ← 3  ⍝ Mouse button side (advanced mouse device)
  MOUSE_BUTTON_EXTRA   ← 4  ⍝ Mouse button extra (advanced mouse device)
  MOUSE_BUTTON_FORWARD ← 5  ⍝ Mouse button forward (advanced mouse device)
  MOUSE_BUTTON_BACK    ← 6  ⍝ Mouse button back (advanced mouse device)
:EndNamespace

:Namespace MouseCursor ⍝ Mouse cursor
  MOUSE_CURSOR_DEFAULT       ← 0   ⍝ Default pointer shape
  MOUSE_CURSOR_ARROW         ← 1   ⍝ Arrow shape
  MOUSE_CURSOR_IBEAM         ← 2   ⍝ Text writing cursor shape
  MOUSE_CURSOR_CROSSHAIR     ← 3   ⍝ Cross shape
  MOUSE_CURSOR_POINTING_HAND ← 4   ⍝ Pointing hand cursor
  MOUSE_CURSOR_RESIZE_EW     ← 5   ⍝ Horizontal resize/move arrow shape
  MOUSE_CURSOR_RESIZE_NS     ← 6   ⍝ Vertical resize/move arrow shape
  MOUSE_CURSOR_RESIZE_NWSE   ← 7   ⍝ Top-left to bottom-right diagonal resize/move arrow shape
  MOUSE_CURSOR_RESIZE_NESW   ← 8   ⍝ The top-right to bottom-left diagonal resize/move arrow shape
  MOUSE_CURSOR_RESIZE_ALL    ← 9   ⍝ The omnidirectional resize/move cursor shape
  MOUSE_CURSOR_NOT_ALLOWED   ← 10  ⍝ The operation-not-allowed shape
:EndNamespace

:Namespace GamepadButton ⍝ Gamepad buttons
  GAMEPAD_BUTTON_UNKNOWN          ← 0   ⍝ Unknown button, just for error checking
  GAMEPAD_BUTTON_LEFT_FACE_UP     ← 1   ⍝ Gamepad left DPAD up button
  GAMEPAD_BUTTON_LEFT_FACE_RIGHT  ← 2   ⍝ Gamepad left DPAD right button
  GAMEPAD_BUTTON_LEFT_FACE_DOWN   ← 3   ⍝ Gamepad left DPAD down button
  GAMEPAD_BUTTON_LEFT_FACE_LEFT   ← 4   ⍝ Gamepad left DPAD left button
  GAMEPAD_BUTTON_RIGHT_FACE_UP    ← 5   ⍝ Gamepad right button up (i.e. PS3: Triangle, Xbox: Y)
  GAMEPAD_BUTTON_RIGHT_FACE_RIGHT ← 6   ⍝ Gamepad right button right (i.e. PS3: Square, Xbox: X)
  GAMEPAD_BUTTON_RIGHT_FACE_DOWN  ← 7   ⍝ Gamepad right button down (i.e. PS3: Cross, Xbox: A)
  GAMEPAD_BUTTON_RIGHT_FACE_LEFT  ← 8   ⍝ Gamepad right button left (i.e. PS3: Circle, Xbox: B)
  GAMEPAD_BUTTON_LEFT_TRIGGER_1   ← 9   ⍝ Gamepad top/back trigger left (first), it could be a trailing button
  GAMEPAD_BUTTON_LEFT_TRIGGER_2   ← 10  ⍝ Gamepad top/back trigger left (second), it could be a trailing button
  GAMEPAD_BUTTON_RIGHT_TRIGGER_1  ← 11  ⍝ Gamepad top/back trigger right (one), it could be a trailing button
  GAMEPAD_BUTTON_RIGHT_TRIGGER_2  ← 12  ⍝ Gamepad top/back trigger right (second), it could be a trailing button
  GAMEPAD_BUTTON_MIDDLE_LEFT      ← 13  ⍝ Gamepad center buttons, left one (i.e. PS3: Select)
  GAMEPAD_BUTTON_MIDDLE           ← 14  ⍝ Gamepad center buttons, middle one (i.e. PS3: PS, Xbox: XBOX)
  GAMEPAD_BUTTON_MIDDLE_RIGHT     ← 15  ⍝ Gamepad center buttons, right one (i.e. PS3: Start)
  GAMEPAD_BUTTON_LEFT_THUMB       ← 16  ⍝ Gamepad joystick pressed button left
  GAMEPAD_BUTTON_RIGHT_THUMB      ← 17  ⍝ Gamepad joystick pressed button right
:EndNamespace

:Namespace GamepadAxis ⍝ Gamepad axis
  GAMEPAD_AXIS_LEFT_X        ← 0  ⍝ Gamepad left stick X axis
  GAMEPAD_AXIS_LEFT_Y        ← 1  ⍝ Gamepad left stick Y axis
  GAMEPAD_AXIS_RIGHT_X       ← 2  ⍝ Gamepad right stick X axis
  GAMEPAD_AXIS_RIGHT_Y       ← 3  ⍝ Gamepad right stick Y axis
  GAMEPAD_AXIS_LEFT_TRIGGER  ← 4  ⍝ Gamepad back trigger left, pressure level: [1..-1]
  GAMEPAD_AXIS_RIGHT_TRIGGER ← 5  ⍝ Gamepad back trigger right, pressure level: [1..-1]
:EndNamespace

:Namespace MaterialMapIndex ⍝ Material map index
  MATERIAL_MAP_ALBEDO     ← 0   ⍝ Albedo material (same as: MATERIAL_MAP_DIFFUSE)
  MATERIAL_MAP_METALNESS  ← 1   ⍝ Metalness material (same as: MATERIAL_MAP_SPECULAR)
  MATERIAL_MAP_NORMAL     ← 2   ⍝ Normal material
  MATERIAL_MAP_ROUGHNESS  ← 3   ⍝ Roughness material
  MATERIAL_MAP_OCCLUSION  ← 4   ⍝ Ambient occlusion material
  MATERIAL_MAP_EMISSION   ← 5   ⍝ Emission material
  MATERIAL_MAP_HEIGHT     ← 6   ⍝ Heightmap material
  MATERIAL_MAP_CUBEMAP    ← 7   ⍝ Cubemap material (NOTE: Uses GL_TEXTURE_CUBE_MAP)
  MATERIAL_MAP_IRRADIANCE ← 8   ⍝ Irradiance material (NOTE: Uses GL_TEXTURE_CUBE_MAP)
  MATERIAL_MAP_PREFILTER  ← 9   ⍝ Prefilter material (NOTE: Uses GL_TEXTURE_CUBE_MAP)
  MATERIAL_MAP_BRDF       ← 10  ⍝ Brdf material
:EndNamespace

:Namespace ShaderLocationIndex ⍝ Shader location index
  SHADER_LOC_VERTEX_POSITION   ← 0   ⍝ Shader location: vertex attribute: position
  SHADER_LOC_VERTEX_TEXCOORD01 ← 1   ⍝ Shader location: vertex attribute: texcoord01
  SHADER_LOC_VERTEX_TEXCOORD02 ← 2   ⍝ Shader location: vertex attribute: texcoord02
  SHADER_LOC_VERTEX_NORMAL     ← 3   ⍝ Shader location: vertex attribute: normal
  SHADER_LOC_VERTEX_TANGENT    ← 4   ⍝ Shader location: vertex attribute: tangent
  SHADER_LOC_VERTEX_COLOR      ← 5   ⍝ Shader location: vertex attribute: color
  SHADER_LOC_MATRIX_MVP        ← 6   ⍝ Shader location: matrix uniform: model-view-projection
  SHADER_LOC_MATRIX_VIEW       ← 7   ⍝ Shader location: matrix uniform: view (camera transform)
  SHADER_LOC_MATRIX_PROJECTION ← 8   ⍝ Shader location: matrix uniform: projection
  SHADER_LOC_MATRIX_MODEL      ← 9   ⍝ Shader location: matrix uniform: model (transform)
  SHADER_LOC_MATRIX_NORMAL     ← 10  ⍝ Shader location: matrix uniform: normal
  SHADER_LOC_VECTOR_VIEW       ← 11  ⍝ Shader location: vector uniform: view
  SHADER_LOC_COLOR_DIFFUSE     ← 12  ⍝ Shader location: vector uniform: diffuse color
  SHADER_LOC_COLOR_SPECULAR    ← 13  ⍝ Shader location: vector uniform: specular color
  SHADER_LOC_COLOR_AMBIENT     ← 14  ⍝ Shader location: vector uniform: ambient color
  SHADER_LOC_MAP_ALBEDO        ← 15  ⍝ Shader location: sampler2d texture: albedo (same as: SHADER_LOC_MAP_DIFFUSE)
  SHADER_LOC_MAP_METALNESS     ← 16  ⍝ Shader location: sampler2d texture: metalness (same as: SHADER_LOC_MAP_SPECULAR)
  SHADER_LOC_MAP_NORMAL        ← 17  ⍝ Shader location: sampler2d texture: normal
  SHADER_LOC_MAP_ROUGHNESS     ← 18  ⍝ Shader location: sampler2d texture: roughness
  SHADER_LOC_MAP_OCCLUSION     ← 19  ⍝ Shader location: sampler2d texture: occlusion
  SHADER_LOC_MAP_EMISSION      ← 20  ⍝ Shader location: sampler2d texture: emission
  SHADER_LOC_MAP_HEIGHT        ← 21  ⍝ Shader location: sampler2d texture: height
  SHADER_LOC_MAP_CUBEMAP       ← 22  ⍝ Shader location: samplerCube texture: cubemap
  SHADER_LOC_MAP_IRRADIANCE    ← 23  ⍝ Shader location: samplerCube texture: irradiance
  SHADER_LOC_MAP_PREFILTER     ← 24  ⍝ Shader location: samplerCube texture: prefilter
  SHADER_LOC_MAP_BRDF          ← 25  ⍝ Shader location: sampler2d texture: brdf
:EndNamespace

:Namespace ShaderUniformDataType ⍝ Shader uniform data type
  SHADER_UNIFORM_FLOAT     ← 0  ⍝ Shader uniform type: float
  SHADER_UNIFORM_VEC2      ← 1  ⍝ Shader uniform type: vec2 (2 float)
  SHADER_UNIFORM_VEC3      ← 2  ⍝ Shader uniform type: vec3 (3 float)
  SHADER_UNIFORM_VEC4      ← 3  ⍝ Shader uniform type: vec4 (4 float)
  SHADER_UNIFORM_INT       ← 4  ⍝ Shader uniform type: int
  SHADER_UNIFORM_IVEC2     ← 5  ⍝ Shader uniform type: ivec2 (2 int)
  SHADER_UNIFORM_IVEC3     ← 6  ⍝ Shader uniform type: ivec3 (3 int)
  SHADER_UNIFORM_IVEC4     ← 7  ⍝ Shader uniform type: ivec4 (4 int)
  SHADER_UNIFORM_SAMPLER2D ← 8  ⍝ Shader uniform type: sampler2d
:EndNamespace

:Namespace ShaderAttributeDataType ⍝ Shader attribute data types
  SHADER_ATTRIB_FLOAT ← 0  ⍝ Shader attribute type: float
  SHADER_ATTRIB_VEC2  ← 1  ⍝ Shader attribute type: vec2 (2 float)
  SHADER_ATTRIB_VEC3  ← 2  ⍝ Shader attribute type: vec3 (3 float)
  SHADER_ATTRIB_VEC4  ← 3  ⍝ Shader attribute type: vec4 (4 float)
:EndNamespace

:Namespace PixelFormat ⍝ Pixel formats
  PIXELFORMAT_UNCOMPRESSED_GRAYSCALE    ← 1   ⍝ 8 bit per pixel (no alpha)
  PIXELFORMAT_UNCOMPRESSED_GRAY_ALPHA   ← 2   ⍝ 8*2 bpp (2 channels)
  PIXELFORMAT_UNCOMPRESSED_R5G6B5       ← 3   ⍝ 16 bpp
  PIXELFORMAT_UNCOMPRESSED_R8G8B8       ← 4   ⍝ 24 bpp
  PIXELFORMAT_UNCOMPRESSED_R5G5B5A1     ← 5   ⍝ 16 bpp (1 bit alpha)
  PIXELFORMAT_UNCOMPRESSED_R4G4B4A4     ← 6   ⍝ 16 bpp (4 bit alpha)
  PIXELFORMAT_UNCOMPRESSED_R8G8B8A8     ← 7   ⍝ 32 bpp
  PIXELFORMAT_UNCOMPRESSED_R32          ← 8   ⍝ 32 bpp (1 channel - float)
  PIXELFORMAT_UNCOMPRESSED_R32G32B32    ← 9   ⍝ 32*3 bpp (3 channels - float)
  PIXELFORMAT_UNCOMPRESSED_R32G32B32A32 ← 10  ⍝ 32*4 bpp (4 channels - float)
  PIXELFORMAT_UNCOMPRESSED_R16          ← 11  ⍝ 16 bpp (1 channel - half float)
  PIXELFORMAT_UNCOMPRESSED_R16G16B16    ← 12  ⍝ 16*3 bpp (3 channels - half float)
  PIXELFORMAT_UNCOMPRESSED_R16G16B16A16 ← 13  ⍝ 16*4 bpp (4 channels - half float)
  PIXELFORMAT_COMPRESSED_DXT1_RGB       ← 14  ⍝ 4 bpp (no alpha)
  PIXELFORMAT_COMPRESSED_DXT1_RGBA      ← 15  ⍝ 4 bpp (1 bit alpha)
  PIXELFORMAT_COMPRESSED_DXT3_RGBA      ← 16  ⍝ 8 bpp
  PIXELFORMAT_COMPRESSED_DXT5_RGBA      ← 17  ⍝ 8 bpp
  PIXELFORMAT_COMPRESSED_ETC1_RGB       ← 18  ⍝ 4 bpp
  PIXELFORMAT_COMPRESSED_ETC2_RGB       ← 19  ⍝ 4 bpp
  PIXELFORMAT_COMPRESSED_ETC2_EAC_RGBA  ← 20  ⍝ 8 bpp
  PIXELFORMAT_COMPRESSED_PVRT_RGB       ← 21  ⍝ 4 bpp
  PIXELFORMAT_COMPRESSED_PVRT_RGBA      ← 22  ⍝ 4 bpp
  PIXELFORMAT_COMPRESSED_ASTC_4x4_RGBA  ← 23  ⍝ 8 bpp
  PIXELFORMAT_COMPRESSED_ASTC_8x8_RGBA  ← 24  ⍝ 2 bpp
:EndNamespace

:Namespace TextureFilter ⍝ Texture parameters: filter mode
  TEXTURE_FILTER_POINT           ← 0  ⍝ No filter, just pixel approximation
  TEXTURE_FILTER_BILINEAR        ← 1  ⍝ Linear filtering
  TEXTURE_FILTER_TRILINEAR       ← 2  ⍝ Trilinear filtering (linear with mipmaps)
  TEXTURE_FILTER_ANISOTROPIC_4X  ← 3  ⍝ Anisotropic filtering 4x
  TEXTURE_FILTER_ANISOTROPIC_8X  ← 4  ⍝ Anisotropic filtering 8x
  TEXTURE_FILTER_ANISOTROPIC_16X ← 5  ⍝ Anisotropic filtering 16x
:EndNamespace

:Namespace TextureWrap ⍝ Texture parameters: wrap mode
  TEXTURE_WRAP_REPEAT        ← 0  ⍝ Repeats texture in tiled mode
  TEXTURE_WRAP_CLAMP         ← 1  ⍝ Clamps texture to edge pixel in tiled mode
  TEXTURE_WRAP_MIRROR_REPEAT ← 2  ⍝ Mirrors and repeats the texture in tiled mode
  TEXTURE_WRAP_MIRROR_CLAMP  ← 3  ⍝ Mirrors and clamps to border the texture in tiled mode
:EndNamespace

:Namespace CubemapLayout ⍝ Cubemap layouts
  CUBEMAP_LAYOUT_AUTO_DETECT         ← 0  ⍝ Automatically detect layout type
  CUBEMAP_LAYOUT_LINE_VERTICAL       ← 1  ⍝ Layout is defined by a vertical line with faces
  CUBEMAP_LAYOUT_LINE_HORIZONTAL     ← 2  ⍝ Layout is defined by a horizontal line with faces
  CUBEMAP_LAYOUT_CROSS_THREE_BY_FOUR ← 3  ⍝ Layout is defined by a 3x4 cross with cubemap faces
  CUBEMAP_LAYOUT_CROSS_FOUR_BY_THREE ← 4  ⍝ Layout is defined by a 4x3 cross with cubemap faces
  CUBEMAP_LAYOUT_PANORAMA            ← 5  ⍝ Layout is defined by a panorama image (equirrectangular map)
:EndNamespace

:Namespace FontType ⍝ Font type, defines generation method
  FONT_DEFAULT ← 0  ⍝ Default font generation, anti-aliased
  FONT_BITMAP  ← 1  ⍝ Bitmap font generation, no anti-aliasing
  FONT_SDF     ← 2  ⍝ SDF font generation, requires external shader
:EndNamespace

:Namespace BlendMode ⍝ Color blending modes (pre-defined)
  BLEND_ALPHA             ← 0  ⍝ Blend textures considering alpha (default)
  BLEND_ADDITIVE          ← 1  ⍝ Blend textures adding colors
  BLEND_MULTIPLIED        ← 2  ⍝ Blend textures multiplying colors
  BLEND_ADD_COLORS        ← 3  ⍝ Blend textures adding colors (alternative)
  BLEND_SUBTRACT_COLORS   ← 4  ⍝ Blend textures subtracting colors (alternative)
  BLEND_ALPHA_PREMULTIPLY ← 5  ⍝ Blend premultiplied textures considering alpha
  BLEND_CUSTOM            ← 6  ⍝ Blend textures using custom src/dst factors (use rlSetBlendFactors())
  BLEND_CUSTOM_SEPARATE   ← 7  ⍝ Blend textures using custom rgb/alpha separate src/dst factors (use rlSetBlendFactorsSeparate())
:EndNamespace

:Namespace Gesture ⍝ Gesture
  GESTURE_NONE        ← 0    ⍝ No gesture
  GESTURE_TAP         ← 1    ⍝ Tap gesture
  GESTURE_DOUBLETAP   ← 2    ⍝ Double tap gesture
  GESTURE_HOLD        ← 4    ⍝ Hold gesture
  GESTURE_DRAG        ← 8    ⍝ Drag gesture
  GESTURE_SWIPE_RIGHT ← 16   ⍝ Swipe right gesture
  GESTURE_SWIPE_LEFT  ← 32   ⍝ Swipe left gesture
  GESTURE_SWIPE_UP    ← 64   ⍝ Swipe up gesture
  GESTURE_SWIPE_DOWN  ← 128  ⍝ Swipe down gesture
  GESTURE_PINCH_IN    ← 256  ⍝ Pinch in gesture
  GESTURE_PINCH_OUT   ← 512  ⍝ Pinch out gesture
:EndNamespace

:Namespace CameraMode ⍝ Camera system modes
  CAMERA_CUSTOM       ← 0  ⍝ Custom camera
  CAMERA_FREE         ← 1  ⍝ Free camera
  CAMERA_ORBITAL      ← 2  ⍝ Orbital camera
  CAMERA_FIRST_PERSON ← 3  ⍝ First person camera
  CAMERA_THIRD_PERSON ← 4  ⍝ Third person camera
:EndNamespace

:Namespace CameraProjection ⍝ Camera projection
  CAMERA_PERSPECTIVE  ← 0  ⍝ Perspective projection
  CAMERA_ORTHOGRAPHIC ← 1  ⍝ Orthographic projection
:EndNamespace

:Namespace NPatchLayout ⍝ N-patch layout
  NPATCH_NINE_PATCH             ← 0  ⍝ Npatch layout: 3x3 tiles
  NPATCH_THREE_PATCH_VERTICAL   ← 1  ⍝ Npatch layout: 1x3 tiles
  NPATCH_THREE_PATCH_HORIZONTAL ← 2  ⍝ Npatch layout: 3x1 tiles
:EndNamespace



v2 ← ⍬ ⍝ Vector2, 2 components
  v2,←⊂ f ⍝ x  ⍝ Vector x component
  v2,←⊂ f ⍝ y  ⍝ Vector y component

v3 ← ⍬ ⍝ Vector3, 3 components
  v3,←⊂ f ⍝ x  ⍝ Vector x component
  v3,←⊂ f ⍝ y  ⍝ Vector y component
  v3,←⊂ f ⍝ z  ⍝ Vector z component

v4 ← ⍬ ⍝ Vector4, 4 components
  v4,←⊂ f ⍝ x  ⍝ Vector x component
  v4,←⊂ f ⍝ y  ⍝ Vector y component
  v4,←⊂ f ⍝ z  ⍝ Vector z component
  v4,←⊂ f ⍝ w  ⍝ Vector w component
Quaternion ← v4 ⍝ Quaternion, 4 components (Vector4 alias)

Matrix ← ⍬ ⍝ Matrix, 4x4 components, column major, OpenGL style, right-handed
  Matrix,←⊂ f ⍝ m0   ⍝ Matrix first row (4 components)
  Matrix,←⊂ f ⍝ m4   ⍝ Matrix first row (4 components)
  Matrix,←⊂ f ⍝ m8   ⍝ Matrix first row (4 components)
  Matrix,←⊂ f ⍝ m12  ⍝ Matrix first row (4 components)
  Matrix,←⊂ f ⍝ m1   ⍝ Matrix second row (4 components)
  Matrix,←⊂ f ⍝ m5   ⍝ Matrix second row (4 components)
  Matrix,←⊂ f ⍝ m9   ⍝ Matrix second row (4 components)
  Matrix,←⊂ f ⍝ m13  ⍝ Matrix second row (4 components)
  Matrix,←⊂ f ⍝ m2   ⍝ Matrix third row (4 components)
  Matrix,←⊂ f ⍝ m6   ⍝ Matrix third row (4 components)
  Matrix,←⊂ f ⍝ m10  ⍝ Matrix third row (4 components)
  Matrix,←⊂ f ⍝ m14  ⍝ Matrix third row (4 components)
  Matrix,←⊂ f ⍝ m3   ⍝ Matrix fourth row (4 components)
  Matrix,←⊂ f ⍝ m7   ⍝ Matrix fourth row (4 components)
  Matrix,←⊂ f ⍝ m11  ⍝ Matrix fourth row (4 components)
  Matrix,←⊂ f ⍝ m15  ⍝ Matrix fourth row (4 components)

Color ← ⍬ ⍝ Color, 4 components, R8G8B8A8 (32bit)
  Color,←⊂ u1 ⍝ r  ⍝ Color red value
  Color,←⊂ u1 ⍝ g  ⍝ Color green value
  Color,←⊂ u1 ⍝ b  ⍝ Color blue value
  Color,←⊂ u1 ⍝ a  ⍝ Color alpha value

Rectangle ← ⍬ ⍝ Rectangle, 4 components
  Rectangle,←⊂ f ⍝ x       ⍝ Rectangle top-left corner position x
  Rectangle,←⊂ f ⍝ y       ⍝ Rectangle top-left corner position y
  Rectangle,←⊂ f ⍝ width   ⍝ Rectangle width
  Rectangle,←⊂ f ⍝ height  ⍝ Rectangle height

Image ← ⍬ ⍝ Image, pixel data stored in CPU memory (RAM)
  Image,←⊂ ptr ⍝ data     ⍝ Image raw data
  Image,←⊂ i   ⍝ width    ⍝ Image base width
  Image,←⊂ i   ⍝ height   ⍝ Image base height
  Image,←⊂ i   ⍝ mipmaps  ⍝ Mipmap levels, 1 by default
  Image,←⊂ i   ⍝ format   ⍝ Data format (PixelFormat type)

Texture ← ⍬ ⍝ Texture, tex data stored in GPU memory (VRAM)
  Texture,←⊂ u ⍝ id       ⍝ OpenGL texture id
  Texture,←⊂ i ⍝ width    ⍝ Texture base width
  Texture,←⊂ i ⍝ height   ⍝ Texture base height
  Texture,←⊂ i ⍝ mipmaps  ⍝ Mipmap levels, 1 by default
  Texture,←⊂ i ⍝ format   ⍝ Data format (PixelFormat type)
Texture2D ← Texture ⍝ Texture2D, same as Texture
TextureCubemap ← Texture ⍝ TextureCubemap, same as Texture

RenderTexture ← ⍬ ⍝ RenderTexture, fbo for texture rendering
  RenderTexture,←⊂ u       ⍝ id       ⍝ OpenGL framebuffer object id
  RenderTexture,←⊂ Texture ⍝ texture  ⍝ Color buffer attachment texture
  RenderTexture,←⊂ Texture ⍝ depth    ⍝ Depth buffer attachment texture
RenderTexture2D ← RenderTexture ⍝ RenderTexture2D, same as RenderTexture

NPatchInfo ← ⍬ ⍝ NPatchInfo, n-patch layout info
  NPatchInfo,←⊂ Rectangle ⍝ source  ⍝ Texture source rectangle
  NPatchInfo,←⊂ i         ⍝ left    ⍝ Left border offset
  NPatchInfo,←⊂ i         ⍝ top     ⍝ Top border offset
  NPatchInfo,←⊂ i         ⍝ right   ⍝ Right border offset
  NPatchInfo,←⊂ i         ⍝ bottom  ⍝ Bottom border offset
  NPatchInfo,←⊂ i         ⍝ layout  ⍝ Layout of the n-patch: 3x3, 1x3 or 3x1

GlyphInfo ← ⍬ ⍝ GlyphInfo, font characters glyphs info
  GlyphInfo,←⊂ i     ⍝ value     ⍝ Character value (Unicode)
  GlyphInfo,←⊂ i     ⍝ offsetX   ⍝ Character offset X when drawing
  GlyphInfo,←⊂ i     ⍝ offsetY   ⍝ Character offset Y when drawing
  GlyphInfo,←⊂ i     ⍝ advanceX  ⍝ Character advance position X
  GlyphInfo,←⊂ Image ⍝ image     ⍝ Character image data

Font ← ⍬ ⍝ Font, font texture and GlyphInfo array data
  Font,←⊂ i             ⍝ baseSize      ⍝ Base size (default chars height)
  Font,←⊂ i             ⍝ glyphCount    ⍝ Number of glyph characters
  Font,←⊂ i             ⍝ glyphPadding  ⍝ Padding around the glyph characters
  Font,←⊂ Texture2D     ⍝ texture       ⍝ Texture atlas containing the glyphs
  Font,←⊂ '=',Rectangle ⍝ recs          ⍝ Rectangles in texture for the glyphs
  Font,←⊂ '=',GlyphInfo ⍝ glyphs        ⍝ Glyphs info data

Camera3D ← ⍬ ⍝ Camera, defines position/orientation in 3d space
  Camera3D,←⊂ v3 ⍝ position    ⍝ Camera position
  Camera3D,←⊂ v3 ⍝ target      ⍝ Camera target it looks-at
  Camera3D,←⊂ v3 ⍝ up          ⍝ Camera up vector (rotation over its axis)
  Camera3D,←⊂ f  ⍝ fovy        ⍝ Camera field-of-view aperture in Y (degrees) in perspective, used as near plane width in orthographic
  Camera3D,←⊂ i  ⍝ projection  ⍝ Camera projection: CAMERA_PERSPECTIVE or CAMERA_ORTHOGRAPHIC
Camera ← Camera3D ⍝ Camera type fallback, defaults to Camera3D

Camera2D ← ⍬ ⍝ Camera2D, defines position/orientation in 2d space
  Camera2D,←⊂ v2 ⍝ offset    ⍝ Camera offset (displacement from target)
  Camera2D,←⊂ v2 ⍝ target    ⍝ Camera target (rotation and zoom origin)
  Camera2D,←⊂ f  ⍝ rotation  ⍝ Camera rotation in degrees
  Camera2D,←⊂ f  ⍝ zoom      ⍝ Camera zoom (scaling), should be 1.0f by default

Mesh ← ⍬ ⍝ Mesh, vertex data and vao/vbo
  Mesh,←⊂ i      ⍝ vertexCount    ⍝ Number of vertices stored in arrays
  Mesh,←⊂ i      ⍝ triangleCount  ⍝ Number of triangles stored (indexed or not)
  Mesh,←⊂ '=',f  ⍝ vertices       ⍝ Vertex position (XYZ - 3 components per vertex) (shader-location = 0)
  Mesh,←⊂ '=',f  ⍝ texcoords      ⍝ Vertex texture coordinates (UV - 2 components per vertex) (shader-location = 1)
  Mesh,←⊂ '=',f  ⍝ texcoords2     ⍝ Vertex texture second coordinates (UV - 2 components per vertex) (shader-location = 5)
  Mesh,←⊂ '=',f  ⍝ normals        ⍝ Vertex normals (XYZ - 3 components per vertex) (shader-location = 2)
  Mesh,←⊂ '=',f  ⍝ tangents       ⍝ Vertex tangents (XYZW - 4 components per vertex) (shader-location = 4)
  Mesh,←⊂ ustr   ⍝ colors         ⍝ Vertex colors (RGBA - 4 components per vertex) (shader-location = 3)
  Mesh,←⊂ '=',u2 ⍝ indices        ⍝ Vertex indices (in case vertex data comes indexed)
  Mesh,←⊂ '=',f  ⍝ animVertices   ⍝ Animated vertex positions (after bones transformations)
  Mesh,←⊂ '=',f  ⍝ animNormals    ⍝ Animated normals (after bones transformations)
  Mesh,←⊂ ustr   ⍝ boneIds        ⍝ Vertex bone ids, max 255 bone ids, up to 4 bones influence by vertex (skinning)
  Mesh,←⊂ '=',f  ⍝ boneWeights    ⍝ Vertex bone weight, up to 4 bones influence by vertex (skinning)
  Mesh,←⊂ u      ⍝ vaoId          ⍝ OpenGL Vertex Array Object id
  Mesh,←⊂ '=',u  ⍝ vboId          ⍝ OpenGL Vertex Buffer Objects id (default vertex data)

Shader ← ⍬ ⍝ Shader
  Shader,←⊂ u     ⍝ id    ⍝ Shader program id
  Shader,←⊂ '=',i ⍝ locs  ⍝ Shader locations array (RL_MAX_SHADER_LOCATIONS)

MaterialMap ← ⍬ ⍝ MaterialMap
  MaterialMap,←⊂ Texture2D ⍝ texture  ⍝ Material map texture
  MaterialMap,←⊂ Color     ⍝ color    ⍝ Material map color
  MaterialMap,←⊂ f         ⍝ value    ⍝ Material map value

Material ← ⍬ ⍝ Material, includes shader and maps
  Material,←⊂ Shader          ⍝ shader  ⍝ Material shader
  Material,←⊂ '=',MaterialMap ⍝ maps    ⍝ Material maps array (MAX_MATERIAL_MAPS)
  Material,←⊂ f,'[4]'         ⍝ params  ⍝ Material generic parameters (if required)

Transform ← ⍬ ⍝ Transform, vertex transformation data
  Transform,←⊂ v3         ⍝ translation  ⍝ Translation
  Transform,←⊂ Quaternion ⍝ rotation     ⍝ Rotation
  Transform,←⊂ v3         ⍝ scale        ⍝ Scale

BoneInfo ← ⍬ ⍝ Bone, skeletal animation bone
  BoneInfo,←⊂ u1,'[32]' ⍝ name    ⍝ Bone name
  BoneInfo,←⊂ i         ⍝ parent  ⍝ Bone parent

Model ← ⍬ ⍝ Model, meshes, materials and animation data
  Model,←⊂ Matrix        ⍝ transform      ⍝ Local transform matrix
  Model,←⊂ i             ⍝ meshCount      ⍝ Number of meshes
  Model,←⊂ i             ⍝ materialCount  ⍝ Number of materials
  Model,←⊂ '=',Mesh      ⍝ meshes         ⍝ Meshes array
  Model,←⊂ '=',Material  ⍝ materials      ⍝ Materials array
  Model,←⊂ '=',i         ⍝ meshMaterial   ⍝ Mesh material number
  Model,←⊂ i             ⍝ boneCount      ⍝ Number of bones
  Model,←⊂ '=',BoneInfo  ⍝ bones          ⍝ Bones information (skeleton)
  Model,←⊂ '=',Transform ⍝ bindPose       ⍝ Bones base transformation (pose)

ModelAnimation ← ⍬ ⍝ ModelAnimation
  ModelAnimation,←⊂ i              ⍝ boneCount   ⍝ Number of bones
  ModelAnimation,←⊂ i              ⍝ frameCount  ⍝ Number of animation frames
  ModelAnimation,←⊂ '=',BoneInfo   ⍝ bones       ⍝ Bones information (skeleton)
  ModelAnimation,←⊂ '==',Transform ⍝ framePoses  ⍝ Poses array by frame
  ModelAnimation,←⊂ u1,'[32]'      ⍝ name        ⍝ Animation name

Ray ← ⍬ ⍝ Ray, ray for raycasting
  Ray,←⊂ v3 ⍝ position   ⍝ Ray position (origin)
  Ray,←⊂ v3 ⍝ direction  ⍝ Ray direction

RayCollision ← ⍬ ⍝ RayCollision, ray hit information
  RayCollision,←⊂ bool ⍝ hit       ⍝ Did the ray hit something?
  RayCollision,←⊂ f    ⍝ distance  ⍝ Distance to the nearest hit
  RayCollision,←⊂ v3   ⍝ point     ⍝ Point of the nearest hit
  RayCollision,←⊂ v3   ⍝ normal    ⍝ Surface normal of hit

BoundingBox ← ⍬ ⍝ BoundingBox
  BoundingBox,←⊂ v3 ⍝ min  ⍝ Minimum vertex box-corner
  BoundingBox,←⊂ v3 ⍝ max  ⍝ Maximum vertex box-corner

Wave ← ⍬ ⍝ Wave, audio wave data
  Wave,←⊂ u   ⍝ frameCount  ⍝ Total number of frames (considering channels)
  Wave,←⊂ u   ⍝ sampleRate  ⍝ Frequency (samples per second)
  Wave,←⊂ u   ⍝ sampleSize  ⍝ Bit depth (bits per sample): 8, 16, 32 (24 not supported)
  Wave,←⊂ u   ⍝ channels    ⍝ Number of channels (1-mono, 2-stereo, ...)
  Wave,←⊂ ptr ⍝ data        ⍝ Buffer data pointer

AudioStream ← ⍬ ⍝ AudioStream, custom audio stream
  AudioStream,←⊂ ptr ⍝ buffer      ⍝ Pointer to internal data used by the audio system
  AudioStream,←⊂ ptr ⍝ processor   ⍝ Pointer to internal data processor, useful for audio effects
  AudioStream,←⊂ u   ⍝ sampleRate  ⍝ Frequency (samples per second)
  AudioStream,←⊂ u   ⍝ sampleSize  ⍝ Bit depth (bits per sample): 8, 16, 32 (24 not supported)
  AudioStream,←⊂ u   ⍝ channels    ⍝ Number of channels (1-mono, 2-stereo, ...)

Sound ← ⍬ ⍝ Sound
  Sound,←⊂ AudioStream ⍝ stream      ⍝ Audio stream
  Sound,←⊂ u           ⍝ frameCount  ⍝ Total number of frames (considering channels)

Music ← ⍬ ⍝ Music, audio stream, anything longer than ~10 seconds should be streamed
  Music,←⊂ AudioStream ⍝ stream      ⍝ Audio stream
  Music,←⊂ u           ⍝ frameCount  ⍝ Total number of frames (considering channels)
  Music,←⊂ bool        ⍝ looping     ⍝ Music looping enable
  Music,←⊂ i           ⍝ ctxType     ⍝ Type of music context (audio filetype)
  Music,←⊂ ptr         ⍝ ctxData     ⍝ Audio context data, depends on type

VrDeviceInfo ← ⍬ ⍝ VrDeviceInfo, Head-Mounted-Display device parameters
  VrDeviceInfo,←⊂ i       ⍝ hResolution             ⍝ Horizontal resolution in pixels
  VrDeviceInfo,←⊂ i       ⍝ vResolution             ⍝ Vertical resolution in pixels
  VrDeviceInfo,←⊂ f       ⍝ hScreenSize             ⍝ Horizontal size in meters
  VrDeviceInfo,←⊂ f       ⍝ vScreenSize             ⍝ Vertical size in meters
  VrDeviceInfo,←⊂ f       ⍝ vScreenCenter           ⍝ Screen center in meters
  VrDeviceInfo,←⊂ f       ⍝ eyeToScreenDistance     ⍝ Distance between eye and display in meters
  VrDeviceInfo,←⊂ f       ⍝ lensSeparationDistance  ⍝ Lens separation distance in meters
  VrDeviceInfo,←⊂ f       ⍝ interpupillaryDistance  ⍝ IPD (distance between pupils) in meters
  VrDeviceInfo,←⊂ f,'[4]' ⍝ lensDistortionValues    ⍝ Lens distortion constant parameters
  VrDeviceInfo,←⊂ f,'[4]' ⍝ chromaAbCorrection      ⍝ Chromatic aberration correction parameters

VrStereoConfig ← ⍬ ⍝ VrStereoConfig, VR stereo rendering configuration for simulator
  VrStereoConfig,←⊂ Matrix,'[2]' ⍝ projection         ⍝ VR projection matrices (per eye)
  VrStereoConfig,←⊂ Matrix,'[2]' ⍝ viewOffset         ⍝ VR view offset matrices (per eye)
  VrStereoConfig,←⊂ f,'[2]'      ⍝ leftLensCenter     ⍝ VR left lens center
  VrStereoConfig,←⊂ f,'[2]'      ⍝ rightLensCenter    ⍝ VR right lens center
  VrStereoConfig,←⊂ f,'[2]'      ⍝ leftScreenCenter   ⍝ VR left screen center
  VrStereoConfig,←⊂ f,'[2]'      ⍝ rightScreenCenter  ⍝ VR right screen center
  VrStereoConfig,←⊂ f,'[2]'      ⍝ scale              ⍝ VR distortion scale
  VrStereoConfig,←⊂ f,'[2]'      ⍝ scaleIn            ⍝ VR distortion scale in

FilePathList ← ⍬ ⍝ File path list
  FilePathList,←⊂ u       ⍝ capacity  ⍝ Filepaths max entries
  FilePathList,←⊂ u       ⍝ count     ⍝ Filepaths entries count
  FilePathList,←⊂ '=',str ⍝ paths     ⍝ Filepaths entries

AutomationEvent ← ⍬ ⍝ Automation event
  AutomationEvent,←⊂ u       ⍝ frame   ⍝ Event frame
  AutomationEvent,←⊂ u       ⍝ type    ⍝ Event type (AutomationEventType)
  AutomationEvent,←⊂ i,'[4]' ⍝ params  ⍝ Event parameters (if required)

AutomationEventList ← ⍬ ⍝ Automation event list
  AutomationEventList,←⊂ u                   ⍝ capacity  ⍝ Events max entries (MAX_AUTOMATION_EVENTS)
  AutomationEventList,←⊂ u                   ⍝ count     ⍝ Events entries count
  AutomationEventList,←⊂ '=',AutomationEvent ⍝ events    ⍝ Events entries

⍝ Mode is either 3:All changes, 2:only manual changes 1:only automatic changes, or 0: no changes
∇{mode} Init pathToBinaryArg
:If ⍬≡pathToBinaryArg
  pathToBinaryArg ← {⍵:'../libtemp-c-raylib.so'⋄'..\raylib.dll'}'Linux'≡'-64'~⍨⊃#⎕WG'APLVersion'
:Endif
pathToBinary ← pathToBinaryArg
:If 0=⎕NC 'mode'
  mode ← 3 ⍝ Default is All changes
:EndIf

'InitWindowRAYLIB'                       (⎕NA⊢⎕NA⍤⊢)                     R('InitWindow'                        (i i str                                             )) ⍝ width height title                                                ⍝ Initialize window and OpenGL context
'CloseWindowRAYLIB'                      (⎕NA⊢⎕NA⍤⊢)                     R('CloseWindow'                       (⍬                                                   )) ⍝                                                                   ⍝ Close window and unload OpenGL context
'WindowShouldCloseRAYLIB'                (⎕NA⊢⎕NA⍤⊢) bool                R('WindowShouldClose'                 (⍬                                                   )) ⍝                                                                   ⍝ Check if application should close (KEY_ESCAPE pressed or windows close icon clicked)
'WindowShouldCloseRetPtrRAYLIB'          (⎕NA⊢⎕NA⍤⊢)                     R('WindowShouldCloseRetPtr'           (,⊂ ('>',bool)                                       )) ⍝                                                                   ⍝ Check if application should close (KEY_ESCAPE pressed or windows close icon clicked)
'IsWindowReadyRAYLIB'                    (⎕NA⊢⎕NA⍤⊢) bool                R('IsWindowReady'                     (⍬                                                   )) ⍝                                                                   ⍝ Check if window has been initialized successfully
'IsWindowReadyRetPtrRAYLIB'              (⎕NA⊢⎕NA⍤⊢)                     R('IsWindowReadyRetPtr'               (,⊂ ('>',bool)                                       )) ⍝                                                                   ⍝ Check if window has been initialized successfully
'IsWindowFullscreenRAYLIB'               (⎕NA⊢⎕NA⍤⊢) bool                R('IsWindowFullscreen'                (⍬                                                   )) ⍝                                                                   ⍝ Check if window is currently fullscreen
'IsWindowFullscreenRetPtrRAYLIB'         (⎕NA⊢⎕NA⍤⊢)                     R('IsWindowFullscreenRetPtr'          (,⊂ ('>',bool)                                       )) ⍝                                                                   ⍝ Check if window is currently fullscreen
'IsWindowHiddenRAYLIB'                   (⎕NA⊢⎕NA⍤⊢) bool                R('IsWindowHidden'                    (⍬                                                   )) ⍝                                                                   ⍝ Check if window is currently hidden (only PLATFORM_DESKTOP)
'IsWindowHiddenRetPtrRAYLIB'             (⎕NA⊢⎕NA⍤⊢)                     R('IsWindowHiddenRetPtr'              (,⊂ ('>',bool)                                       )) ⍝                                                                   ⍝ Check if window is currently hidden (only PLATFORM_DESKTOP)
'IsWindowMinimizedRAYLIB'                (⎕NA⊢⎕NA⍤⊢) bool                R('IsWindowMinimized'                 (⍬                                                   )) ⍝                                                                   ⍝ Check if window is currently minimized (only PLATFORM_DESKTOP)
'IsWindowMinimizedRetPtrRAYLIB'          (⎕NA⊢⎕NA⍤⊢)                     R('IsWindowMinimizedRetPtr'           (,⊂ ('>',bool)                                       )) ⍝                                                                   ⍝ Check if window is currently minimized (only PLATFORM_DESKTOP)
'IsWindowMaximizedRAYLIB'                (⎕NA⊢⎕NA⍤⊢) bool                R('IsWindowMaximized'                 (⍬                                                   )) ⍝                                                                   ⍝ Check if window is currently maximized (only PLATFORM_DESKTOP)
'IsWindowMaximizedRetPtrRAYLIB'          (⎕NA⊢⎕NA⍤⊢)                     R('IsWindowMaximizedRetPtr'           (,⊂ ('>',bool)                                       )) ⍝                                                                   ⍝ Check if window is currently maximized (only PLATFORM_DESKTOP)
'IsWindowFocusedRAYLIB'                  (⎕NA⊢⎕NA⍤⊢) bool                R('IsWindowFocused'                   (⍬                                                   )) ⍝                                                                   ⍝ Check if window is currently focused (only PLATFORM_DESKTOP)
'IsWindowFocusedRetPtrRAYLIB'            (⎕NA⊢⎕NA⍤⊢)                     R('IsWindowFocusedRetPtr'             (,⊂ ('>',bool)                                       )) ⍝                                                                   ⍝ Check if window is currently focused (only PLATFORM_DESKTOP)
'IsWindowResizedRAYLIB'                  (⎕NA⊢⎕NA⍤⊢) bool                R('IsWindowResized'                   (⍬                                                   )) ⍝                                                                   ⍝ Check if window has been resized last frame
'IsWindowResizedRetPtrRAYLIB'            (⎕NA⊢⎕NA⍤⊢)                     R('IsWindowResizedRetPtr'             (,⊂ ('>',bool)                                       )) ⍝                                                                   ⍝ Check if window has been resized last frame
'IsWindowStateRAYLIB'                    (⎕NA⊢⎕NA⍤⊢) bool                R('IsWindowState'                     (,⊂ u                                                )) ⍝ flag                                                              ⍝ Check if one specific window flag is enabled
'IsWindowStateRetPtrRAYLIB'              (⎕NA⊢⎕NA⍤⊢)                     R('IsWindowStateRetPtr'               (('>',bool) u                                        )) ⍝ flag                                                              ⍝ Check if one specific window flag is enabled
'SetWindowStateRAYLIB'                   (⎕NA⊢⎕NA⍤⊢)                     R('SetWindowState'                    (,⊂ u                                                )) ⍝ flags                                                             ⍝ Set window configuration state using flags (only PLATFORM_DESKTOP)
'ClearWindowStateRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('ClearWindowState'                  (,⊂ u                                                )) ⍝ flags                                                             ⍝ Clear window configuration state flags
'ToggleFullscreenRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('ToggleFullscreen'                  (⍬                                                   )) ⍝                                                                   ⍝ Toggle window state: fullscreen/windowed (only PLATFORM_DESKTOP)
'ToggleBorderlessWindowedRAYLIB'         (⎕NA⊢⎕NA⍤⊢)                     R('ToggleBorderlessWindowed'          (⍬                                                   )) ⍝                                                                   ⍝ Toggle window state: borderless windowed (only PLATFORM_DESKTOP)
'MaximizeWindowRAYLIB'                   (⎕NA⊢⎕NA⍤⊢)                     R('MaximizeWindow'                    (⍬                                                   )) ⍝                                                                   ⍝ Set window state: maximized, if resizable (only PLATFORM_DESKTOP)
'MinimizeWindowRAYLIB'                   (⎕NA⊢⎕NA⍤⊢)                     R('MinimizeWindow'                    (⍬                                                   )) ⍝                                                                   ⍝ Set window state: minimized, if resizable (only PLATFORM_DESKTOP)
'RestoreWindowRAYLIB'                    (⎕NA⊢⎕NA⍤⊢)                     R('RestoreWindow'                     (⍬                                                   )) ⍝                                                                   ⍝ Set window state: not minimized/maximized (only PLATFORM_DESKTOP)
'SetWindowIconRAYLIB'                    (⎕NA⊢⎕NA⍤⊢)                     R('SetWindowIcon'                     (,⊂ Image                                            )) ⍝ image                                                             ⍝ Set icon for window (single image, RGBA 32bit, only PLATFORM_DESKTOP)
'SetWindowIconsRAYLIB'                   (⎕NA⊢⎕NA⍤⊢)                     R('SetWindowIcons'                    (('=',Image) i                                       )) ⍝ images count                                                      ⍝ Set icon for window (multiple images, RGBA 32bit, only PLATFORM_DESKTOP)
'SetWindowTitleRAYLIB'                   (⎕NA⊢⎕NA⍤⊢)                     R('SetWindowTitle'                    (,⊂ str                                              )) ⍝ title                                                             ⍝ Set title for window (only PLATFORM_DESKTOP and PLATFORM_WEB)
'SetWindowPositionRAYLIB'                (⎕NA⊢⎕NA⍤⊢)                     R('SetWindowPosition'                 (i i                                                 )) ⍝ x y                                                               ⍝ Set window position on screen (only PLATFORM_DESKTOP)
'SetWindowMonitorRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('SetWindowMonitor'                  (,⊂ i                                                )) ⍝ monitor                                                           ⍝ Set monitor for the current window
'SetWindowMinSizeRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('SetWindowMinSize'                  (i i                                                 )) ⍝ width height                                                      ⍝ Set window minimum dimensions (for FLAG_WINDOW_RESIZABLE)
'SetWindowMaxSizeRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('SetWindowMaxSize'                  (i i                                                 )) ⍝ width height                                                      ⍝ Set window maximum dimensions (for FLAG_WINDOW_RESIZABLE)
'SetWindowSizeRAYLIB'                    (⎕NA⊢⎕NA⍤⊢)                     R('SetWindowSize'                     (i i                                                 )) ⍝ width height                                                      ⍝ Set window dimensions
'SetWindowOpacityRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('SetWindowOpacity'                  (,⊂ f                                                )) ⍝ opacity                                                           ⍝ Set window opacity [0.0f..1.0f] (only PLATFORM_DESKTOP)
'SetWindowFocusedRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('SetWindowFocused'                  (⍬                                                   )) ⍝                                                                   ⍝ Set window focused (only PLATFORM_DESKTOP)
'GetWindowHandleRAYLIB'                  (⎕NA⊢⎕NA⍤⊢) ptr                 R('GetWindowHandle'                   (⍬                                                   )) ⍝                                                                   ⍝ Get native window handle
'GetWindowHandleRetPtrRAYLIB'            (⎕NA⊢⎕NA⍤⊢)                     R('GetWindowHandleRetPtr'             (,⊂ ('>',ptr)                                        )) ⍝                                                                   ⍝ Get native window handle
'GetScreenWidthRAYLIB'                   (⎕NA⊢⎕NA⍤⊢) i                   R('GetScreenWidth'                    (⍬                                                   )) ⍝                                                                   ⍝ Get current screen width
'GetScreenWidthRetPtrRAYLIB'             (⎕NA⊢⎕NA⍤⊢)                     R('GetScreenWidthRetPtr'              (,⊂ ('>',i)                                          )) ⍝                                                                   ⍝ Get current screen width
'GetScreenHeightRAYLIB'                  (⎕NA⊢⎕NA⍤⊢) i                   R('GetScreenHeight'                   (⍬                                                   )) ⍝                                                                   ⍝ Get current screen height
'GetScreenHeightRetPtrRAYLIB'            (⎕NA⊢⎕NA⍤⊢)                     R('GetScreenHeightRetPtr'             (,⊂ ('>',i)                                          )) ⍝                                                                   ⍝ Get current screen height
'GetRenderWidthRAYLIB'                   (⎕NA⊢⎕NA⍤⊢) i                   R('GetRenderWidth'                    (⍬                                                   )) ⍝                                                                   ⍝ Get current render width (it considers HiDPI)
'GetRenderWidthRetPtrRAYLIB'             (⎕NA⊢⎕NA⍤⊢)                     R('GetRenderWidthRetPtr'              (,⊂ ('>',i)                                          )) ⍝                                                                   ⍝ Get current render width (it considers HiDPI)
'GetRenderHeightRAYLIB'                  (⎕NA⊢⎕NA⍤⊢) i                   R('GetRenderHeight'                   (⍬                                                   )) ⍝                                                                   ⍝ Get current render height (it considers HiDPI)
'GetRenderHeightRetPtrRAYLIB'            (⎕NA⊢⎕NA⍤⊢)                     R('GetRenderHeightRetPtr'             (,⊂ ('>',i)                                          )) ⍝                                                                   ⍝ Get current render height (it considers HiDPI)
'GetMonitorCountRAYLIB'                  (⎕NA⊢⎕NA⍤⊢) i                   R('GetMonitorCount'                   (⍬                                                   )) ⍝                                                                   ⍝ Get number of connected monitors
'GetMonitorCountRetPtrRAYLIB'            (⎕NA⊢⎕NA⍤⊢)                     R('GetMonitorCountRetPtr'             (,⊂ ('>',i)                                          )) ⍝                                                                   ⍝ Get number of connected monitors
'GetCurrentMonitorRAYLIB'                (⎕NA⊢⎕NA⍤⊢) i                   R('GetCurrentMonitor'                 (⍬                                                   )) ⍝                                                                   ⍝ Get current connected monitor
'GetCurrentMonitorRetPtrRAYLIB'          (⎕NA⊢⎕NA⍤⊢)                     R('GetCurrentMonitorRetPtr'           (,⊂ ('>',i)                                          )) ⍝                                                                   ⍝ Get current connected monitor
'GetMonitorPositionRAYLIB'               (⎕NA⊢⎕NA⍤⊢) v2                  R('GetMonitorPosition'                (,⊂ i                                                )) ⍝ monitor                                                           ⍝ Get specified monitor position
'GetMonitorPositionRetPtrRAYLIB'         (⎕NA⊢⎕NA⍤⊢)                     R('GetMonitorPositionRetPtr'          (('>',v2) i                                          )) ⍝ monitor                                                           ⍝ Get specified monitor position
'GetMonitorWidthRAYLIB'                  (⎕NA⊢⎕NA⍤⊢) i                   R('GetMonitorWidth'                   (,⊂ i                                                )) ⍝ monitor                                                           ⍝ Get specified monitor width (current video mode used by monitor)
'GetMonitorWidthRetPtrRAYLIB'            (⎕NA⊢⎕NA⍤⊢)                     R('GetMonitorWidthRetPtr'             (('>',i) i                                           )) ⍝ monitor                                                           ⍝ Get specified monitor width (current video mode used by monitor)
'GetMonitorHeightRAYLIB'                 (⎕NA⊢⎕NA⍤⊢) i                   R('GetMonitorHeight'                  (,⊂ i                                                )) ⍝ monitor                                                           ⍝ Get specified monitor height (current video mode used by monitor)
'GetMonitorHeightRetPtrRAYLIB'           (⎕NA⊢⎕NA⍤⊢)                     R('GetMonitorHeightRetPtr'            (('>',i) i                                           )) ⍝ monitor                                                           ⍝ Get specified monitor height (current video mode used by monitor)
'GetMonitorPhysicalWidthRAYLIB'          (⎕NA⊢⎕NA⍤⊢) i                   R('GetMonitorPhysicalWidth'           (,⊂ i                                                )) ⍝ monitor                                                           ⍝ Get specified monitor physical width in millimetres
'GetMonitorPhysicalWidthRetPtrRAYLIB'    (⎕NA⊢⎕NA⍤⊢)                     R('GetMonitorPhysicalWidthRetPtr'     (('>',i) i                                           )) ⍝ monitor                                                           ⍝ Get specified monitor physical width in millimetres
'GetMonitorPhysicalHeightRAYLIB'         (⎕NA⊢⎕NA⍤⊢) i                   R('GetMonitorPhysicalHeight'          (,⊂ i                                                )) ⍝ monitor                                                           ⍝ Get specified monitor physical height in millimetres
'GetMonitorPhysicalHeightRetPtrRAYLIB'   (⎕NA⊢⎕NA⍤⊢)                     R('GetMonitorPhysicalHeightRetPtr'    (('>',i) i                                           )) ⍝ monitor                                                           ⍝ Get specified monitor physical height in millimetres
'GetMonitorRefreshRateRAYLIB'            (⎕NA⊢⎕NA⍤⊢) i                   R('GetMonitorRefreshRate'             (,⊂ i                                                )) ⍝ monitor                                                           ⍝ Get specified monitor refresh rate
'GetMonitorRefreshRateRetPtrRAYLIB'      (⎕NA⊢⎕NA⍤⊢)                     R('GetMonitorRefreshRateRetPtr'       (('>',i) i                                           )) ⍝ monitor                                                           ⍝ Get specified monitor refresh rate
'GetWindowPositionRAYLIB'                (⎕NA⊢⎕NA⍤⊢) v2                  R('GetWindowPosition'                 (⍬                                                   )) ⍝                                                                   ⍝ Get window position XY on monitor
'GetWindowPositionRetPtrRAYLIB'          (⎕NA⊢⎕NA⍤⊢)                     R('GetWindowPositionRetPtr'           (,⊂ ('>',v2)                                         )) ⍝                                                                   ⍝ Get window position XY on monitor
'GetWindowScaleDPIRAYLIB'                (⎕NA⊢⎕NA⍤⊢) v2                  R('GetWindowScaleDPI'                 (⍬                                                   )) ⍝                                                                   ⍝ Get window scale DPI factor
'GetWindowScaleDPIRetPtrRAYLIB'          (⎕NA⊢⎕NA⍤⊢)                     R('GetWindowScaleDPIRetPtr'           (,⊂ ('>',v2)                                         )) ⍝                                                                   ⍝ Get window scale DPI factor
'GetMonitorNameRAYLIB'                   (⎕NA⊢⎕NA⍤⊢) (ptr⊣str)           R('GetMonitorName'                    (,⊂ i                                                )) ⍝ monitor                                                           ⍝ Get the human-readable, UTF-8 encoded name of the specified monitor
'GetMonitorNameRetPtrRAYLIB'             (⎕NA⊢⎕NA⍤⊢)                     R('GetMonitorNameRetPtr'              (('>',str) i                                         )) ⍝ monitor                                                           ⍝ Get the human-readable, UTF-8 encoded name of the specified monitor
'SetClipboardTextRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('SetClipboardText'                  (,⊂ str                                              )) ⍝ text                                                              ⍝ Set clipboard text content
'GetClipboardTextRAYLIB'                 (⎕NA⊢⎕NA⍤⊢) (ptr⊣str)           R('GetClipboardText'                  (⍬                                                   )) ⍝                                                                   ⍝ Get clipboard text content
'GetClipboardTextRetPtrRAYLIB'           (⎕NA⊢⎕NA⍤⊢)                     R('GetClipboardTextRetPtr'            (,⊂ ('>',str)                                        )) ⍝                                                                   ⍝ Get clipboard text content
'EnableEventWaitingRAYLIB'               (⎕NA⊢⎕NA⍤⊢)                     R('EnableEventWaiting'                (⍬                                                   )) ⍝                                                                   ⍝ Enable waiting for events on EndDrawing(), no automatic event polling
'DisableEventWaitingRAYLIB'              (⎕NA⊢⎕NA⍤⊢)                     R('DisableEventWaiting'               (⍬                                                   )) ⍝                                                                   ⍝ Disable waiting for events on EndDrawing(), automatic events polling
'ShowCursorRAYLIB'                       (⎕NA⊢⎕NA⍤⊢)                     R('ShowCursor'                        (⍬                                                   )) ⍝                                                                   ⍝ Shows cursor
'HideCursorRAYLIB'                       (⎕NA⊢⎕NA⍤⊢)                     R('HideCursor'                        (⍬                                                   )) ⍝                                                                   ⍝ Hides cursor
'IsCursorHiddenRAYLIB'                   (⎕NA⊢⎕NA⍤⊢) bool                R('IsCursorHidden'                    (⍬                                                   )) ⍝                                                                   ⍝ Check if cursor is not visible
'IsCursorHiddenRetPtrRAYLIB'             (⎕NA⊢⎕NA⍤⊢)                     R('IsCursorHiddenRetPtr'              (,⊂ ('>',bool)                                       )) ⍝                                                                   ⍝ Check if cursor is not visible
'EnableCursorRAYLIB'                     (⎕NA⊢⎕NA⍤⊢)                     R('EnableCursor'                      (⍬                                                   )) ⍝                                                                   ⍝ Enables cursor (unlock cursor)
'DisableCursorRAYLIB'                    (⎕NA⊢⎕NA⍤⊢)                     R('DisableCursor'                     (⍬                                                   )) ⍝                                                                   ⍝ Disables cursor (lock cursor)
'IsCursorOnScreenRAYLIB'                 (⎕NA⊢⎕NA⍤⊢) bool                R('IsCursorOnScreen'                  (⍬                                                   )) ⍝                                                                   ⍝ Check if cursor is on the screen
'IsCursorOnScreenRetPtrRAYLIB'           (⎕NA⊢⎕NA⍤⊢)                     R('IsCursorOnScreenRetPtr'            (,⊂ ('>',bool)                                       )) ⍝                                                                   ⍝ Check if cursor is on the screen
'ClearBackgroundRAYLIB'                  (⎕NA⊢⎕NA⍤⊢)                     R('ClearBackground'                   (,⊂ Color                                            )) ⍝ color                                                             ⍝ Set background color (framebuffer clear color)
'BeginDrawingRAYLIB'                     (⎕NA⊢⎕NA⍤⊢)                     R('BeginDrawing'                      (⍬                                                   )) ⍝                                                                   ⍝ Setup canvas (framebuffer) to start drawing
'EndDrawingRAYLIB'                       (⎕NA⊢⎕NA⍤⊢)                     R('EndDrawing'                        (⍬                                                   )) ⍝                                                                   ⍝ End canvas drawing and swap buffers (double buffering)
'BeginMode2DRAYLIB'                      (⎕NA⊢⎕NA⍤⊢)                     R('BeginMode2D'                       (,⊂ Camera2D                                         )) ⍝ camera                                                            ⍝ Begin 2D mode with custom camera (2D)
'EndMode2DRAYLIB'                        (⎕NA⊢⎕NA⍤⊢)                     R('EndMode2D'                         (⍬                                                   )) ⍝                                                                   ⍝ Ends 2D mode with custom camera
'BeginMode3DRAYLIB'                      (⎕NA⊢⎕NA⍤⊢)                     R('BeginMode3D'                       (,⊂ Camera3D                                         )) ⍝ camera                                                            ⍝ Begin 3D mode with custom camera (3D)
'EndMode3DRAYLIB'                        (⎕NA⊢⎕NA⍤⊢)                     R('EndMode3D'                         (⍬                                                   )) ⍝                                                                   ⍝ Ends 3D mode and returns to default 2D orthographic mode
'BeginTextureModeRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('BeginTextureMode'                  (,⊂ RenderTexture2D                                  )) ⍝ target                                                            ⍝ Begin drawing to render texture
'EndTextureModeRAYLIB'                   (⎕NA⊢⎕NA⍤⊢)                     R('EndTextureMode'                    (⍬                                                   )) ⍝                                                                   ⍝ Ends drawing to render texture
'BeginShaderModeRAYLIB'                  (⎕NA⊢⎕NA⍤⊢)                     R('BeginShaderMode'                   (,⊂ Shader                                           )) ⍝ shader                                                            ⍝ Begin custom shader drawing
'EndShaderModeRAYLIB'                    (⎕NA⊢⎕NA⍤⊢)                     R('EndShaderMode'                     (⍬                                                   )) ⍝                                                                   ⍝ End custom shader drawing (use default shader)
'BeginBlendModeRAYLIB'                   (⎕NA⊢⎕NA⍤⊢)                     R('BeginBlendMode'                    (,⊂ i                                                )) ⍝ mode                                                              ⍝ Begin blending mode (alpha, additive, multiplied, subtract, custom)
'EndBlendModeRAYLIB'                     (⎕NA⊢⎕NA⍤⊢)                     R('EndBlendMode'                      (⍬                                                   )) ⍝                                                                   ⍝ End blending mode (reset to default: alpha blending)
'BeginScissorModeRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('BeginScissorMode'                  (i i i i                                             )) ⍝ x y width height                                                  ⍝ Begin scissor mode (define screen area for following drawing)
'EndScissorModeRAYLIB'                   (⎕NA⊢⎕NA⍤⊢)                     R('EndScissorMode'                    (⍬                                                   )) ⍝                                                                   ⍝ End scissor mode
'BeginVrStereoModeRAYLIB'                (⎕NA⊢⎕NA⍤⊢)                     R('BeginVrStereoMode'                 (,⊂ VrStereoConfig                                   )) ⍝ config                                                            ⍝ Begin stereo rendering (requires VR simulator)
'EndVrStereoModeRAYLIB'                  (⎕NA⊢⎕NA⍤⊢)                     R('EndVrStereoMode'                   (⍬                                                   )) ⍝                                                                   ⍝ End stereo rendering (requires VR simulator)
'LoadVrStereoConfigRAYLIB'               (⎕NA⊢⎕NA⍤⊢) VrStereoConfig      R('LoadVrStereoConfig'                (,⊂ VrDeviceInfo                                     )) ⍝ device                                                            ⍝ Load VR stereo config for VR simulator device parameters
'LoadVrStereoConfigRetPtrRAYLIB'         (⎕NA⊢⎕NA⍤⊢)                     R('LoadVrStereoConfigRetPtr'          (('>',VrStereoConfig) VrDeviceInfo                   )) ⍝ device                                                            ⍝ Load VR stereo config for VR simulator device parameters
'UnloadVrStereoConfigRAYLIB'             (⎕NA⊢⎕NA⍤⊢)                     R('UnloadVrStereoConfig'              (,⊂ VrStereoConfig                                   )) ⍝ config                                                            ⍝ Unload VR stereo config
'LoadShaderRAYLIB'                       (⎕NA⊢⎕NA⍤⊢) Shader              R('LoadShader'                        (str str                                             )) ⍝ vsFileName fsFileName                                             ⍝ Load shader from files and bind default locations
'LoadShaderRetPtrRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('LoadShaderRetPtr'                  (('>',Shader) str str                                )) ⍝ vsFileName fsFileName                                             ⍝ Load shader from files and bind default locations
'LoadShaderFromMemoryRAYLIB'             (⎕NA⊢⎕NA⍤⊢) Shader              R('LoadShaderFromMemory'              (str str                                             )) ⍝ vsCode fsCode                                                     ⍝ Load shader from code strings and bind default locations
'LoadShaderFromMemoryRetPtrRAYLIB'       (⎕NA⊢⎕NA⍤⊢)                     R('LoadShaderFromMemoryRetPtr'        (('>',Shader) str str                                )) ⍝ vsCode fsCode                                                     ⍝ Load shader from code strings and bind default locations
'IsShaderReadyRAYLIB'                    (⎕NA⊢⎕NA⍤⊢) bool                R('IsShaderReady'                     (,⊂ Shader                                           )) ⍝ shader                                                            ⍝ Check if a shader is ready
'IsShaderReadyRetPtrRAYLIB'              (⎕NA⊢⎕NA⍤⊢)                     R('IsShaderReadyRetPtr'               (('>',bool) Shader                                   )) ⍝ shader                                                            ⍝ Check if a shader is ready
'GetShaderLocationRAYLIB'                (⎕NA⊢⎕NA⍤⊢) i                   R('GetShaderLocation'                 (Shader str                                          )) ⍝ shader uniformName                                                ⍝ Get shader uniform location
'GetShaderLocationRetPtrRAYLIB'          (⎕NA⊢⎕NA⍤⊢)                     R('GetShaderLocationRetPtr'           (('>',i) Shader str                                  )) ⍝ shader uniformName                                                ⍝ Get shader uniform location
'GetShaderLocationAttribRAYLIB'          (⎕NA⊢⎕NA⍤⊢) i                   R('GetShaderLocationAttrib'           (Shader str                                          )) ⍝ shader attribName                                                 ⍝ Get shader attribute location
'GetShaderLocationAttribRetPtrRAYLIB'    (⎕NA⊢⎕NA⍤⊢)                     R('GetShaderLocationAttribRetPtr'     (('>',i) Shader str                                  )) ⍝ shader attribName                                                 ⍝ Get shader attribute location
'SetShaderValueRAYLIB'                   (⎕NA⊢⎕NA⍤⊢)                     R('SetShaderValue'                    (Shader i ptr i                                      )) ⍝ shader locIndex value uniformType                                 ⍝ Set shader uniform value
'SetShaderValueVRAYLIB'                  (⎕NA⊢⎕NA⍤⊢)                     R('SetShaderValueV'                   (Shader i ptr i i                                    )) ⍝ shader locIndex value uniformType count                           ⍝ Set shader uniform value vector
'SetShaderValueMatrixRAYLIB'             (⎕NA⊢⎕NA⍤⊢)                     R('SetShaderValueMatrix'              (Shader i Matrix                                     )) ⍝ shader locIndex mat                                               ⍝ Set shader uniform value (matrix 4x4)
'SetShaderValueTextureRAYLIB'            (⎕NA⊢⎕NA⍤⊢)                     R('SetShaderValueTexture'             (Shader i Texture2D                                  )) ⍝ shader locIndex texture                                           ⍝ Set shader uniform value for texture (sampler2d)
'UnloadShaderRAYLIB'                     (⎕NA⊢⎕NA⍤⊢)                     R('UnloadShader'                      (,⊂ Shader                                           )) ⍝ shader                                                            ⍝ Unload shader from GPU memory (VRAM)
'GetMouseRayRAYLIB'                      (⎕NA⊢⎕NA⍤⊢) Ray                 R('GetMouseRay'                       (v2 Camera                                           )) ⍝ mousePosition camera                                              ⍝ Get a ray trace from mouse position
'GetMouseRayRetPtrRAYLIB'                (⎕NA⊢⎕NA⍤⊢)                     R('GetMouseRayRetPtr'                 (('>',Ray) v2 Camera                                 )) ⍝ mousePosition camera                                              ⍝ Get a ray trace from mouse position
'GetCameraMatrixRAYLIB'                  (⎕NA⊢⎕NA⍤⊢) Matrix              R('GetCameraMatrix'                   (,⊂ Camera                                           )) ⍝ camera                                                            ⍝ Get camera transform matrix (view matrix)
'GetCameraMatrixRetPtrRAYLIB'            (⎕NA⊢⎕NA⍤⊢)                     R('GetCameraMatrixRetPtr'             (('>',Matrix) Camera                                 )) ⍝ camera                                                            ⍝ Get camera transform matrix (view matrix)
'GetCameraMatrix2DRAYLIB'                (⎕NA⊢⎕NA⍤⊢) Matrix              R('GetCameraMatrix2D'                 (,⊂ Camera2D                                         )) ⍝ camera                                                            ⍝ Get camera 2d transform matrix
'GetCameraMatrix2DRetPtrRAYLIB'          (⎕NA⊢⎕NA⍤⊢)                     R('GetCameraMatrix2DRetPtr'           (('>',Matrix) Camera2D                               )) ⍝ camera                                                            ⍝ Get camera 2d transform matrix
'GetWorldToScreenRAYLIB'                 (⎕NA⊢⎕NA⍤⊢) v2                  R('GetWorldToScreen'                  (v3 Camera                                           )) ⍝ position camera                                                   ⍝ Get the screen space position for a 3d world space position
'GetWorldToScreenRetPtrRAYLIB'           (⎕NA⊢⎕NA⍤⊢)                     R('GetWorldToScreenRetPtr'            (('>',v2) v3 Camera                                  )) ⍝ position camera                                                   ⍝ Get the screen space position for a 3d world space position
'GetScreenToWorld2DRAYLIB'               (⎕NA⊢⎕NA⍤⊢) v2                  R('GetScreenToWorld2D'                (v2 Camera2D                                         )) ⍝ position camera                                                   ⍝ Get the world space position for a 2d camera screen space position
'GetScreenToWorld2DRetPtrRAYLIB'         (⎕NA⊢⎕NA⍤⊢)                     R('GetScreenToWorld2DRetPtr'          (('>',v2) v2 Camera2D                                )) ⍝ position camera                                                   ⍝ Get the world space position for a 2d camera screen space position
'GetWorldToScreenExRAYLIB'               (⎕NA⊢⎕NA⍤⊢) v2                  R('GetWorldToScreenEx'                (v3 Camera i i                                       )) ⍝ position camera width height                                      ⍝ Get size position for a 3d world space position
'GetWorldToScreenExRetPtrRAYLIB'         (⎕NA⊢⎕NA⍤⊢)                     R('GetWorldToScreenExRetPtr'          (('>',v2) v3 Camera i i                              )) ⍝ position camera width height                                      ⍝ Get size position for a 3d world space position
'GetWorldToScreen2DRAYLIB'               (⎕NA⊢⎕NA⍤⊢) v2                  R('GetWorldToScreen2D'                (v2 Camera2D                                         )) ⍝ position camera                                                   ⍝ Get the screen space position for a 2d camera world space position
'GetWorldToScreen2DRetPtrRAYLIB'         (⎕NA⊢⎕NA⍤⊢)                     R('GetWorldToScreen2DRetPtr'          (('>',v2) v2 Camera2D                                )) ⍝ position camera                                                   ⍝ Get the screen space position for a 2d camera world space position
'SetTargetFPSRAYLIB'                     (⎕NA⊢⎕NA⍤⊢)                     R('SetTargetFPS'                      (,⊂ i                                                )) ⍝ fps                                                               ⍝ Set target FPS (maximum)
'GetFrameTimeRAYLIB'                     (⎕NA⊢⎕NA⍤⊢) f                   R('GetFrameTime'                      (⍬                                                   )) ⍝                                                                   ⍝ Get time in seconds for last frame drawn (delta time)
'GetFrameTimeRetPtrRAYLIB'               (⎕NA⊢⎕NA⍤⊢)                     R('GetFrameTimeRetPtr'                (,⊂ ('>',f)                                          )) ⍝                                                                   ⍝ Get time in seconds for last frame drawn (delta time)
'GetTimeRAYLIB'                          (⎕NA⊢⎕NA⍤⊢) f8                  R('GetTime'                           (⍬                                                   )) ⍝                                                                   ⍝ Get elapsed time in seconds since InitWindow()
'GetTimeRetPtrRAYLIB'                    (⎕NA⊢⎕NA⍤⊢)                     R('GetTimeRetPtr'                     (,⊂ ('>',f8)                                         )) ⍝                                                                   ⍝ Get elapsed time in seconds since InitWindow()
'GetFPSRAYLIB'                           (⎕NA⊢⎕NA⍤⊢) i                   R('GetFPS'                            (⍬                                                   )) ⍝                                                                   ⍝ Get current FPS
'GetFPSRetPtrRAYLIB'                     (⎕NA⊢⎕NA⍤⊢)                     R('GetFPSRetPtr'                      (,⊂ ('>',i)                                          )) ⍝                                                                   ⍝ Get current FPS
'SwapScreenBufferRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('SwapScreenBuffer'                  (⍬                                                   )) ⍝                                                                   ⍝ Swap back buffer with front buffer (screen drawing)
'PollInputEventsRAYLIB'                  (⎕NA⊢⎕NA⍤⊢)                     R('PollInputEvents'                   (⍬                                                   )) ⍝                                                                   ⍝ Register all input events
'WaitTimeRAYLIB'                         (⎕NA⊢⎕NA⍤⊢)                     R('WaitTime'                          (,⊂ f8                                               )) ⍝ seconds                                                           ⍝ Wait for some time (halt program execution)
'SetRandomSeedRAYLIB'                    (⎕NA⊢⎕NA⍤⊢)                     R('SetRandomSeed'                     (,⊂ u                                                )) ⍝ seed                                                              ⍝ Set the seed for the random number generator
'GetRandomValueRAYLIB'                   (⎕NA⊢⎕NA⍤⊢) i                   R('GetRandomValue'                    (i i                                                 )) ⍝ min max                                                           ⍝ Get a random value between min and max (both included)
'GetRandomValueRetPtrRAYLIB'             (⎕NA⊢⎕NA⍤⊢)                     R('GetRandomValueRetPtr'              (('>',i) i i                                         )) ⍝ min max                                                           ⍝ Get a random value between min and max (both included)
'LoadRandomSequenceRAYLIB'               (⎕NA⊢⎕NA⍤⊢) ptr                 R('LoadRandomSequence'                (u i i                                               )) ⍝ count min max                                                     ⍝ Load random values sequence, no values repeated
'LoadRandomSequenceRetPtrRAYLIB'         (⎕NA⊢⎕NA⍤⊢)                     R('LoadRandomSequenceRetPtr'          (ptr u i i                                           )) ⍝ count min max                                                     ⍝ Load random values sequence, no values repeated
'UnloadRandomSequenceRAYLIB'             (⎕NA⊢⎕NA⍤⊢)                     R('UnloadRandomSequence'              (,⊂ ('=',i)                                          )) ⍝ sequence                                                          ⍝ Unload random values sequence
'TakeScreenshotRAYLIB'                   (⎕NA⊢⎕NA⍤⊢)                     R('TakeScreenshot'                    (,⊂ str                                              )) ⍝ fileName                                                          ⍝ Takes a screenshot of current screen (filename extension defines format)
'SetConfigFlagsRAYLIB'                   (⎕NA⊢⎕NA⍤⊢)                     R('SetConfigFlags'                    (,⊂ u                                                )) ⍝ flags                                                             ⍝ Setup init configuration flags (view FLAGS)
'OpenURLRAYLIB'                          (⎕NA⊢⎕NA⍤⊢)                     R('OpenURL'                           (,⊂ str                                              )) ⍝ url                                                               ⍝ Open URL with default system browser (if available)
'SetTraceLogLevelRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('SetTraceLogLevel'                  (,⊂ i                                                )) ⍝ logLevel                                                          ⍝ Set the current threshold (minimum) log level
'MemAllocRAYLIB'                         (⎕NA⊢⎕NA⍤⊢) ptr                 R('MemAlloc'                          (,⊂ u                                                )) ⍝ size                                                              ⍝ Internal memory allocator
'MemAllocRetPtrRAYLIB'                   (⎕NA⊢⎕NA⍤⊢)                     R('MemAllocRetPtr'                    (('>',ptr) u                                         )) ⍝ size                                                              ⍝ Internal memory allocator
'MemReallocRAYLIB'                       (⎕NA⊢⎕NA⍤⊢) ptr                 R('MemRealloc'                        (ptr u                                               )) ⍝ ptr size                                                          ⍝ Internal memory reallocator
'MemReallocRetPtrRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('MemReallocRetPtr'                  (('>',ptr) ptr u                                     )) ⍝ ptr size                                                          ⍝ Internal memory reallocator
'MemFreeRAYLIB'                          (⎕NA⊢⎕NA⍤⊢)                     R('MemFree'                           (,⊂ ptr                                              )) ⍝ ptr                                                               ⍝ Internal memory free
'SetTraceLogCallbackRAYLIB'              (⎕NA⊢⎕NA⍤⊢)                     R('SetTraceLogCallback'               (,⊂ ptr                                              )) ⍝ callback                                                          ⍝ Set custom trace log
'SetLoadFileDataCallbackRAYLIB'          (⎕NA⊢⎕NA⍤⊢)                     R('SetLoadFileDataCallback'           (,⊂ ptr                                              )) ⍝ callback                                                          ⍝ Set custom file binary data loader
'SetSaveFileDataCallbackRAYLIB'          (⎕NA⊢⎕NA⍤⊢)                     R('SetSaveFileDataCallback'           (,⊂ ptr                                              )) ⍝ callback                                                          ⍝ Set custom file binary data saver
'SetLoadFileTextCallbackRAYLIB'          (⎕NA⊢⎕NA⍤⊢)                     R('SetLoadFileTextCallback'           (,⊂ ptr                                              )) ⍝ callback                                                          ⍝ Set custom file text data loader
'SetSaveFileTextCallbackRAYLIB'          (⎕NA⊢⎕NA⍤⊢)                     R('SetSaveFileTextCallback'           (,⊂ ptr                                              )) ⍝ callback                                                          ⍝ Set custom file text data saver
'LoadFileDataRAYLIB'                     (⎕NA⊢⎕NA⍤⊢) (ptr⊣ustr)          R('LoadFileData'                      (str ('=',i)                                         )) ⍝ fileName dataSize                                                 ⍝ Load file data as byte array (read)
'LoadFileDataRetPtrRAYLIB'               (⎕NA⊢⎕NA⍤⊢)                     R('LoadFileDataRetPtr'                (('>',ustr) str ('=',i)                              )) ⍝ fileName dataSize                                                 ⍝ Load file data as byte array (read)
'UnloadFileDataRAYLIB'                   (⎕NA⊢⎕NA⍤⊢)                     R('UnloadFileData'                    (,⊂ ustr                                             )) ⍝ data                                                              ⍝ Unload file data allocated by LoadFileData()
'SaveFileDataRAYLIB'                     (⎕NA⊢⎕NA⍤⊢) bool                R('SaveFileData'                      (str ptr i                                           )) ⍝ fileName data dataSize                                            ⍝ Save data to file from byte array (write), returns true on success
'SaveFileDataRetPtrRAYLIB'               (⎕NA⊢⎕NA⍤⊢)                     R('SaveFileDataRetPtr'                (('>',bool) str ptr i                                )) ⍝ fileName data dataSize                                            ⍝ Save data to file from byte array (write), returns true on success
'ExportDataAsCodeRAYLIB'                 (⎕NA⊢⎕NA⍤⊢) bool                R('ExportDataAsCode'                  (ustr i str                                          )) ⍝ data dataSize fileName                                            ⍝ Export data to code (.h), returns true on success
'ExportDataAsCodeRetPtrRAYLIB'           (⎕NA⊢⎕NA⍤⊢)                     R('ExportDataAsCodeRetPtr'            (('>',bool) ustr i str                               )) ⍝ data dataSize fileName                                            ⍝ Export data to code (.h), returns true on success
'LoadFileTextRAYLIB'                     (⎕NA⊢⎕NA⍤⊢) (ptr⊣str)           R('LoadFileText'                      (,⊂ str                                              )) ⍝ fileName                                                          ⍝ Load text data from file (read), returns a '\0' terminated string
'LoadFileTextRetPtrRAYLIB'               (⎕NA⊢⎕NA⍤⊢)                     R('LoadFileTextRetPtr'                (('>',str) str                                       )) ⍝ fileName                                                          ⍝ Load text data from file (read), returns a '\0' terminated string
'UnloadFileTextRAYLIB'                   (⎕NA⊢⎕NA⍤⊢)                     R('UnloadFileText'                    (,⊂ str                                              )) ⍝ text                                                              ⍝ Unload file text data allocated by LoadFileText()
'SaveFileTextRAYLIB'                     (⎕NA⊢⎕NA⍤⊢) bool                R('SaveFileText'                      (str str                                             )) ⍝ fileName text                                                     ⍝ Save text data to file (write), string must be '\0' terminated, returns true on success
'SaveFileTextRetPtrRAYLIB'               (⎕NA⊢⎕NA⍤⊢)                     R('SaveFileTextRetPtr'                (('>',bool) str str                                  )) ⍝ fileName text                                                     ⍝ Save text data to file (write), string must be '\0' terminated, returns true on success
'FileExistsRAYLIB'                       (⎕NA⊢⎕NA⍤⊢) bool                R('FileExists'                        (,⊂ str                                              )) ⍝ fileName                                                          ⍝ Check if file exists
'FileExistsRetPtrRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('FileExistsRetPtr'                  (('>',bool) str                                      )) ⍝ fileName                                                          ⍝ Check if file exists
'DirectoryExistsRAYLIB'                  (⎕NA⊢⎕NA⍤⊢) bool                R('DirectoryExists'                   (,⊂ str                                              )) ⍝ dirPath                                                           ⍝ Check if a directory path exists
'DirectoryExistsRetPtrRAYLIB'            (⎕NA⊢⎕NA⍤⊢)                     R('DirectoryExistsRetPtr'             (('>',bool) str                                      )) ⍝ dirPath                                                           ⍝ Check if a directory path exists
'IsFileExtensionRAYLIB'                  (⎕NA⊢⎕NA⍤⊢) bool                R('IsFileExtension'                   (str str                                             )) ⍝ fileName ext                                                      ⍝ Check file extension (including point: .png, .wav)
'IsFileExtensionRetPtrRAYLIB'            (⎕NA⊢⎕NA⍤⊢)                     R('IsFileExtensionRetPtr'             (('>',bool) str str                                  )) ⍝ fileName ext                                                      ⍝ Check file extension (including point: .png, .wav)
'GetFileLengthRAYLIB'                    (⎕NA⊢⎕NA⍤⊢) i                   R('GetFileLength'                     (,⊂ str                                              )) ⍝ fileName                                                          ⍝ Get file length in bytes (NOTE: GetFileSize() conflicts with windows.h)
'GetFileLengthRetPtrRAYLIB'              (⎕NA⊢⎕NA⍤⊢)                     R('GetFileLengthRetPtr'               (('>',i) str                                         )) ⍝ fileName                                                          ⍝ Get file length in bytes (NOTE: GetFileSize() conflicts with windows.h)
'GetFileExtensionRAYLIB'                 (⎕NA⊢⎕NA⍤⊢) (ptr⊣str)           R('GetFileExtension'                  (,⊂ str                                              )) ⍝ fileName                                                          ⍝ Get pointer to extension for a filename string (includes dot: '.png')
'GetFileExtensionRetPtrRAYLIB'           (⎕NA⊢⎕NA⍤⊢)                     R('GetFileExtensionRetPtr'            (('>',str) str                                       )) ⍝ fileName                                                          ⍝ Get pointer to extension for a filename string (includes dot: '.png')
'GetFileNameRAYLIB'                      (⎕NA⊢⎕NA⍤⊢) (ptr⊣str)           R('GetFileName'                       (,⊂ str                                              )) ⍝ filePath                                                          ⍝ Get pointer to filename for a path string
'GetFileNameRetPtrRAYLIB'                (⎕NA⊢⎕NA⍤⊢)                     R('GetFileNameRetPtr'                 (('>',str) str                                       )) ⍝ filePath                                                          ⍝ Get pointer to filename for a path string
'GetFileNameWithoutExtRAYLIB'            (⎕NA⊢⎕NA⍤⊢) (ptr⊣str)           R('GetFileNameWithoutExt'             (,⊂ str                                              )) ⍝ filePath                                                          ⍝ Get filename string without extension (uses static string)
'GetFileNameWithoutExtRetPtrRAYLIB'      (⎕NA⊢⎕NA⍤⊢)                     R('GetFileNameWithoutExtRetPtr'       (('>',str) str                                       )) ⍝ filePath                                                          ⍝ Get filename string without extension (uses static string)
'GetDirectoryPathRAYLIB'                 (⎕NA⊢⎕NA⍤⊢) (ptr⊣str)           R('GetDirectoryPath'                  (,⊂ str                                              )) ⍝ filePath                                                          ⍝ Get full path for a given fileName with path (uses static string)
'GetDirectoryPathRetPtrRAYLIB'           (⎕NA⊢⎕NA⍤⊢)                     R('GetDirectoryPathRetPtr'            (('>',str) str                                       )) ⍝ filePath                                                          ⍝ Get full path for a given fileName with path (uses static string)
'GetPrevDirectoryPathRAYLIB'             (⎕NA⊢⎕NA⍤⊢) (ptr⊣str)           R('GetPrevDirectoryPath'              (,⊂ str                                              )) ⍝ dirPath                                                           ⍝ Get previous directory path for a given path (uses static string)
'GetPrevDirectoryPathRetPtrRAYLIB'       (⎕NA⊢⎕NA⍤⊢)                     R('GetPrevDirectoryPathRetPtr'        (('>',str) str                                       )) ⍝ dirPath                                                           ⍝ Get previous directory path for a given path (uses static string)
'GetWorkingDirectoryRAYLIB'              (⎕NA⊢⎕NA⍤⊢) (ptr⊣str)           R('GetWorkingDirectory'               (⍬                                                   )) ⍝                                                                   ⍝ Get current working directory (uses static string)
'GetWorkingDirectoryRetPtrRAYLIB'        (⎕NA⊢⎕NA⍤⊢)                     R('GetWorkingDirectoryRetPtr'         (,⊂ ('>',str)                                        )) ⍝                                                                   ⍝ Get current working directory (uses static string)
'GetApplicationDirectoryRAYLIB'          (⎕NA⊢⎕NA⍤⊢) (ptr⊣str)           R('GetApplicationDirectory'           (⍬                                                   )) ⍝                                                                   ⍝ Get the directory of the running application (uses static string)
'GetApplicationDirectoryRetPtrRAYLIB'    (⎕NA⊢⎕NA⍤⊢)                     R('GetApplicationDirectoryRetPtr'     (,⊂ ('>',str)                                        )) ⍝                                                                   ⍝ Get the directory of the running application (uses static string)
'ChangeDirectoryRAYLIB'                  (⎕NA⊢⎕NA⍤⊢) bool                R('ChangeDirectory'                   (,⊂ str                                              )) ⍝ dir                                                               ⍝ Change working directory, return true on success
'ChangeDirectoryRetPtrRAYLIB'            (⎕NA⊢⎕NA⍤⊢)                     R('ChangeDirectoryRetPtr'             (('>',bool) str                                      )) ⍝ dir                                                               ⍝ Change working directory, return true on success
'IsPathFileRAYLIB'                       (⎕NA⊢⎕NA⍤⊢) bool                R('IsPathFile'                        (,⊂ str                                              )) ⍝ path                                                              ⍝ Check if a given path is a file or a directory
'IsPathFileRetPtrRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('IsPathFileRetPtr'                  (('>',bool) str                                      )) ⍝ path                                                              ⍝ Check if a given path is a file or a directory
'LoadDirectoryFilesRAYLIB'               (⎕NA⊢⎕NA⍤⊢) FilePathList        R('LoadDirectoryFiles'                (,⊂ str                                              )) ⍝ dirPath                                                           ⍝ Load directory filepaths
'LoadDirectoryFilesRetPtrRAYLIB'         (⎕NA⊢⎕NA⍤⊢)                     R('LoadDirectoryFilesRetPtr'          (('>',FilePathList) str                              )) ⍝ dirPath                                                           ⍝ Load directory filepaths
'LoadDirectoryFilesExRAYLIB'             (⎕NA⊢⎕NA⍤⊢) FilePathList        R('LoadDirectoryFilesEx'              (str str bool                                        )) ⍝ basePath filter scanSubdirs                                       ⍝ Load directory filepaths with extension filtering and recursive directory scan
'LoadDirectoryFilesExRetPtrRAYLIB'       (⎕NA⊢⎕NA⍤⊢)                     R('LoadDirectoryFilesExRetPtr'        (('>',FilePathList) str str bool                     )) ⍝ basePath filter scanSubdirs                                       ⍝ Load directory filepaths with extension filtering and recursive directory scan
'UnloadDirectoryFilesRAYLIB'             (⎕NA⊢⎕NA⍤⊢)                     R('UnloadDirectoryFiles'              (,⊂ FilePathList                                     )) ⍝ files                                                             ⍝ Unload filepaths
'IsFileDroppedRAYLIB'                    (⎕NA⊢⎕NA⍤⊢) bool                R('IsFileDropped'                     (⍬                                                   )) ⍝                                                                   ⍝ Check if a file has been dropped into window
'IsFileDroppedRetPtrRAYLIB'              (⎕NA⊢⎕NA⍤⊢)                     R('IsFileDroppedRetPtr'               (,⊂ ('>',bool)                                       )) ⍝                                                                   ⍝ Check if a file has been dropped into window
'LoadDroppedFilesRAYLIB'                 (⎕NA⊢⎕NA⍤⊢) FilePathList        R('LoadDroppedFiles'                  (⍬                                                   )) ⍝                                                                   ⍝ Load dropped filepaths
'LoadDroppedFilesRetPtrRAYLIB'           (⎕NA⊢⎕NA⍤⊢)                     R('LoadDroppedFilesRetPtr'            (,⊂ ('>',FilePathList)                               )) ⍝                                                                   ⍝ Load dropped filepaths
'UnloadDroppedFilesRAYLIB'               (⎕NA⊢⎕NA⍤⊢)                     R('UnloadDroppedFiles'                (,⊂ FilePathList                                     )) ⍝ files                                                             ⍝ Unload dropped filepaths
'GetFileModTimeRAYLIB'                   (⎕NA⊢⎕NA⍤⊢) i8                  R('GetFileModTime'                    (,⊂ str                                              )) ⍝ fileName                                                          ⍝ Get file modification time (last write time)
'GetFileModTimeRetPtrRAYLIB'             (⎕NA⊢⎕NA⍤⊢)                     R('GetFileModTimeRetPtr'              (('>',i8) str                                        )) ⍝ fileName                                                          ⍝ Get file modification time (last write time)
'CompressDataRAYLIB'                     (⎕NA⊢⎕NA⍤⊢) (ptr⊣ustr)          R('CompressData'                      (ustr i ('=',i)                                      )) ⍝ data dataSize compDataSize                                        ⍝ Compress data (DEFLATE algorithm), memory must be MemFree()
'CompressDataRetPtrRAYLIB'               (⎕NA⊢⎕NA⍤⊢)                     R('CompressDataRetPtr'                (('>',ustr) ustr i ('=',i)                           )) ⍝ data dataSize compDataSize                                        ⍝ Compress data (DEFLATE algorithm), memory must be MemFree()
'DecompressDataRAYLIB'                   (⎕NA⊢⎕NA⍤⊢) (ptr⊣ustr)          R('DecompressData'                    (ustr i ('=',i)                                      )) ⍝ compData compDataSize dataSize                                    ⍝ Decompress data (DEFLATE algorithm), memory must be MemFree()
'DecompressDataRetPtrRAYLIB'             (⎕NA⊢⎕NA⍤⊢)                     R('DecompressDataRetPtr'              (('>',ustr) ustr i ('=',i)                           )) ⍝ compData compDataSize dataSize                                    ⍝ Decompress data (DEFLATE algorithm), memory must be MemFree()
'EncodeDataBase64RAYLIB'                 (⎕NA⊢⎕NA⍤⊢) (ptr⊣str)           R('EncodeDataBase64'                  (ustr i ('=',i)                                      )) ⍝ data dataSize outputSize                                          ⍝ Encode data to Base64 string, memory must be MemFree()
'EncodeDataBase64RetPtrRAYLIB'           (⎕NA⊢⎕NA⍤⊢)                     R('EncodeDataBase64RetPtr'            (('>',str) ustr i ('=',i)                            )) ⍝ data dataSize outputSize                                          ⍝ Encode data to Base64 string, memory must be MemFree()
'DecodeDataBase64RAYLIB'                 (⎕NA⊢⎕NA⍤⊢) (ptr⊣ustr)          R('DecodeDataBase64'                  (ustr ('=',i)                                        )) ⍝ data outputSize                                                   ⍝ Decode Base64 string data, memory must be MemFree()
'DecodeDataBase64RetPtrRAYLIB'           (⎕NA⊢⎕NA⍤⊢)                     R('DecodeDataBase64RetPtr'            (('>',ustr) ustr ('=',i)                             )) ⍝ data outputSize                                                   ⍝ Decode Base64 string data, memory must be MemFree()
'LoadAutomationEventListRAYLIB'          (⎕NA⊢⎕NA⍤⊢) AutomationEventList R('LoadAutomationEventList'           (,⊂ str                                              )) ⍝ fileName                                                          ⍝ Load automation events list from file, NULL for empty list, capacity = MAX_AUTOMATION_EVENTS
'LoadAutomationEventListRetPtrRAYLIB'    (⎕NA⊢⎕NA⍤⊢)                     R('LoadAutomationEventListRetPtr'     (('>',AutomationEventList) str                       )) ⍝ fileName                                                          ⍝ Load automation events list from file, NULL for empty list, capacity = MAX_AUTOMATION_EVENTS
'UnloadAutomationEventListRAYLIB'        (⎕NA⊢⎕NA⍤⊢)                     R('UnloadAutomationEventList'         (,⊂ ('=',AutomationEventList)                        )) ⍝ list                                                              ⍝ Unload automation events list from file
'ExportAutomationEventListRAYLIB'        (⎕NA⊢⎕NA⍤⊢) bool                R('ExportAutomationEventList'         (AutomationEventList str                             )) ⍝ list fileName                                                     ⍝ Export automation events list as text file
'ExportAutomationEventListRetPtrRAYLIB'  (⎕NA⊢⎕NA⍤⊢)                     R('ExportAutomationEventListRetPtr'   (('>',bool) AutomationEventList str                  )) ⍝ list fileName                                                     ⍝ Export automation events list as text file
'SetAutomationEventListRAYLIB'           (⎕NA⊢⎕NA⍤⊢)                     R('SetAutomationEventList'            (,⊂ ('=',AutomationEventList)                        )) ⍝ list                                                              ⍝ Set automation event list to record to
'SetAutomationEventBaseFrameRAYLIB'      (⎕NA⊢⎕NA⍤⊢)                     R('SetAutomationEventBaseFrame'       (,⊂ i                                                )) ⍝ frame                                                             ⍝ Set automation event internal base frame to start recording
'StartAutomationEventRecordingRAYLIB'    (⎕NA⊢⎕NA⍤⊢)                     R('StartAutomationEventRecording'     (⍬                                                   )) ⍝                                                                   ⍝ Start recording automation events (AutomationEventList must be set)
'StopAutomationEventRecordingRAYLIB'     (⎕NA⊢⎕NA⍤⊢)                     R('StopAutomationEventRecording'      (⍬                                                   )) ⍝                                                                   ⍝ Stop recording automation events
'PlayAutomationEventRAYLIB'              (⎕NA⊢⎕NA⍤⊢)                     R('PlayAutomationEvent'               (,⊂ AutomationEvent                                  )) ⍝ event                                                             ⍝ Play a recorded automation event
'IsKeyPressedRAYLIB'                     (⎕NA⊢⎕NA⍤⊢) bool                R('IsKeyPressed'                      (,⊂ i                                                )) ⍝ key                                                               ⍝ Check if a key has been pressed once
'IsKeyPressedRetPtrRAYLIB'               (⎕NA⊢⎕NA⍤⊢)                     R('IsKeyPressedRetPtr'                (('>',bool) i                                        )) ⍝ key                                                               ⍝ Check if a key has been pressed once
'IsKeyPressedRepeatRAYLIB'               (⎕NA⊢⎕NA⍤⊢) bool                R('IsKeyPressedRepeat'                (,⊂ i                                                )) ⍝ key                                                               ⍝ Check if a key has been pressed again (Only PLATFORM_DESKTOP)
'IsKeyPressedRepeatRetPtrRAYLIB'         (⎕NA⊢⎕NA⍤⊢)                     R('IsKeyPressedRepeatRetPtr'          (('>',bool) i                                        )) ⍝ key                                                               ⍝ Check if a key has been pressed again (Only PLATFORM_DESKTOP)
'IsKeyDownRAYLIB'                        (⎕NA⊢⎕NA⍤⊢) bool                R('IsKeyDown'                         (,⊂ i                                                )) ⍝ key                                                               ⍝ Check if a key is being pressed
'IsKeyDownRetPtrRAYLIB'                  (⎕NA⊢⎕NA⍤⊢)                     R('IsKeyDownRetPtr'                   (('>',bool) i                                        )) ⍝ key                                                               ⍝ Check if a key is being pressed
'IsKeyReleasedRAYLIB'                    (⎕NA⊢⎕NA⍤⊢) bool                R('IsKeyReleased'                     (,⊂ i                                                )) ⍝ key                                                               ⍝ Check if a key has been released once
'IsKeyReleasedRetPtrRAYLIB'              (⎕NA⊢⎕NA⍤⊢)                     R('IsKeyReleasedRetPtr'               (('>',bool) i                                        )) ⍝ key                                                               ⍝ Check if a key has been released once
'IsKeyUpRAYLIB'                          (⎕NA⊢⎕NA⍤⊢) bool                R('IsKeyUp'                           (,⊂ i                                                )) ⍝ key                                                               ⍝ Check if a key is NOT being pressed
'IsKeyUpRetPtrRAYLIB'                    (⎕NA⊢⎕NA⍤⊢)                     R('IsKeyUpRetPtr'                     (('>',bool) i                                        )) ⍝ key                                                               ⍝ Check if a key is NOT being pressed
'GetKeyPressedRAYLIB'                    (⎕NA⊢⎕NA⍤⊢) i                   R('GetKeyPressed'                     (⍬                                                   )) ⍝                                                                   ⍝ Get key pressed (keycode), call it multiple times for keys queued, returns 0 when the queue is empty
'GetKeyPressedRetPtrRAYLIB'              (⎕NA⊢⎕NA⍤⊢)                     R('GetKeyPressedRetPtr'               (,⊂ ('>',i)                                          )) ⍝                                                                   ⍝ Get key pressed (keycode), call it multiple times for keys queued, returns 0 when the queue is empty
'GetCharPressedRAYLIB'                   (⎕NA⊢⎕NA⍤⊢) i                   R('GetCharPressed'                    (⍬                                                   )) ⍝                                                                   ⍝ Get char pressed (unicode), call it multiple times for chars queued, returns 0 when the queue is empty
'GetCharPressedRetPtrRAYLIB'             (⎕NA⊢⎕NA⍤⊢)                     R('GetCharPressedRetPtr'              (,⊂ ('>',i)                                          )) ⍝                                                                   ⍝ Get char pressed (unicode), call it multiple times for chars queued, returns 0 when the queue is empty
'SetExitKeyRAYLIB'                       (⎕NA⊢⎕NA⍤⊢)                     R('SetExitKey'                        (,⊂ i                                                )) ⍝ key                                                               ⍝ Set a custom key to exit program (default is ESC)
'IsGamepadAvailableRAYLIB'               (⎕NA⊢⎕NA⍤⊢) bool                R('IsGamepadAvailable'                (,⊂ i                                                )) ⍝ gamepad                                                           ⍝ Check if a gamepad is available
'IsGamepadAvailableRetPtrRAYLIB'         (⎕NA⊢⎕NA⍤⊢)                     R('IsGamepadAvailableRetPtr'          (('>',bool) i                                        )) ⍝ gamepad                                                           ⍝ Check if a gamepad is available
'GetGamepadNameRAYLIB'                   (⎕NA⊢⎕NA⍤⊢) (ptr⊣str)           R('GetGamepadName'                    (,⊂ i                                                )) ⍝ gamepad                                                           ⍝ Get gamepad internal name id
'GetGamepadNameRetPtrRAYLIB'             (⎕NA⊢⎕NA⍤⊢)                     R('GetGamepadNameRetPtr'              (('>',str) i                                         )) ⍝ gamepad                                                           ⍝ Get gamepad internal name id
'IsGamepadButtonPressedRAYLIB'           (⎕NA⊢⎕NA⍤⊢) bool                R('IsGamepadButtonPressed'            (i i                                                 )) ⍝ gamepad button                                                    ⍝ Check if a gamepad button has been pressed once
'IsGamepadButtonPressedRetPtrRAYLIB'     (⎕NA⊢⎕NA⍤⊢)                     R('IsGamepadButtonPressedRetPtr'      (('>',bool) i i                                      )) ⍝ gamepad button                                                    ⍝ Check if a gamepad button has been pressed once
'IsGamepadButtonDownRAYLIB'              (⎕NA⊢⎕NA⍤⊢) bool                R('IsGamepadButtonDown'               (i i                                                 )) ⍝ gamepad button                                                    ⍝ Check if a gamepad button is being pressed
'IsGamepadButtonDownRetPtrRAYLIB'        (⎕NA⊢⎕NA⍤⊢)                     R('IsGamepadButtonDownRetPtr'         (('>',bool) i i                                      )) ⍝ gamepad button                                                    ⍝ Check if a gamepad button is being pressed
'IsGamepadButtonReleasedRAYLIB'          (⎕NA⊢⎕NA⍤⊢) bool                R('IsGamepadButtonReleased'           (i i                                                 )) ⍝ gamepad button                                                    ⍝ Check if a gamepad button has been released once
'IsGamepadButtonReleasedRetPtrRAYLIB'    (⎕NA⊢⎕NA⍤⊢)                     R('IsGamepadButtonReleasedRetPtr'     (('>',bool) i i                                      )) ⍝ gamepad button                                                    ⍝ Check if a gamepad button has been released once
'IsGamepadButtonUpRAYLIB'                (⎕NA⊢⎕NA⍤⊢) bool                R('IsGamepadButtonUp'                 (i i                                                 )) ⍝ gamepad button                                                    ⍝ Check if a gamepad button is NOT being pressed
'IsGamepadButtonUpRetPtrRAYLIB'          (⎕NA⊢⎕NA⍤⊢)                     R('IsGamepadButtonUpRetPtr'           (('>',bool) i i                                      )) ⍝ gamepad button                                                    ⍝ Check if a gamepad button is NOT being pressed
'GetGamepadButtonPressedRAYLIB'          (⎕NA⊢⎕NA⍤⊢) i                   R('GetGamepadButtonPressed'           (⍬                                                   )) ⍝                                                                   ⍝ Get the last gamepad button pressed
'GetGamepadButtonPressedRetPtrRAYLIB'    (⎕NA⊢⎕NA⍤⊢)                     R('GetGamepadButtonPressedRetPtr'     (,⊂ ('>',i)                                          )) ⍝                                                                   ⍝ Get the last gamepad button pressed
'GetGamepadAxisCountRAYLIB'              (⎕NA⊢⎕NA⍤⊢) i                   R('GetGamepadAxisCount'               (,⊂ i                                                )) ⍝ gamepad                                                           ⍝ Get gamepad axis count for a gamepad
'GetGamepadAxisCountRetPtrRAYLIB'        (⎕NA⊢⎕NA⍤⊢)                     R('GetGamepadAxisCountRetPtr'         (('>',i) i                                           )) ⍝ gamepad                                                           ⍝ Get gamepad axis count for a gamepad
'GetGamepadAxisMovementRAYLIB'           (⎕NA⊢⎕NA⍤⊢) f                   R('GetGamepadAxisMovement'            (i i                                                 )) ⍝ gamepad axis                                                      ⍝ Get axis movement value for a gamepad axis
'GetGamepadAxisMovementRetPtrRAYLIB'     (⎕NA⊢⎕NA⍤⊢)                     R('GetGamepadAxisMovementRetPtr'      (('>',f) i i                                         )) ⍝ gamepad axis                                                      ⍝ Get axis movement value for a gamepad axis
'SetGamepadMappingsRAYLIB'               (⎕NA⊢⎕NA⍤⊢) i                   R('SetGamepadMappings'                (,⊂ str                                              )) ⍝ mappings                                                          ⍝ Set internal gamepad mappings (SDL_GameControllerDB)
'SetGamepadMappingsRetPtrRAYLIB'         (⎕NA⊢⎕NA⍤⊢)                     R('SetGamepadMappingsRetPtr'          (('>',i) str                                         )) ⍝ mappings                                                          ⍝ Set internal gamepad mappings (SDL_GameControllerDB)
'IsMouseButtonPressedRAYLIB'             (⎕NA⊢⎕NA⍤⊢) bool                R('IsMouseButtonPressed'              (,⊂ i                                                )) ⍝ button                                                            ⍝ Check if a mouse button has been pressed once
'IsMouseButtonPressedRetPtrRAYLIB'       (⎕NA⊢⎕NA⍤⊢)                     R('IsMouseButtonPressedRetPtr'        (('>',bool) i                                        )) ⍝ button                                                            ⍝ Check if a mouse button has been pressed once
'IsMouseButtonDownRAYLIB'                (⎕NA⊢⎕NA⍤⊢) bool                R('IsMouseButtonDown'                 (,⊂ i                                                )) ⍝ button                                                            ⍝ Check if a mouse button is being pressed
'IsMouseButtonDownRetPtrRAYLIB'          (⎕NA⊢⎕NA⍤⊢)                     R('IsMouseButtonDownRetPtr'           (('>',bool) i                                        )) ⍝ button                                                            ⍝ Check if a mouse button is being pressed
'IsMouseButtonReleasedRAYLIB'            (⎕NA⊢⎕NA⍤⊢) bool                R('IsMouseButtonReleased'             (,⊂ i                                                )) ⍝ button                                                            ⍝ Check if a mouse button has been released once
'IsMouseButtonReleasedRetPtrRAYLIB'      (⎕NA⊢⎕NA⍤⊢)                     R('IsMouseButtonReleasedRetPtr'       (('>',bool) i                                        )) ⍝ button                                                            ⍝ Check if a mouse button has been released once
'IsMouseButtonUpRAYLIB'                  (⎕NA⊢⎕NA⍤⊢) bool                R('IsMouseButtonUp'                   (,⊂ i                                                )) ⍝ button                                                            ⍝ Check if a mouse button is NOT being pressed
'IsMouseButtonUpRetPtrRAYLIB'            (⎕NA⊢⎕NA⍤⊢)                     R('IsMouseButtonUpRetPtr'             (('>',bool) i                                        )) ⍝ button                                                            ⍝ Check if a mouse button is NOT being pressed
'GetMouseXRAYLIB'                        (⎕NA⊢⎕NA⍤⊢) i                   R('GetMouseX'                         (⍬                                                   )) ⍝                                                                   ⍝ Get mouse position X
'GetMouseXRetPtrRAYLIB'                  (⎕NA⊢⎕NA⍤⊢)                     R('GetMouseXRetPtr'                   (,⊂ ('>',i)                                          )) ⍝                                                                   ⍝ Get mouse position X
'GetMouseYRAYLIB'                        (⎕NA⊢⎕NA⍤⊢) i                   R('GetMouseY'                         (⍬                                                   )) ⍝                                                                   ⍝ Get mouse position Y
'GetMouseYRetPtrRAYLIB'                  (⎕NA⊢⎕NA⍤⊢)                     R('GetMouseYRetPtr'                   (,⊂ ('>',i)                                          )) ⍝                                                                   ⍝ Get mouse position Y
'GetMousePositionRAYLIB'                 (⎕NA⊢⎕NA⍤⊢) v2                  R('GetMousePosition'                  (⍬                                                   )) ⍝                                                                   ⍝ Get mouse position XY
'GetMousePositionRetPtrRAYLIB'           (⎕NA⊢⎕NA⍤⊢)                     R('GetMousePositionRetPtr'            (,⊂ ('>',v2)                                         )) ⍝                                                                   ⍝ Get mouse position XY
'GetMouseDeltaRAYLIB'                    (⎕NA⊢⎕NA⍤⊢) v2                  R('GetMouseDelta'                     (⍬                                                   )) ⍝                                                                   ⍝ Get mouse delta between frames
'GetMouseDeltaRetPtrRAYLIB'              (⎕NA⊢⎕NA⍤⊢)                     R('GetMouseDeltaRetPtr'               (,⊂ ('>',v2)                                         )) ⍝                                                                   ⍝ Get mouse delta between frames
'SetMousePositionRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('SetMousePosition'                  (i i                                                 )) ⍝ x y                                                               ⍝ Set mouse position XY
'SetMouseOffsetRAYLIB'                   (⎕NA⊢⎕NA⍤⊢)                     R('SetMouseOffset'                    (i i                                                 )) ⍝ offsetX offsetY                                                   ⍝ Set mouse offset
'SetMouseScaleRAYLIB'                    (⎕NA⊢⎕NA⍤⊢)                     R('SetMouseScale'                     (f f                                                 )) ⍝ scaleX scaleY                                                     ⍝ Set mouse scaling
'GetMouseWheelMoveRAYLIB'                (⎕NA⊢⎕NA⍤⊢) f                   R('GetMouseWheelMove'                 (⍬                                                   )) ⍝                                                                   ⍝ Get mouse wheel movement for X or Y, whichever is larger
'GetMouseWheelMoveRetPtrRAYLIB'          (⎕NA⊢⎕NA⍤⊢)                     R('GetMouseWheelMoveRetPtr'           (,⊂ ('>',f)                                          )) ⍝                                                                   ⍝ Get mouse wheel movement for X or Y, whichever is larger
'GetMouseWheelMoveVRAYLIB'               (⎕NA⊢⎕NA⍤⊢) v2                  R('GetMouseWheelMoveV'                (⍬                                                   )) ⍝                                                                   ⍝ Get mouse wheel movement for both X and Y
'GetMouseWheelMoveVRetPtrRAYLIB'         (⎕NA⊢⎕NA⍤⊢)                     R('GetMouseWheelMoveVRetPtr'          (,⊂ ('>',v2)                                         )) ⍝                                                                   ⍝ Get mouse wheel movement for both X and Y
'SetMouseCursorRAYLIB'                   (⎕NA⊢⎕NA⍤⊢)                     R('SetMouseCursor'                    (,⊂ i                                                )) ⍝ cursor                                                            ⍝ Set mouse cursor
'GetTouchXRAYLIB'                        (⎕NA⊢⎕NA⍤⊢) i                   R('GetTouchX'                         (⍬                                                   )) ⍝                                                                   ⍝ Get touch position X for touch point 0 (relative to screen size)
'GetTouchXRetPtrRAYLIB'                  (⎕NA⊢⎕NA⍤⊢)                     R('GetTouchXRetPtr'                   (,⊂ ('>',i)                                          )) ⍝                                                                   ⍝ Get touch position X for touch point 0 (relative to screen size)
'GetTouchYRAYLIB'                        (⎕NA⊢⎕NA⍤⊢) i                   R('GetTouchY'                         (⍬                                                   )) ⍝                                                                   ⍝ Get touch position Y for touch point 0 (relative to screen size)
'GetTouchYRetPtrRAYLIB'                  (⎕NA⊢⎕NA⍤⊢)                     R('GetTouchYRetPtr'                   (,⊂ ('>',i)                                          )) ⍝                                                                   ⍝ Get touch position Y for touch point 0 (relative to screen size)
'GetTouchPositionRAYLIB'                 (⎕NA⊢⎕NA⍤⊢) v2                  R('GetTouchPosition'                  (,⊂ i                                                )) ⍝ index                                                             ⍝ Get touch position XY for a touch point index (relative to screen size)
'GetTouchPositionRetPtrRAYLIB'           (⎕NA⊢⎕NA⍤⊢)                     R('GetTouchPositionRetPtr'            (('>',v2) i                                          )) ⍝ index                                                             ⍝ Get touch position XY for a touch point index (relative to screen size)
'GetTouchPointIdRAYLIB'                  (⎕NA⊢⎕NA⍤⊢) i                   R('GetTouchPointId'                   (,⊂ i                                                )) ⍝ index                                                             ⍝ Get touch point identifier for given index
'GetTouchPointIdRetPtrRAYLIB'            (⎕NA⊢⎕NA⍤⊢)                     R('GetTouchPointIdRetPtr'             (('>',i) i                                           )) ⍝ index                                                             ⍝ Get touch point identifier for given index
'GetTouchPointCountRAYLIB'               (⎕NA⊢⎕NA⍤⊢) i                   R('GetTouchPointCount'                (⍬                                                   )) ⍝                                                                   ⍝ Get number of touch points
'GetTouchPointCountRetPtrRAYLIB'         (⎕NA⊢⎕NA⍤⊢)                     R('GetTouchPointCountRetPtr'          (,⊂ ('>',i)                                          )) ⍝                                                                   ⍝ Get number of touch points
'SetGesturesEnabledRAYLIB'               (⎕NA⊢⎕NA⍤⊢)                     R('SetGesturesEnabled'                (,⊂ u                                                )) ⍝ flags                                                             ⍝ Enable a set of gestures using flags
'IsGestureDetectedRAYLIB'                (⎕NA⊢⎕NA⍤⊢) bool                R('IsGestureDetected'                 (,⊂ u                                                )) ⍝ gesture                                                           ⍝ Check if a gesture have been detected
'IsGestureDetectedRetPtrRAYLIB'          (⎕NA⊢⎕NA⍤⊢)                     R('IsGestureDetectedRetPtr'           (('>',bool) u                                        )) ⍝ gesture                                                           ⍝ Check if a gesture have been detected
'GetGestureDetectedRAYLIB'               (⎕NA⊢⎕NA⍤⊢) i                   R('GetGestureDetected'                (⍬                                                   )) ⍝                                                                   ⍝ Get latest detected gesture
'GetGestureDetectedRetPtrRAYLIB'         (⎕NA⊢⎕NA⍤⊢)                     R('GetGestureDetectedRetPtr'          (,⊂ ('>',i)                                          )) ⍝                                                                   ⍝ Get latest detected gesture
'GetGestureHoldDurationRAYLIB'           (⎕NA⊢⎕NA⍤⊢) f                   R('GetGestureHoldDuration'            (⍬                                                   )) ⍝                                                                   ⍝ Get gesture hold time in milliseconds
'GetGestureHoldDurationRetPtrRAYLIB'     (⎕NA⊢⎕NA⍤⊢)                     R('GetGestureHoldDurationRetPtr'      (,⊂ ('>',f)                                          )) ⍝                                                                   ⍝ Get gesture hold time in milliseconds
'GetGestureDragVectorRAYLIB'             (⎕NA⊢⎕NA⍤⊢) v2                  R('GetGestureDragVector'              (⍬                                                   )) ⍝                                                                   ⍝ Get gesture drag vector
'GetGestureDragVectorRetPtrRAYLIB'       (⎕NA⊢⎕NA⍤⊢)                     R('GetGestureDragVectorRetPtr'        (,⊂ ('>',v2)                                         )) ⍝                                                                   ⍝ Get gesture drag vector
'GetGestureDragAngleRAYLIB'              (⎕NA⊢⎕NA⍤⊢) f                   R('GetGestureDragAngle'               (⍬                                                   )) ⍝                                                                   ⍝ Get gesture drag angle
'GetGestureDragAngleRetPtrRAYLIB'        (⎕NA⊢⎕NA⍤⊢)                     R('GetGestureDragAngleRetPtr'         (,⊂ ('>',f)                                          )) ⍝                                                                   ⍝ Get gesture drag angle
'GetGesturePinchVectorRAYLIB'            (⎕NA⊢⎕NA⍤⊢) v2                  R('GetGesturePinchVector'             (⍬                                                   )) ⍝                                                                   ⍝ Get gesture pinch delta
'GetGesturePinchVectorRetPtrRAYLIB'      (⎕NA⊢⎕NA⍤⊢)                     R('GetGesturePinchVectorRetPtr'       (,⊂ ('>',v2)                                         )) ⍝                                                                   ⍝ Get gesture pinch delta
'GetGesturePinchAngleRAYLIB'             (⎕NA⊢⎕NA⍤⊢) f                   R('GetGesturePinchAngle'              (⍬                                                   )) ⍝                                                                   ⍝ Get gesture pinch angle
'GetGesturePinchAngleRetPtrRAYLIB'       (⎕NA⊢⎕NA⍤⊢)                     R('GetGesturePinchAngleRetPtr'        (,⊂ ('>',f)                                          )) ⍝                                                                   ⍝ Get gesture pinch angle
'UpdateCameraRAYLIB'                     (⎕NA⊢⎕NA⍤⊢)                     R('UpdateCamera'                      (('=',Camera) i                                      )) ⍝ camera mode                                                       ⍝ Update camera position for selected mode
'UpdateCameraProRAYLIB'                  (⎕NA⊢⎕NA⍤⊢)                     R('UpdateCameraPro'                   (('=',Camera) v3 v3 f                                )) ⍝ camera movement rotation zoom                                     ⍝ Update camera movement/rotation
'SetShapesTextureRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('SetShapesTexture'                  (Texture2D Rectangle                                 )) ⍝ texture source                                                    ⍝ Set texture and rectangle to be used on shapes drawing
'DrawPixelRAYLIB'                        (⎕NA⊢⎕NA⍤⊢)                     R('DrawPixel'                         (i i Color                                           )) ⍝ posX posY color                                                   ⍝ Draw a pixel
'DrawPixelVRAYLIB'                       (⎕NA⊢⎕NA⍤⊢)                     R('DrawPixelV'                        (v2 Color                                            )) ⍝ position color                                                    ⍝ Draw a pixel (Vector version)
'DrawLineRAYLIB'                         (⎕NA⊢⎕NA⍤⊢)                     R('DrawLine'                          (i i i i Color                                       )) ⍝ startPosX startPosY endPosX endPosY color                         ⍝ Draw a line
'DrawLineVRAYLIB'                        (⎕NA⊢⎕NA⍤⊢)                     R('DrawLineV'                         (v2 v2 Color                                         )) ⍝ startPos endPos color                                             ⍝ Draw a line (using gl lines)
'DrawLineExRAYLIB'                       (⎕NA⊢⎕NA⍤⊢)                     R('DrawLineEx'                        (v2 v2 f Color                                       )) ⍝ startPos endPos thick color                                       ⍝ Draw a line (using triangles/quads)
'DrawLineStripRAYLIB'                    (⎕NA⊢⎕NA⍤⊢)                     R('DrawLineStrip'                     (('=',v2) i Color                                    )) ⍝ points pointCount color                                           ⍝ Draw lines sequence (using gl lines)
'DrawLineBezierRAYLIB'                   (⎕NA⊢⎕NA⍤⊢)                     R('DrawLineBezier'                    (v2 v2 f Color                                       )) ⍝ startPos endPos thick color                                       ⍝ Draw line segment cubic-bezier in-out interpolation
'DrawCircleRAYLIB'                       (⎕NA⊢⎕NA⍤⊢)                     R('DrawCircle'                        (i i f Color                                         )) ⍝ centerX centerY radius color                                      ⍝ Draw a color-filled circle
'DrawCircleSectorRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('DrawCircleSector'                  (v2 f f f i Color                                    )) ⍝ center radius startAngle endAngle segments color                  ⍝ Draw a piece of a circle
'DrawCircleSectorLinesRAYLIB'            (⎕NA⊢⎕NA⍤⊢)                     R('DrawCircleSectorLines'             (v2 f f f i Color                                    )) ⍝ center radius startAngle endAngle segments color                  ⍝ Draw circle sector outline
'DrawCircleGradientRAYLIB'               (⎕NA⊢⎕NA⍤⊢)                     R('DrawCircleGradient'                (i i f Color Color                                   )) ⍝ centerX centerY radius color1 color2                              ⍝ Draw a gradient-filled circle
'DrawCircleVRAYLIB'                      (⎕NA⊢⎕NA⍤⊢)                     R('DrawCircleV'                       (v2 f Color                                          )) ⍝ center radius color                                               ⍝ Draw a color-filled circle (Vector version)
'DrawCircleLinesRAYLIB'                  (⎕NA⊢⎕NA⍤⊢)                     R('DrawCircleLines'                   (i i f Color                                         )) ⍝ centerX centerY radius color                                      ⍝ Draw circle outline
'DrawCircleLinesVRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('DrawCircleLinesV'                  (v2 f Color                                          )) ⍝ center radius color                                               ⍝ Draw circle outline (Vector version)
'DrawEllipseRAYLIB'                      (⎕NA⊢⎕NA⍤⊢)                     R('DrawEllipse'                       (i i f f Color                                       )) ⍝ centerX centerY radiusH radiusV color                             ⍝ Draw ellipse
'DrawEllipseLinesRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('DrawEllipseLines'                  (i i f f Color                                       )) ⍝ centerX centerY radiusH radiusV color                             ⍝ Draw ellipse outline
'DrawRingRAYLIB'                         (⎕NA⊢⎕NA⍤⊢)                     R('DrawRing'                          (v2 f f f f i Color                                  )) ⍝ center innerRadius outerRadius startAngle endAngle segments color ⍝ Draw ring
'DrawRingLinesRAYLIB'                    (⎕NA⊢⎕NA⍤⊢)                     R('DrawRingLines'                     (v2 f f f f i Color                                  )) ⍝ center innerRadius outerRadius startAngle endAngle segments color ⍝ Draw ring outline
'DrawRectangleRAYLIB'                    (⎕NA⊢⎕NA⍤⊢)                     R('DrawRectangle'                     (i i i i Color                                       )) ⍝ posX posY width height color                                      ⍝ Draw a color-filled rectangle
'DrawRectangleVRAYLIB'                   (⎕NA⊢⎕NA⍤⊢)                     R('DrawRectangleV'                    (v2 v2 Color                                         )) ⍝ position size color                                               ⍝ Draw a color-filled rectangle (Vector version)
'DrawRectangleRecRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('DrawRectangleRec'                  (Rectangle Color                                     )) ⍝ rec color                                                         ⍝ Draw a color-filled rectangle
'DrawRectangleProRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('DrawRectanglePro'                  (Rectangle v2 f Color                                )) ⍝ rec origin rotation color                                         ⍝ Draw a color-filled rectangle with pro parameters
'DrawRectangleGradientVRAYLIB'           (⎕NA⊢⎕NA⍤⊢)                     R('DrawRectangleGradientV'            (i i i i Color Color                                 )) ⍝ posX posY width height color1 color2                              ⍝ Draw a vertical-gradient-filled rectangle
'DrawRectangleGradientHRAYLIB'           (⎕NA⊢⎕NA⍤⊢)                     R('DrawRectangleGradientH'            (i i i i Color Color                                 )) ⍝ posX posY width height color1 color2                              ⍝ Draw a horizontal-gradient-filled rectangle
'DrawRectangleGradientExRAYLIB'          (⎕NA⊢⎕NA⍤⊢)                     R('DrawRectangleGradientEx'           (Rectangle Color Color Color Color                   )) ⍝ rec col1 col2 col3 col4                                           ⍝ Draw a gradient-filled rectangle with custom vertex colors
'DrawRectangleLinesRAYLIB'               (⎕NA⊢⎕NA⍤⊢)                     R('DrawRectangleLines'                (i i i i Color                                       )) ⍝ posX posY width height color                                      ⍝ Draw rectangle outline
'DrawRectangleLinesExRAYLIB'             (⎕NA⊢⎕NA⍤⊢)                     R('DrawRectangleLinesEx'              (Rectangle f Color                                   )) ⍝ rec lineThick color                                               ⍝ Draw rectangle outline with extended parameters
'DrawRectangleRoundedRAYLIB'             (⎕NA⊢⎕NA⍤⊢)                     R('DrawRectangleRounded'              (Rectangle f i Color                                 )) ⍝ rec roundness segments color                                      ⍝ Draw rectangle with rounded edges
'DrawRectangleRoundedLinesRAYLIB'        (⎕NA⊢⎕NA⍤⊢)                     R('DrawRectangleRoundedLines'         (Rectangle f i f Color                               )) ⍝ rec roundness segments lineThick color                            ⍝ Draw rectangle with rounded edges outline
'DrawTriangleRAYLIB'                     (⎕NA⊢⎕NA⍤⊢)                     R('DrawTriangle'                      (v2 v2 v2 Color                                      )) ⍝ v1 v2 v3 color                                                    ⍝ Draw a color-filled triangle (vertex in counter-clockwise order!)
'DrawTriangleLinesRAYLIB'                (⎕NA⊢⎕NA⍤⊢)                     R('DrawTriangleLines'                 (v2 v2 v2 Color                                      )) ⍝ v1 v2 v3 color                                                    ⍝ Draw triangle outline (vertex in counter-clockwise order!)
'DrawTriangleFanRAYLIB'                  (⎕NA⊢⎕NA⍤⊢)                     R('DrawTriangleFan'                   (('=',v2) i Color                                    )) ⍝ points pointCount color                                           ⍝ Draw a triangle fan defined by points (first vertex is the center)
'DrawTriangleStripRAYLIB'                (⎕NA⊢⎕NA⍤⊢)                     R('DrawTriangleStrip'                 (('=',v2) i Color                                    )) ⍝ points pointCount color                                           ⍝ Draw a triangle strip defined by points
'DrawPolyRAYLIB'                         (⎕NA⊢⎕NA⍤⊢)                     R('DrawPoly'                          (v2 i f f Color                                      )) ⍝ center sides radius rotation color                                ⍝ Draw a regular polygon (Vector version)
'DrawPolyLinesRAYLIB'                    (⎕NA⊢⎕NA⍤⊢)                     R('DrawPolyLines'                     (v2 i f f Color                                      )) ⍝ center sides radius rotation color                                ⍝ Draw a polygon outline of n sides
'DrawPolyLinesExRAYLIB'                  (⎕NA⊢⎕NA⍤⊢)                     R('DrawPolyLinesEx'                   (v2 i f f f Color                                    )) ⍝ center sides radius rotation lineThick color                      ⍝ Draw a polygon outline of n sides with extended parameters
'DrawSplineLinearRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('DrawSplineLinear'                  (('=',v2) i f Color                                  )) ⍝ points pointCount thick color                                     ⍝ Draw spline: Linear, minimum 2 points
'DrawSplineBasisRAYLIB'                  (⎕NA⊢⎕NA⍤⊢)                     R('DrawSplineBasis'                   (('=',v2) i f Color                                  )) ⍝ points pointCount thick color                                     ⍝ Draw spline: B-Spline, minimum 4 points
'DrawSplineCatmullRomRAYLIB'             (⎕NA⊢⎕NA⍤⊢)                     R('DrawSplineCatmullRom'              (('=',v2) i f Color                                  )) ⍝ points pointCount thick color                                     ⍝ Draw spline: Catmull-Rom, minimum 4 points
'DrawSplineBezierQuadraticRAYLIB'        (⎕NA⊢⎕NA⍤⊢)                     R('DrawSplineBezierQuadratic'         (('=',v2) i f Color                                  )) ⍝ points pointCount thick color                                     ⍝ Draw spline: Quadratic Bezier, minimum 3 points (1 control point): [p1, c2, p3, c4...]
'DrawSplineBezierCubicRAYLIB'            (⎕NA⊢⎕NA⍤⊢)                     R('DrawSplineBezierCubic'             (('=',v2) i f Color                                  )) ⍝ points pointCount thick color                                     ⍝ Draw spline: Cubic Bezier, minimum 4 points (2 control points): [p1, c2, c3, p4, c5, c6...]
'DrawSplineSegmentLinearRAYLIB'          (⎕NA⊢⎕NA⍤⊢)                     R('DrawSplineSegmentLinear'           (v2 v2 f Color                                       )) ⍝ p1 p2 thick color                                                 ⍝ Draw spline segment: Linear, 2 points
'DrawSplineSegmentBasisRAYLIB'           (⎕NA⊢⎕NA⍤⊢)                     R('DrawSplineSegmentBasis'            (v2 v2 v2 v2 f Color                                 )) ⍝ p1 p2 p3 p4 thick color                                           ⍝ Draw spline segment: B-Spline, 4 points
'DrawSplineSegmentCatmullRomRAYLIB'      (⎕NA⊢⎕NA⍤⊢)                     R('DrawSplineSegmentCatmullRom'       (v2 v2 v2 v2 f Color                                 )) ⍝ p1 p2 p3 p4 thick color                                           ⍝ Draw spline segment: Catmull-Rom, 4 points
'DrawSplineSegmentBezierQuadraticRAYLIB' (⎕NA⊢⎕NA⍤⊢)                     R('DrawSplineSegmentBezierQuadratic'  (v2 v2 v2 f Color                                    )) ⍝ p1 c2 p3 thick color                                              ⍝ Draw spline segment: Quadratic Bezier, 2 points, 1 control point
'DrawSplineSegmentBezierCubicRAYLIB'     (⎕NA⊢⎕NA⍤⊢)                     R('DrawSplineSegmentBezierCubic'      (v2 v2 v2 v2 f Color                                 )) ⍝ p1 c2 c3 p4 thick color                                           ⍝ Draw spline segment: Cubic Bezier, 2 points, 2 control points
'GetSplinePointLinearRAYLIB'             (⎕NA⊢⎕NA⍤⊢) v2                  R('GetSplinePointLinear'              (v2 v2 f                                             )) ⍝ startPos endPos t                                                 ⍝ Get (evaluate) spline point: Linear
'GetSplinePointLinearRetPtrRAYLIB'       (⎕NA⊢⎕NA⍤⊢)                     R('GetSplinePointLinearRetPtr'        (('>',v2) v2 v2 f                                    )) ⍝ startPos endPos t                                                 ⍝ Get (evaluate) spline point: Linear
'GetSplinePointBasisRAYLIB'              (⎕NA⊢⎕NA⍤⊢) v2                  R('GetSplinePointBasis'               (v2 v2 v2 v2 f                                       )) ⍝ p1 p2 p3 p4 t                                                     ⍝ Get (evaluate) spline point: B-Spline
'GetSplinePointBasisRetPtrRAYLIB'        (⎕NA⊢⎕NA⍤⊢)                     R('GetSplinePointBasisRetPtr'         (('>',v2) v2 v2 v2 v2 f                              )) ⍝ p1 p2 p3 p4 t                                                     ⍝ Get (evaluate) spline point: B-Spline
'GetSplinePointCatmullRomRAYLIB'         (⎕NA⊢⎕NA⍤⊢) v2                  R('GetSplinePointCatmullRom'          (v2 v2 v2 v2 f                                       )) ⍝ p1 p2 p3 p4 t                                                     ⍝ Get (evaluate) spline point: Catmull-Rom
'GetSplinePointCatmullRomRetPtrRAYLIB'   (⎕NA⊢⎕NA⍤⊢)                     R('GetSplinePointCatmullRomRetPtr'    (('>',v2) v2 v2 v2 v2 f                              )) ⍝ p1 p2 p3 p4 t                                                     ⍝ Get (evaluate) spline point: Catmull-Rom
'GetSplinePointBezierQuadRAYLIB'         (⎕NA⊢⎕NA⍤⊢) v2                  R('GetSplinePointBezierQuad'          (v2 v2 v2 f                                          )) ⍝ p1 c2 p3 t                                                        ⍝ Get (evaluate) spline point: Quadratic Bezier
'GetSplinePointBezierQuadRetPtrRAYLIB'   (⎕NA⊢⎕NA⍤⊢)                     R('GetSplinePointBezierQuadRetPtr'    (('>',v2) v2 v2 v2 f                                 )) ⍝ p1 c2 p3 t                                                        ⍝ Get (evaluate) spline point: Quadratic Bezier
'GetSplinePointBezierCubicRAYLIB'        (⎕NA⊢⎕NA⍤⊢) v2                  R('GetSplinePointBezierCubic'         (v2 v2 v2 v2 f                                       )) ⍝ p1 c2 c3 p4 t                                                     ⍝ Get (evaluate) spline point: Cubic Bezier
'GetSplinePointBezierCubicRetPtrRAYLIB'  (⎕NA⊢⎕NA⍤⊢)                     R('GetSplinePointBezierCubicRetPtr'   (('>',v2) v2 v2 v2 v2 f                              )) ⍝ p1 c2 c3 p4 t                                                     ⍝ Get (evaluate) spline point: Cubic Bezier
'CheckCollisionRecsRAYLIB'               (⎕NA⊢⎕NA⍤⊢) bool                R('CheckCollisionRecs'                (Rectangle Rectangle                                 )) ⍝ rec1 rec2                                                         ⍝ Check collision between two rectangles
'CheckCollisionRecsRetPtrRAYLIB'         (⎕NA⊢⎕NA⍤⊢)                     R('CheckCollisionRecsRetPtr'          (('>',bool) Rectangle Rectangle                      )) ⍝ rec1 rec2                                                         ⍝ Check collision between two rectangles
'CheckCollisionCirclesRAYLIB'            (⎕NA⊢⎕NA⍤⊢) bool                R('CheckCollisionCircles'             (v2 f v2 f                                           )) ⍝ center1 radius1 center2 radius2                                   ⍝ Check collision between two circles
'CheckCollisionCirclesRetPtrRAYLIB'      (⎕NA⊢⎕NA⍤⊢)                     R('CheckCollisionCirclesRetPtr'       (('>',bool) v2 f v2 f                                )) ⍝ center1 radius1 center2 radius2                                   ⍝ Check collision between two circles
'CheckCollisionCircleRecRAYLIB'          (⎕NA⊢⎕NA⍤⊢) bool                R('CheckCollisionCircleRec'           (v2 f Rectangle                                      )) ⍝ center radius rec                                                 ⍝ Check collision between circle and rectangle
'CheckCollisionCircleRecRetPtrRAYLIB'    (⎕NA⊢⎕NA⍤⊢)                     R('CheckCollisionCircleRecRetPtr'     (('>',bool) v2 f Rectangle                           )) ⍝ center radius rec                                                 ⍝ Check collision between circle and rectangle
'CheckCollisionPointRecRAYLIB'           (⎕NA⊢⎕NA⍤⊢) bool                R('CheckCollisionPointRec'            (v2 Rectangle                                        )) ⍝ point rec                                                         ⍝ Check if point is inside rectangle
'CheckCollisionPointRecRetPtrRAYLIB'     (⎕NA⊢⎕NA⍤⊢)                     R('CheckCollisionPointRecRetPtr'      (('>',bool) v2 Rectangle                             )) ⍝ point rec                                                         ⍝ Check if point is inside rectangle
'CheckCollisionPointCircleRAYLIB'        (⎕NA⊢⎕NA⍤⊢) bool                R('CheckCollisionPointCircle'         (v2 v2 f                                             )) ⍝ point center radius                                               ⍝ Check if point is inside circle
'CheckCollisionPointCircleRetPtrRAYLIB'  (⎕NA⊢⎕NA⍤⊢)                     R('CheckCollisionPointCircleRetPtr'   (('>',bool) v2 v2 f                                  )) ⍝ point center radius                                               ⍝ Check if point is inside circle
'CheckCollisionPointTriangleRAYLIB'      (⎕NA⊢⎕NA⍤⊢) bool                R('CheckCollisionPointTriangle'       (v2 v2 v2 v2                                         )) ⍝ point p1 p2 p3                                                    ⍝ Check if point is inside a triangle
'CheckCollisionPointTriangleRetPtrRAYLIB'(⎕NA⊢⎕NA⍤⊢)                     R('CheckCollisionPointTriangleRetPtr' (('>',bool) v2 v2 v2 v2                              )) ⍝ point p1 p2 p3                                                    ⍝ Check if point is inside a triangle
'CheckCollisionPointPolyRAYLIB'          (⎕NA⊢⎕NA⍤⊢) bool                R('CheckCollisionPointPoly'           (v2 ('=',v2) i                                       )) ⍝ point points pointCount                                           ⍝ Check if point is within a polygon described by array of vertices
'CheckCollisionPointPolyRetPtrRAYLIB'    (⎕NA⊢⎕NA⍤⊢)                     R('CheckCollisionPointPolyRetPtr'     (('>',bool) v2 ('=',v2) i                            )) ⍝ point points pointCount                                           ⍝ Check if point is within a polygon described by array of vertices
'CheckCollisionLinesRAYLIB'              (⎕NA⊢⎕NA⍤⊢) bool                R('CheckCollisionLines'               (v2 v2 v2 v2 ('=',v2)                                )) ⍝ startPos1 endPos1 startPos2 endPos2 collisionPoint                ⍝ Check the collision between two lines defined by two points each, returns collision point by reference
'CheckCollisionLinesRetPtrRAYLIB'        (⎕NA⊢⎕NA⍤⊢)                     R('CheckCollisionLinesRetPtr'         (('>',bool) v2 v2 v2 v2 ('=',v2)                     )) ⍝ startPos1 endPos1 startPos2 endPos2 collisionPoint                ⍝ Check the collision between two lines defined by two points each, returns collision point by reference
'CheckCollisionPointLineRAYLIB'          (⎕NA⊢⎕NA⍤⊢) bool                R('CheckCollisionPointLine'           (v2 v2 v2 i                                          )) ⍝ point p1 p2 threshold                                             ⍝ Check if point belongs to line created between two points [p1] and [p2] with defined margin in pixels [threshold]
'CheckCollisionPointLineRetPtrRAYLIB'    (⎕NA⊢⎕NA⍤⊢)                     R('CheckCollisionPointLineRetPtr'     (('>',bool) v2 v2 v2 i                               )) ⍝ point p1 p2 threshold                                             ⍝ Check if point belongs to line created between two points [p1] and [p2] with defined margin in pixels [threshold]
'GetCollisionRecRAYLIB'                  (⎕NA⊢⎕NA⍤⊢) Rectangle           R('GetCollisionRec'                   (Rectangle Rectangle                                 )) ⍝ rec1 rec2                                                         ⍝ Get collision rectangle for two rectangles collision
'GetCollisionRecRetPtrRAYLIB'            (⎕NA⊢⎕NA⍤⊢)                     R('GetCollisionRecRetPtr'             (('>',Rectangle) Rectangle Rectangle                 )) ⍝ rec1 rec2                                                         ⍝ Get collision rectangle for two rectangles collision
'LoadImageRAYLIB'                        (⎕NA⊢⎕NA⍤⊢) Image               R('LoadImage'                         (,⊂ str                                              )) ⍝ fileName                                                          ⍝ Load image from file into CPU memory (RAM)
'LoadImageRetPtrRAYLIB'                  (⎕NA⊢⎕NA⍤⊢)                     R('LoadImageRetPtr'                   (('>',Image) str                                     )) ⍝ fileName                                                          ⍝ Load image from file into CPU memory (RAM)
'LoadImageRawRAYLIB'                     (⎕NA⊢⎕NA⍤⊢) Image               R('LoadImageRaw'                      (str i i i i                                         )) ⍝ fileName width height format headerSize                           ⍝ Load image from RAW file data
'LoadImageRawRetPtrRAYLIB'               (⎕NA⊢⎕NA⍤⊢)                     R('LoadImageRawRetPtr'                (('>',Image) str i i i i                             )) ⍝ fileName width height format headerSize                           ⍝ Load image from RAW file data
'LoadImageSvgRAYLIB'                     (⎕NA⊢⎕NA⍤⊢) Image               R('LoadImageSvg'                      (str i i                                             )) ⍝ fileNameOrString width height                                     ⍝ Load image from SVG file data or string with specified size
'LoadImageSvgRetPtrRAYLIB'               (⎕NA⊢⎕NA⍤⊢)                     R('LoadImageSvgRetPtr'                (('>',Image) str i i                                 )) ⍝ fileNameOrString width height                                     ⍝ Load image from SVG file data or string with specified size
'LoadImageAnimRAYLIB'                    (⎕NA⊢⎕NA⍤⊢) Image               R('LoadImageAnim'                     (str ('=',i)                                         )) ⍝ fileName frames                                                   ⍝ Load image sequence from file (frames appended to image.data)
'LoadImageAnimRetPtrRAYLIB'              (⎕NA⊢⎕NA⍤⊢)                     R('LoadImageAnimRetPtr'               (('>',Image) str ('=',i)                             )) ⍝ fileName frames                                                   ⍝ Load image sequence from file (frames appended to image.data)
'LoadImageFromMemoryRAYLIB'              (⎕NA⊢⎕NA⍤⊢) Image               R('LoadImageFromMemory'               (str ustr i                                          )) ⍝ fileType fileData dataSize                                        ⍝ Load image from memory buffer, fileType refers to extension: i.e. '.png'
'LoadImageFromMemoryRetPtrRAYLIB'        (⎕NA⊢⎕NA⍤⊢)                     R('LoadImageFromMemoryRetPtr'         (('>',Image) str ustr i                              )) ⍝ fileType fileData dataSize                                        ⍝ Load image from memory buffer, fileType refers to extension: i.e. '.png'
'LoadImageFromTextureRAYLIB'             (⎕NA⊢⎕NA⍤⊢) Image               R('LoadImageFromTexture'              (,⊂ Texture2D                                        )) ⍝ texture                                                           ⍝ Load image from GPU texture data
'LoadImageFromTextureRetPtrRAYLIB'       (⎕NA⊢⎕NA⍤⊢)                     R('LoadImageFromTextureRetPtr'        (('>',Image) Texture2D                               )) ⍝ texture                                                           ⍝ Load image from GPU texture data
'LoadImageFromScreenRAYLIB'              (⎕NA⊢⎕NA⍤⊢) Image               R('LoadImageFromScreen'               (⍬                                                   )) ⍝                                                                   ⍝ Load image from screen buffer and (screenshot)
'LoadImageFromScreenRetPtrRAYLIB'        (⎕NA⊢⎕NA⍤⊢)                     R('LoadImageFromScreenRetPtr'         (,⊂ ('>',Image)                                      )) ⍝                                                                   ⍝ Load image from screen buffer and (screenshot)
'IsImageReadyRAYLIB'                     (⎕NA⊢⎕NA⍤⊢) bool                R('IsImageReady'                      (,⊂ Image                                            )) ⍝ image                                                             ⍝ Check if an image is ready
'IsImageReadyRetPtrRAYLIB'               (⎕NA⊢⎕NA⍤⊢)                     R('IsImageReadyRetPtr'                (('>',bool) Image                                    )) ⍝ image                                                             ⍝ Check if an image is ready
'UnloadImageRAYLIB'                      (⎕NA⊢⎕NA⍤⊢)                     R('UnloadImage'                       (,⊂ Image                                            )) ⍝ image                                                             ⍝ Unload image from CPU memory (RAM)
'ExportImageRAYLIB'                      (⎕NA⊢⎕NA⍤⊢) bool                R('ExportImage'                       (Image str                                           )) ⍝ image fileName                                                    ⍝ Export image data to file, returns true on success
'ExportImageRetPtrRAYLIB'                (⎕NA⊢⎕NA⍤⊢)                     R('ExportImageRetPtr'                 (('>',bool) Image str                                )) ⍝ image fileName                                                    ⍝ Export image data to file, returns true on success
'ExportImageToMemoryRAYLIB'              (⎕NA⊢⎕NA⍤⊢) (ptr⊣ustr)          R('ExportImageToMemory'               (Image str ('=',i)                                   )) ⍝ image fileType fileSize                                           ⍝ Export image to memory buffer
'ExportImageToMemoryRetPtrRAYLIB'        (⎕NA⊢⎕NA⍤⊢)                     R('ExportImageToMemoryRetPtr'         (('>',ustr) Image str ('=',i)                        )) ⍝ image fileType fileSize                                           ⍝ Export image to memory buffer
'ExportImageAsCodeRAYLIB'                (⎕NA⊢⎕NA⍤⊢) bool                R('ExportImageAsCode'                 (Image str                                           )) ⍝ image fileName                                                    ⍝ Export image as code file defining an array of bytes, returns true on success
'ExportImageAsCodeRetPtrRAYLIB'          (⎕NA⊢⎕NA⍤⊢)                     R('ExportImageAsCodeRetPtr'           (('>',bool) Image str                                )) ⍝ image fileName                                                    ⍝ Export image as code file defining an array of bytes, returns true on success
'GenImageColorRAYLIB'                    (⎕NA⊢⎕NA⍤⊢) Image               R('GenImageColor'                     (i i Color                                           )) ⍝ width height color                                                ⍝ Generate image: plain color
'GenImageColorRetPtrRAYLIB'              (⎕NA⊢⎕NA⍤⊢)                     R('GenImageColorRetPtr'               (('>',Image) i i Color                               )) ⍝ width height color                                                ⍝ Generate image: plain color
'GenImageGradientLinearRAYLIB'           (⎕NA⊢⎕NA⍤⊢) Image               R('GenImageGradientLinear'            (i i i Color Color                                   )) ⍝ width height direction start end                                  ⍝ Generate image: linear gradient, direction in degrees [0..360], 0=Vertical gradient
'GenImageGradientLinearRetPtrRAYLIB'     (⎕NA⊢⎕NA⍤⊢)                     R('GenImageGradientLinearRetPtr'      (('>',Image) i i i Color Color                       )) ⍝ width height direction start end                                  ⍝ Generate image: linear gradient, direction in degrees [0..360], 0=Vertical gradient
'GenImageGradientRadialRAYLIB'           (⎕NA⊢⎕NA⍤⊢) Image               R('GenImageGradientRadial'            (i i f Color Color                                   )) ⍝ width height density inner outer                                  ⍝ Generate image: radial gradient
'GenImageGradientRadialRetPtrRAYLIB'     (⎕NA⊢⎕NA⍤⊢)                     R('GenImageGradientRadialRetPtr'      (('>',Image) i i f Color Color                       )) ⍝ width height density inner outer                                  ⍝ Generate image: radial gradient
'GenImageGradientSquareRAYLIB'           (⎕NA⊢⎕NA⍤⊢) Image               R('GenImageGradientSquare'            (i i f Color Color                                   )) ⍝ width height density inner outer                                  ⍝ Generate image: square gradient
'GenImageGradientSquareRetPtrRAYLIB'     (⎕NA⊢⎕NA⍤⊢)                     R('GenImageGradientSquareRetPtr'      (('>',Image) i i f Color Color                       )) ⍝ width height density inner outer                                  ⍝ Generate image: square gradient
'GenImageCheckedRAYLIB'                  (⎕NA⊢⎕NA⍤⊢) Image               R('GenImageChecked'                   (i i i i Color Color                                 )) ⍝ width height checksX checksY col1 col2                            ⍝ Generate image: checked
'GenImageCheckedRetPtrRAYLIB'            (⎕NA⊢⎕NA⍤⊢)                     R('GenImageCheckedRetPtr'             (('>',Image) i i i i Color Color                     )) ⍝ width height checksX checksY col1 col2                            ⍝ Generate image: checked
'GenImageWhiteNoiseRAYLIB'               (⎕NA⊢⎕NA⍤⊢) Image               R('GenImageWhiteNoise'                (i i f                                               )) ⍝ width height factor                                               ⍝ Generate image: white noise
'GenImageWhiteNoiseRetPtrRAYLIB'         (⎕NA⊢⎕NA⍤⊢)                     R('GenImageWhiteNoiseRetPtr'          (('>',Image) i i f                                   )) ⍝ width height factor                                               ⍝ Generate image: white noise
'GenImagePerlinNoiseRAYLIB'              (⎕NA⊢⎕NA⍤⊢) Image               R('GenImagePerlinNoise'               (i i i i f                                           )) ⍝ width height offsetX offsetY scale                                ⍝ Generate image: perlin noise
'GenImagePerlinNoiseRetPtrRAYLIB'        (⎕NA⊢⎕NA⍤⊢)                     R('GenImagePerlinNoiseRetPtr'         (('>',Image) i i i i f                               )) ⍝ width height offsetX offsetY scale                                ⍝ Generate image: perlin noise
'GenImageCellularRAYLIB'                 (⎕NA⊢⎕NA⍤⊢) Image               R('GenImageCellular'                  (i i i                                               )) ⍝ width height tileSize                                             ⍝ Generate image: cellular algorithm, bigger tileSize means bigger cells
'GenImageCellularRetPtrRAYLIB'           (⎕NA⊢⎕NA⍤⊢)                     R('GenImageCellularRetPtr'            (('>',Image) i i i                                   )) ⍝ width height tileSize                                             ⍝ Generate image: cellular algorithm, bigger tileSize means bigger cells
'GenImageTextRAYLIB'                     (⎕NA⊢⎕NA⍤⊢) Image               R('GenImageText'                      (i i str                                             )) ⍝ width height text                                                 ⍝ Generate image: grayscale image from text data
'GenImageTextRetPtrRAYLIB'               (⎕NA⊢⎕NA⍤⊢)                     R('GenImageTextRetPtr'                (('>',Image) i i str                                 )) ⍝ width height text                                                 ⍝ Generate image: grayscale image from text data
'ImageCopyRAYLIB'                        (⎕NA⊢⎕NA⍤⊢) Image               R('ImageCopy'                         (,⊂ Image                                            )) ⍝ image                                                             ⍝ Create an image duplicate (useful for transformations)
'ImageCopyRetPtrRAYLIB'                  (⎕NA⊢⎕NA⍤⊢)                     R('ImageCopyRetPtr'                   (('>',Image) Image                                   )) ⍝ image                                                             ⍝ Create an image duplicate (useful for transformations)
'ImageFromImageRAYLIB'                   (⎕NA⊢⎕NA⍤⊢) Image               R('ImageFromImage'                    (Image Rectangle                                     )) ⍝ image rec                                                         ⍝ Create an image from another image piece
'ImageFromImageRetPtrRAYLIB'             (⎕NA⊢⎕NA⍤⊢)                     R('ImageFromImageRetPtr'              (('>',Image) Image Rectangle                         )) ⍝ image rec                                                         ⍝ Create an image from another image piece
'ImageTextRAYLIB'                        (⎕NA⊢⎕NA⍤⊢) Image               R('ImageText'                         (str i Color                                         )) ⍝ text fontSize color                                               ⍝ Create an image from text (default font)
'ImageTextRetPtrRAYLIB'                  (⎕NA⊢⎕NA⍤⊢)                     R('ImageTextRetPtr'                   (('>',Image) str i Color                             )) ⍝ text fontSize color                                               ⍝ Create an image from text (default font)
'ImageTextExRAYLIB'                      (⎕NA⊢⎕NA⍤⊢) Image               R('ImageTextEx'                       (Font str f f Color                                  )) ⍝ font text fontSize spacing tint                                   ⍝ Create an image from text (custom sprite font)
'ImageTextExRetPtrRAYLIB'                (⎕NA⊢⎕NA⍤⊢)                     R('ImageTextExRetPtr'                 (('>',Image) Font str f f Color                      )) ⍝ font text fontSize spacing tint                                   ⍝ Create an image from text (custom sprite font)
'ImageFormatRAYLIB'                      (⎕NA⊢⎕NA⍤⊢)                     R('ImageFormat'                       (('=',Image) i                                       )) ⍝ image newFormat                                                   ⍝ Convert image data to desired format
'ImageToPOTRAYLIB'                       (⎕NA⊢⎕NA⍤⊢)                     R('ImageToPOT'                        (('=',Image) Color                                   )) ⍝ image fill                                                        ⍝ Convert image to POT (power-of-two)
'ImageCropRAYLIB'                        (⎕NA⊢⎕NA⍤⊢)                     R('ImageCrop'                         (('=',Image) Rectangle                               )) ⍝ image crop                                                        ⍝ Crop an image to a defined rectangle
'ImageAlphaCropRAYLIB'                   (⎕NA⊢⎕NA⍤⊢)                     R('ImageAlphaCrop'                    (('=',Image) f                                       )) ⍝ image threshold                                                   ⍝ Crop image depending on alpha value
'ImageAlphaClearRAYLIB'                  (⎕NA⊢⎕NA⍤⊢)                     R('ImageAlphaClear'                   (('=',Image) Color f                                 )) ⍝ image color threshold                                             ⍝ Clear alpha channel to desired color
'ImageAlphaMaskRAYLIB'                   (⎕NA⊢⎕NA⍤⊢)                     R('ImageAlphaMask'                    (('=',Image) Image                                   )) ⍝ image alphaMask                                                   ⍝ Apply alpha mask to image
'ImageAlphaPremultiplyRAYLIB'            (⎕NA⊢⎕NA⍤⊢)                     R('ImageAlphaPremultiply'             (,⊂ ('=',Image)                                      )) ⍝ image                                                             ⍝ Premultiply alpha channel
'ImageBlurGaussianRAYLIB'                (⎕NA⊢⎕NA⍤⊢)                     R('ImageBlurGaussian'                 (('=',Image) i                                       )) ⍝ image blurSize                                                    ⍝ Apply Gaussian blur using a box blur approximation
'ImageResizeRAYLIB'                      (⎕NA⊢⎕NA⍤⊢)                     R('ImageResize'                       (('=',Image) i i                                     )) ⍝ image newWidth newHeight                                          ⍝ Resize image (Bicubic scaling algorithm)
'ImageResizeNNRAYLIB'                    (⎕NA⊢⎕NA⍤⊢)                     R('ImageResizeNN'                     (('=',Image) i i                                     )) ⍝ image newWidth newHeight                                          ⍝ Resize image (Nearest-Neighbor scaling algorithm)
'ImageResizeCanvasRAYLIB'                (⎕NA⊢⎕NA⍤⊢)                     R('ImageResizeCanvas'                 (('=',Image) i i i i Color                           )) ⍝ image newWidth newHeight offsetX offsetY fill                     ⍝ Resize canvas and fill with color
'ImageMipmapsRAYLIB'                     (⎕NA⊢⎕NA⍤⊢)                     R('ImageMipmaps'                      (,⊂ ('=',Image)                                      )) ⍝ image                                                             ⍝ Compute all mipmap levels for a provided image
'ImageDitherRAYLIB'                      (⎕NA⊢⎕NA⍤⊢)                     R('ImageDither'                       (('=',Image) i i i i                                 )) ⍝ image rBpp gBpp bBpp aBpp                                         ⍝ Dither image data to 16bpp or lower (Floyd-Steinberg dithering)
'ImageFlipVerticalRAYLIB'                (⎕NA⊢⎕NA⍤⊢)                     R('ImageFlipVertical'                 (,⊂ ('=',Image)                                      )) ⍝ image                                                             ⍝ Flip image vertically
'ImageFlipHorizontalRAYLIB'              (⎕NA⊢⎕NA⍤⊢)                     R('ImageFlipHorizontal'               (,⊂ ('=',Image)                                      )) ⍝ image                                                             ⍝ Flip image horizontally
'ImageRotateRAYLIB'                      (⎕NA⊢⎕NA⍤⊢)                     R('ImageRotate'                       (('=',Image) i                                       )) ⍝ image degrees                                                     ⍝ Rotate image by input angle in degrees (-359 to 359)
'ImageRotateCWRAYLIB'                    (⎕NA⊢⎕NA⍤⊢)                     R('ImageRotateCW'                     (,⊂ ('=',Image)                                      )) ⍝ image                                                             ⍝ Rotate image clockwise 90deg
'ImageRotateCCWRAYLIB'                   (⎕NA⊢⎕NA⍤⊢)                     R('ImageRotateCCW'                    (,⊂ ('=',Image)                                      )) ⍝ image                                                             ⍝ Rotate image counter-clockwise 90deg
'ImageColorTintRAYLIB'                   (⎕NA⊢⎕NA⍤⊢)                     R('ImageColorTint'                    (('=',Image) Color                                   )) ⍝ image color                                                       ⍝ Modify image color: tint
'ImageColorInvertRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('ImageColorInvert'                  (,⊂ ('=',Image)                                      )) ⍝ image                                                             ⍝ Modify image color: invert
'ImageColorGrayscaleRAYLIB'              (⎕NA⊢⎕NA⍤⊢)                     R('ImageColorGrayscale'               (,⊂ ('=',Image)                                      )) ⍝ image                                                             ⍝ Modify image color: grayscale
'ImageColorContrastRAYLIB'               (⎕NA⊢⎕NA⍤⊢)                     R('ImageColorContrast'                (('=',Image) f                                       )) ⍝ image contrast                                                    ⍝ Modify image color: contrast (-100 to 100)
'ImageColorBrightnessRAYLIB'             (⎕NA⊢⎕NA⍤⊢)                     R('ImageColorBrightness'              (('=',Image) i                                       )) ⍝ image brightness                                                  ⍝ Modify image color: brightness (-255 to 255)
'ImageColorReplaceRAYLIB'                (⎕NA⊢⎕NA⍤⊢)                     R('ImageColorReplace'                 (('=',Image) Color Color                             )) ⍝ image color replace                                               ⍝ Modify image color: replace color
'LoadImageColorsRAYLIB'                  (⎕NA⊢⎕NA⍤⊢) ptr                 R('LoadImageColors'                   (,⊂ Image                                            )) ⍝ image                                                             ⍝ Load color data from image as a Color array (RGBA - 32bit)
'LoadImageColorsRetPtrRAYLIB'            (⎕NA⊢⎕NA⍤⊢)                     R('LoadImageColorsRetPtr'             (ptr Image                                           )) ⍝ image                                                             ⍝ Load color data from image as a Color array (RGBA - 32bit)
'LoadImagePaletteRAYLIB'                 (⎕NA⊢⎕NA⍤⊢) ptr                 R('LoadImagePalette'                  (Image i ('=',i)                                     )) ⍝ image maxPaletteSize colorCount                                   ⍝ Load colors palette from image as a Color array (RGBA - 32bit)
'LoadImagePaletteRetPtrRAYLIB'           (⎕NA⊢⎕NA⍤⊢)                     R('LoadImagePaletteRetPtr'            (ptr Image i ('=',i)                                 )) ⍝ image maxPaletteSize colorCount                                   ⍝ Load colors palette from image as a Color array (RGBA - 32bit)
'UnloadImageColorsRAYLIB'                (⎕NA⊢⎕NA⍤⊢)                     R('UnloadImageColors'                 (,⊂ ('=',Color)                                      )) ⍝ colors                                                            ⍝ Unload color data loaded with LoadImageColors()
'UnloadImagePaletteRAYLIB'               (⎕NA⊢⎕NA⍤⊢)                     R('UnloadImagePalette'                (,⊂ ('=',Color)                                      )) ⍝ colors                                                            ⍝ Unload colors palette loaded with LoadImagePalette()
'GetImageAlphaBorderRAYLIB'              (⎕NA⊢⎕NA⍤⊢) Rectangle           R('GetImageAlphaBorder'               (Image f                                             )) ⍝ image threshold                                                   ⍝ Get image alpha border rectangle
'GetImageAlphaBorderRetPtrRAYLIB'        (⎕NA⊢⎕NA⍤⊢)                     R('GetImageAlphaBorderRetPtr'         (('>',Rectangle) Image f                             )) ⍝ image threshold                                                   ⍝ Get image alpha border rectangle
'GetImageColorRAYLIB'                    (⎕NA⊢⎕NA⍤⊢) Color               R('GetImageColor'                     (Image i i                                           )) ⍝ image x y                                                         ⍝ Get image pixel color at (x, y) position
'GetImageColorRetPtrRAYLIB'              (⎕NA⊢⎕NA⍤⊢)                     R('GetImageColorRetPtr'               (('>',Color) Image i i                               )) ⍝ image x y                                                         ⍝ Get image pixel color at (x, y) position
'ImageClearBackgroundRAYLIB'             (⎕NA⊢⎕NA⍤⊢)                     R('ImageClearBackground'              (('=',Image) Color                                   )) ⍝ dst color                                                         ⍝ Clear image background with given color
'ImageDrawPixelRAYLIB'                   (⎕NA⊢⎕NA⍤⊢)                     R('ImageDrawPixel'                    (('=',Image) i i Color                               )) ⍝ dst posX posY color                                               ⍝ Draw pixel within an image
'ImageDrawPixelVRAYLIB'                  (⎕NA⊢⎕NA⍤⊢)                     R('ImageDrawPixelV'                   (('=',Image) v2 Color                                )) ⍝ dst position color                                                ⍝ Draw pixel within an image (Vector version)
'ImageDrawLineRAYLIB'                    (⎕NA⊢⎕NA⍤⊢)                     R('ImageDrawLine'                     (('=',Image) i i i i Color                           )) ⍝ dst startPosX startPosY endPosX endPosY color                     ⍝ Draw line within an image
'ImageDrawLineVRAYLIB'                   (⎕NA⊢⎕NA⍤⊢)                     R('ImageDrawLineV'                    (('=',Image) v2 v2 Color                             )) ⍝ dst start end color                                               ⍝ Draw line within an image (Vector version)
'ImageDrawCircleRAYLIB'                  (⎕NA⊢⎕NA⍤⊢)                     R('ImageDrawCircle'                   (('=',Image) i i i Color                             )) ⍝ dst centerX centerY radius color                                  ⍝ Draw a filled circle within an image
'ImageDrawCircleVRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('ImageDrawCircleV'                  (('=',Image) v2 i Color                              )) ⍝ dst center radius color                                           ⍝ Draw a filled circle within an image (Vector version)
'ImageDrawCircleLinesRAYLIB'             (⎕NA⊢⎕NA⍤⊢)                     R('ImageDrawCircleLines'              (('=',Image) i i i Color                             )) ⍝ dst centerX centerY radius color                                  ⍝ Draw circle outline within an image
'ImageDrawCircleLinesVRAYLIB'            (⎕NA⊢⎕NA⍤⊢)                     R('ImageDrawCircleLinesV'             (('=',Image) v2 i Color                              )) ⍝ dst center radius color                                           ⍝ Draw circle outline within an image (Vector version)
'ImageDrawRectangleRAYLIB'               (⎕NA⊢⎕NA⍤⊢)                     R('ImageDrawRectangle'                (('=',Image) i i i i Color                           )) ⍝ dst posX posY width height color                                  ⍝ Draw rectangle within an image
'ImageDrawRectangleVRAYLIB'              (⎕NA⊢⎕NA⍤⊢)                     R('ImageDrawRectangleV'               (('=',Image) v2 v2 Color                             )) ⍝ dst position size color                                           ⍝ Draw rectangle within an image (Vector version)
'ImageDrawRectangleRecRAYLIB'            (⎕NA⊢⎕NA⍤⊢)                     R('ImageDrawRectangleRec'             (('=',Image) Rectangle Color                         )) ⍝ dst rec color                                                     ⍝ Draw rectangle within an image
'ImageDrawRectangleLinesRAYLIB'          (⎕NA⊢⎕NA⍤⊢)                     R('ImageDrawRectangleLines'           (('=',Image) Rectangle i Color                       )) ⍝ dst rec thick color                                               ⍝ Draw rectangle lines within an image
'ImageDrawRAYLIB'                        (⎕NA⊢⎕NA⍤⊢)                     R('ImageDraw'                         (('=',Image) Image Rectangle Rectangle Color         )) ⍝ dst src srcRec dstRec tint                                        ⍝ Draw a source image within a destination image (tint applied to source)
'ImageDrawTextRAYLIB'                    (⎕NA⊢⎕NA⍤⊢)                     R('ImageDrawText'                     (('=',Image) str i i i Color                         )) ⍝ dst text posX posY fontSize color                                 ⍝ Draw text (using default font) within an image (destination)
'ImageDrawTextExRAYLIB'                  (⎕NA⊢⎕NA⍤⊢)                     R('ImageDrawTextEx'                   (('=',Image) Font str v2 f f Color                   )) ⍝ dst font text position fontSize spacing tint                      ⍝ Draw text (custom sprite font) within an image (destination)
'LoadTextureRAYLIB'                      (⎕NA⊢⎕NA⍤⊢) Texture2D           R('LoadTexture'                       (,⊂ str                                              )) ⍝ fileName                                                          ⍝ Load texture from file into GPU memory (VRAM)
'LoadTextureRetPtrRAYLIB'                (⎕NA⊢⎕NA⍤⊢)                     R('LoadTextureRetPtr'                 (('>',Texture2D) str                                 )) ⍝ fileName                                                          ⍝ Load texture from file into GPU memory (VRAM)
'LoadTextureFromImageRAYLIB'             (⎕NA⊢⎕NA⍤⊢) Texture2D           R('LoadTextureFromImage'              (,⊂ Image                                            )) ⍝ image                                                             ⍝ Load texture from image data
'LoadTextureFromImageRetPtrRAYLIB'       (⎕NA⊢⎕NA⍤⊢)                     R('LoadTextureFromImageRetPtr'        (('>',Texture2D) Image                               )) ⍝ image                                                             ⍝ Load texture from image data
'LoadTextureCubemapRAYLIB'               (⎕NA⊢⎕NA⍤⊢) TextureCubemap      R('LoadTextureCubemap'                (Image i                                             )) ⍝ image layout                                                      ⍝ Load cubemap from image, multiple image cubemap layouts supported
'LoadTextureCubemapRetPtrRAYLIB'         (⎕NA⊢⎕NA⍤⊢)                     R('LoadTextureCubemapRetPtr'          (('>',TextureCubemap) Image i                        )) ⍝ image layout                                                      ⍝ Load cubemap from image, multiple image cubemap layouts supported
'LoadRenderTextureRAYLIB'                (⎕NA⊢⎕NA⍤⊢) RenderTexture2D     R('LoadRenderTexture'                 (i i                                                 )) ⍝ width height                                                      ⍝ Load texture for rendering (framebuffer)
'LoadRenderTextureRetPtrRAYLIB'          (⎕NA⊢⎕NA⍤⊢)                     R('LoadRenderTextureRetPtr'           (('>',RenderTexture2D) i i                           )) ⍝ width height                                                      ⍝ Load texture for rendering (framebuffer)
'IsTextureReadyRAYLIB'                   (⎕NA⊢⎕NA⍤⊢) bool                R('IsTextureReady'                    (,⊂ Texture2D                                        )) ⍝ texture                                                           ⍝ Check if a texture is ready
'IsTextureReadyRetPtrRAYLIB'             (⎕NA⊢⎕NA⍤⊢)                     R('IsTextureReadyRetPtr'              (('>',bool) Texture2D                                )) ⍝ texture                                                           ⍝ Check if a texture is ready
'UnloadTextureRAYLIB'                    (⎕NA⊢⎕NA⍤⊢)                     R('UnloadTexture'                     (,⊂ Texture2D                                        )) ⍝ texture                                                           ⍝ Unload texture from GPU memory (VRAM)
'IsRenderTextureReadyRAYLIB'             (⎕NA⊢⎕NA⍤⊢) bool                R('IsRenderTextureReady'              (,⊂ RenderTexture2D                                  )) ⍝ target                                                            ⍝ Check if a render texture is ready
'IsRenderTextureReadyRetPtrRAYLIB'       (⎕NA⊢⎕NA⍤⊢)                     R('IsRenderTextureReadyRetPtr'        (('>',bool) RenderTexture2D                          )) ⍝ target                                                            ⍝ Check if a render texture is ready
'UnloadRenderTextureRAYLIB'              (⎕NA⊢⎕NA⍤⊢)                     R('UnloadRenderTexture'               (,⊂ RenderTexture2D                                  )) ⍝ target                                                            ⍝ Unload render texture from GPU memory (VRAM)
'UpdateTextureRAYLIB'                    (⎕NA⊢⎕NA⍤⊢)                     R('UpdateTexture'                     (Texture2D ptr                                       )) ⍝ texture pixels                                                    ⍝ Update GPU texture with new data
'UpdateTextureRecRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('UpdateTextureRec'                  (Texture2D Rectangle ptr                             )) ⍝ texture rec pixels                                                ⍝ Update GPU texture rectangle with new data
'GenTextureMipmapsRAYLIB'                (⎕NA⊢⎕NA⍤⊢)                     R('GenTextureMipmaps'                 (,⊂ ('=',Texture2D)                                  )) ⍝ texture                                                           ⍝ Generate GPU mipmaps for a texture
'SetTextureFilterRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('SetTextureFilter'                  (Texture2D i                                         )) ⍝ texture filter                                                    ⍝ Set texture scaling filter mode
'SetTextureWrapRAYLIB'                   (⎕NA⊢⎕NA⍤⊢)                     R('SetTextureWrap'                    (Texture2D i                                         )) ⍝ texture wrap                                                      ⍝ Set texture wrapping mode
'DrawTextureRAYLIB'                      (⎕NA⊢⎕NA⍤⊢)                     R('DrawTexture'                       (Texture2D i i Color                                 )) ⍝ texture posX posY tint                                            ⍝ Draw a Texture2D
'DrawTextureVRAYLIB'                     (⎕NA⊢⎕NA⍤⊢)                     R('DrawTextureV'                      (Texture2D v2 Color                                  )) ⍝ texture position tint                                             ⍝ Draw a Texture2D with position defined as Vector2
'DrawTextureExRAYLIB'                    (⎕NA⊢⎕NA⍤⊢)                     R('DrawTextureEx'                     (Texture2D v2 f f Color                              )) ⍝ texture position rotation scale tint                              ⍝ Draw a Texture2D with extended parameters
'DrawTextureRecRAYLIB'                   (⎕NA⊢⎕NA⍤⊢)                     R('DrawTextureRec'                    (Texture2D Rectangle v2 Color                        )) ⍝ texture source position tint                                      ⍝ Draw a part of a texture defined by a rectangle
'DrawTextureProRAYLIB'                   (⎕NA⊢⎕NA⍤⊢)                     R('DrawTexturePro'                    (Texture2D Rectangle Rectangle v2 f Color            )) ⍝ texture source dest origin rotation tint                          ⍝ Draw a part of a texture defined by a rectangle with 'pro' parameters
'DrawTextureNPatchRAYLIB'                (⎕NA⊢⎕NA⍤⊢)                     R('DrawTextureNPatch'                 (Texture2D NPatchInfo Rectangle v2 f Color           )) ⍝ texture nPatchInfo dest origin rotation tint                      ⍝ Draws a texture (or part of it) that stretches or shrinks nicely
'FadeRAYLIB'                             (⎕NA⊢⎕NA⍤⊢) Color               R('Fade'                              (Color f                                             )) ⍝ color alpha                                                       ⍝ Get color with alpha applied, alpha goes from 0.0f to 1.0f
'FadeRetPtrRAYLIB'                       (⎕NA⊢⎕NA⍤⊢)                     R('FadeRetPtr'                        (('>',Color) Color f                                 )) ⍝ color alpha                                                       ⍝ Get color with alpha applied, alpha goes from 0.0f to 1.0f
'ColorToIntRAYLIB'                       (⎕NA⊢⎕NA⍤⊢) i                   R('ColorToInt'                        (,⊂ Color                                            )) ⍝ color                                                             ⍝ Get hexadecimal value for a Color
'ColorToIntRetPtrRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('ColorToIntRetPtr'                  (('>',i) Color                                       )) ⍝ color                                                             ⍝ Get hexadecimal value for a Color
'ColorNormalizeRAYLIB'                   (⎕NA⊢⎕NA⍤⊢) v4                  R('ColorNormalize'                    (,⊂ Color                                            )) ⍝ color                                                             ⍝ Get Color normalized as float [0..1]
'ColorNormalizeRetPtrRAYLIB'             (⎕NA⊢⎕NA⍤⊢)                     R('ColorNormalizeRetPtr'              (('>',v4) Color                                      )) ⍝ color                                                             ⍝ Get Color normalized as float [0..1]
'ColorFromNormalizedRAYLIB'              (⎕NA⊢⎕NA⍤⊢) Color               R('ColorFromNormalized'               (,⊂ v4                                               )) ⍝ normalized                                                        ⍝ Get Color from normalized values [0..1]
'ColorFromNormalizedRetPtrRAYLIB'        (⎕NA⊢⎕NA⍤⊢)                     R('ColorFromNormalizedRetPtr'         (('>',Color) v4                                      )) ⍝ normalized                                                        ⍝ Get Color from normalized values [0..1]
'ColorToHSVRAYLIB'                       (⎕NA⊢⎕NA⍤⊢) v3                  R('ColorToHSV'                        (,⊂ Color                                            )) ⍝ color                                                             ⍝ Get HSV values for a Color, hue [0..360], saturation/value [0..1]
'ColorToHSVRetPtrRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('ColorToHSVRetPtr'                  (('>',v3) Color                                      )) ⍝ color                                                             ⍝ Get HSV values for a Color, hue [0..360], saturation/value [0..1]
'ColorFromHSVRAYLIB'                     (⎕NA⊢⎕NA⍤⊢) Color               R('ColorFromHSV'                      (f f f                                               )) ⍝ hue saturation value                                              ⍝ Get a Color from HSV values, hue [0..360], saturation/value [0..1]
'ColorFromHSVRetPtrRAYLIB'               (⎕NA⊢⎕NA⍤⊢)                     R('ColorFromHSVRetPtr'                (('>',Color) f f f                                   )) ⍝ hue saturation value                                              ⍝ Get a Color from HSV values, hue [0..360], saturation/value [0..1]
'ColorTintRAYLIB'                        (⎕NA⊢⎕NA⍤⊢) Color               R('ColorTint'                         (Color Color                                         )) ⍝ color tint                                                        ⍝ Get color multiplied with another color
'ColorTintRetPtrRAYLIB'                  (⎕NA⊢⎕NA⍤⊢)                     R('ColorTintRetPtr'                   (('>',Color) Color Color                             )) ⍝ color tint                                                        ⍝ Get color multiplied with another color
'ColorBrightnessRAYLIB'                  (⎕NA⊢⎕NA⍤⊢) Color               R('ColorBrightness'                   (Color f                                             )) ⍝ color factor                                                      ⍝ Get color with brightness correction, brightness factor goes from -1.0f to 1.0f
'ColorBrightnessRetPtrRAYLIB'            (⎕NA⊢⎕NA⍤⊢)                     R('ColorBrightnessRetPtr'             (('>',Color) Color f                                 )) ⍝ color factor                                                      ⍝ Get color with brightness correction, brightness factor goes from -1.0f to 1.0f
'ColorContrastRAYLIB'                    (⎕NA⊢⎕NA⍤⊢) Color               R('ColorContrast'                     (Color f                                             )) ⍝ color contrast                                                    ⍝ Get color with contrast correction, contrast values between -1.0f and 1.0f
'ColorContrastRetPtrRAYLIB'              (⎕NA⊢⎕NA⍤⊢)                     R('ColorContrastRetPtr'               (('>',Color) Color f                                 )) ⍝ color contrast                                                    ⍝ Get color with contrast correction, contrast values between -1.0f and 1.0f
'ColorAlphaRAYLIB'                       (⎕NA⊢⎕NA⍤⊢) Color               R('ColorAlpha'                        (Color f                                             )) ⍝ color alpha                                                       ⍝ Get color with alpha applied, alpha goes from 0.0f to 1.0f
'ColorAlphaRetPtrRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('ColorAlphaRetPtr'                  (('>',Color) Color f                                 )) ⍝ color alpha                                                       ⍝ Get color with alpha applied, alpha goes from 0.0f to 1.0f
'ColorAlphaBlendRAYLIB'                  (⎕NA⊢⎕NA⍤⊢) Color               R('ColorAlphaBlend'                   (Color Color Color                                   )) ⍝ dst src tint                                                      ⍝ Get src alpha-blended into dst color with tint
'ColorAlphaBlendRetPtrRAYLIB'            (⎕NA⊢⎕NA⍤⊢)                     R('ColorAlphaBlendRetPtr'             (('>',Color) Color Color Color                       )) ⍝ dst src tint                                                      ⍝ Get src alpha-blended into dst color with tint
'GetColorRAYLIB'                         (⎕NA⊢⎕NA⍤⊢) Color               R('GetColor'                          (,⊂ u                                                )) ⍝ hexValue                                                          ⍝ Get Color structure from hexadecimal value
'GetColorRetPtrRAYLIB'                   (⎕NA⊢⎕NA⍤⊢)                     R('GetColorRetPtr'                    (('>',Color) u                                       )) ⍝ hexValue                                                          ⍝ Get Color structure from hexadecimal value
'GetPixelColorRAYLIB'                    (⎕NA⊢⎕NA⍤⊢) Color               R('GetPixelColor'                     (ptr i                                               )) ⍝ srcPtr format                                                     ⍝ Get Color from a source pixel pointer of certain format
'GetPixelColorRetPtrRAYLIB'              (⎕NA⊢⎕NA⍤⊢)                     R('GetPixelColorRetPtr'               (('>',Color) ptr i                                   )) ⍝ srcPtr format                                                     ⍝ Get Color from a source pixel pointer of certain format
'SetPixelColorRAYLIB'                    (⎕NA⊢⎕NA⍤⊢)                     R('SetPixelColor'                     (ptr Color i                                         )) ⍝ dstPtr color format                                               ⍝ Set color formatted into destination pixel pointer
'GetPixelDataSizeRAYLIB'                 (⎕NA⊢⎕NA⍤⊢) i                   R('GetPixelDataSize'                  (i i i                                               )) ⍝ width height format                                               ⍝ Get pixel data size in bytes for certain format
'GetPixelDataSizeRetPtrRAYLIB'           (⎕NA⊢⎕NA⍤⊢)                     R('GetPixelDataSizeRetPtr'            (('>',i) i i i                                       )) ⍝ width height format                                               ⍝ Get pixel data size in bytes for certain format
'GetFontDefaultRAYLIB'                   (⎕NA⊢⎕NA⍤⊢) Font                R('GetFontDefault'                    (⍬                                                   )) ⍝                                                                   ⍝ Get the default Font
'GetFontDefaultRetPtrRAYLIB'             (⎕NA⊢⎕NA⍤⊢)                     R('GetFontDefaultRetPtr'              (,⊂ ('>',Font)                                       )) ⍝                                                                   ⍝ Get the default Font
'LoadFontRAYLIB'                         (⎕NA⊢⎕NA⍤⊢) Font                R('LoadFont'                          (,⊂ str                                              )) ⍝ fileName                                                          ⍝ Load font from file into GPU memory (VRAM)
'LoadFontRetPtrRAYLIB'                   (⎕NA⊢⎕NA⍤⊢)                     R('LoadFontRetPtr'                    (('>',Font) str                                      )) ⍝ fileName                                                          ⍝ Load font from file into GPU memory (VRAM)
'LoadFontExRAYLIB'                       (⎕NA⊢⎕NA⍤⊢) Font                R('LoadFontEx'                        (str i ('=',i) i                                     )) ⍝ fileName fontSize codepoints codepointCount                       ⍝ Load font from file with extended parameters, use NULL for codepoints and 0 for codepointCount to load the default character set
'LoadFontExRetPtrRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('LoadFontExRetPtr'                  (('>',Font) str i ('=',i) i                          )) ⍝ fileName fontSize codepoints codepointCount                       ⍝ Load font from file with extended parameters, use NULL for codepoints and 0 for codepointCount to load the default character set
'LoadFontFromImageRAYLIB'                (⎕NA⊢⎕NA⍤⊢) Font                R('LoadFontFromImage'                 (Image Color i                                       )) ⍝ image key firstChar                                               ⍝ Load font from Image (XNA style)
'LoadFontFromImageRetPtrRAYLIB'          (⎕NA⊢⎕NA⍤⊢)                     R('LoadFontFromImageRetPtr'           (('>',Font) Image Color i                            )) ⍝ image key firstChar                                               ⍝ Load font from Image (XNA style)
'LoadFontFromMemoryRAYLIB'               (⎕NA⊢⎕NA⍤⊢) Font                R('LoadFontFromMemory'                (str ustr i i ('=',i) i                              )) ⍝ fileType fileData dataSize fontSize codepoints codepointCount     ⍝ Load font from memory buffer, fileType refers to extension: i.e. '.ttf'
'LoadFontFromMemoryRetPtrRAYLIB'         (⎕NA⊢⎕NA⍤⊢)                     R('LoadFontFromMemoryRetPtr'          (('>',Font) str ustr i i ('=',i) i                   )) ⍝ fileType fileData dataSize fontSize codepoints codepointCount     ⍝ Load font from memory buffer, fileType refers to extension: i.e. '.ttf'
'IsFontReadyRAYLIB'                      (⎕NA⊢⎕NA⍤⊢) bool                R('IsFontReady'                       (,⊂ Font                                             )) ⍝ font                                                              ⍝ Check if a font is ready
'IsFontReadyRetPtrRAYLIB'                (⎕NA⊢⎕NA⍤⊢)                     R('IsFontReadyRetPtr'                 (('>',bool) Font                                     )) ⍝ font                                                              ⍝ Check if a font is ready
'LoadFontDataRAYLIB'                     (⎕NA⊢⎕NA⍤⊢) ptr                 R('LoadFontData'                      (ustr i i ('=',i) i i                                )) ⍝ fileData dataSize fontSize codepoints codepointCount type         ⍝ Load font data for further use
'LoadFontDataRetPtrRAYLIB'               (⎕NA⊢⎕NA⍤⊢)                     R('LoadFontDataRetPtr'                (ptr ustr i i ('=',i) i i                            )) ⍝ fileData dataSize fontSize codepoints codepointCount type         ⍝ Load font data for further use
'GenImageFontAtlasRAYLIB'                (⎕NA⊢⎕NA⍤⊢) Image               R('GenImageFontAtlas'                 (('=',GlyphInfo) ('==',Rectangle) i i i i            )) ⍝ glyphs glyphRecs glyphCount fontSize padding packMethod           ⍝ Generate image font atlas using chars info
'GenImageFontAtlasRetPtrRAYLIB'          (⎕NA⊢⎕NA⍤⊢)                     R('GenImageFontAtlasRetPtr'           (('>',Image) ('=',GlyphInfo) ('==',Rectangle) i i i i)) ⍝ glyphs glyphRecs glyphCount fontSize padding packMethod           ⍝ Generate image font atlas using chars info
'UnloadFontDataRAYLIB'                   (⎕NA⊢⎕NA⍤⊢)                     R('UnloadFontData'                    (('=',GlyphInfo) i                                   )) ⍝ glyphs glyphCount                                                 ⍝ Unload font chars info data (RAM)
'UnloadFontRAYLIB'                       (⎕NA⊢⎕NA⍤⊢)                     R('UnloadFont'                        (,⊂ Font                                             )) ⍝ font                                                              ⍝ Unload font from GPU memory (VRAM)
'ExportFontAsCodeRAYLIB'                 (⎕NA⊢⎕NA⍤⊢) bool                R('ExportFontAsCode'                  (Font str                                            )) ⍝ font fileName                                                     ⍝ Export font as code file, returns true on success
'ExportFontAsCodeRetPtrRAYLIB'           (⎕NA⊢⎕NA⍤⊢)                     R('ExportFontAsCodeRetPtr'            (('>',bool) Font str                                 )) ⍝ font fileName                                                     ⍝ Export font as code file, returns true on success
'DrawFPSRAYLIB'                          (⎕NA⊢⎕NA⍤⊢)                     R('DrawFPS'                           (i i                                                 )) ⍝ posX posY                                                         ⍝ Draw current FPS
'DrawTextRAYLIB'                         (⎕NA⊢⎕NA⍤⊢)                     R('DrawText'                          (str i i i Color                                     )) ⍝ text posX posY fontSize color                                     ⍝ Draw text (using default font)
'DrawTextExRAYLIB'                       (⎕NA⊢⎕NA⍤⊢)                     R('DrawTextEx'                        (Font str v2 f f Color                               )) ⍝ font text position fontSize spacing tint                          ⍝ Draw text using font and additional parameters
'DrawTextProRAYLIB'                      (⎕NA⊢⎕NA⍤⊢)                     R('DrawTextPro'                       (Font str v2 v2 f f f Color                          )) ⍝ font text position origin rotation fontSize spacing tint          ⍝ Draw text using Font and pro parameters (rotation)
'DrawTextCodepointRAYLIB'                (⎕NA⊢⎕NA⍤⊢)                     R('DrawTextCodepoint'                 (Font i v2 f Color                                   )) ⍝ font codepoint position fontSize tint                             ⍝ Draw one character (codepoint)
'DrawTextCodepointsRAYLIB'               (⎕NA⊢⎕NA⍤⊢)                     R('DrawTextCodepoints'                (Font ('=',i) i v2 f f Color                         )) ⍝ font codepoints codepointCount position fontSize spacing tint     ⍝ Draw multiple character (codepoint)
'SetTextLineSpacingRAYLIB'               (⎕NA⊢⎕NA⍤⊢)                     R('SetTextLineSpacing'                (,⊂ i                                                )) ⍝ spacing                                                           ⍝ Set vertical line spacing when drawing with line-breaks
'MeasureTextRAYLIB'                      (⎕NA⊢⎕NA⍤⊢) i                   R('MeasureText'                       (str i                                               )) ⍝ text fontSize                                                     ⍝ Measure string width for default font
'MeasureTextRetPtrRAYLIB'                (⎕NA⊢⎕NA⍤⊢)                     R('MeasureTextRetPtr'                 (('>',i) str i                                       )) ⍝ text fontSize                                                     ⍝ Measure string width for default font
'MeasureTextExRAYLIB'                    (⎕NA⊢⎕NA⍤⊢) v2                  R('MeasureTextEx'                     (Font str f f                                        )) ⍝ font text fontSize spacing                                        ⍝ Measure string size for Font
'MeasureTextExRetPtrRAYLIB'              (⎕NA⊢⎕NA⍤⊢)                     R('MeasureTextExRetPtr'               (('>',v2) Font str f f                               )) ⍝ font text fontSize spacing                                        ⍝ Measure string size for Font
'GetGlyphIndexRAYLIB'                    (⎕NA⊢⎕NA⍤⊢) i                   R('GetGlyphIndex'                     (Font i                                              )) ⍝ font codepoint                                                    ⍝ Get glyph index position in font for a codepoint (unicode character), fallback to '?' if not found
'GetGlyphIndexRetPtrRAYLIB'              (⎕NA⊢⎕NA⍤⊢)                     R('GetGlyphIndexRetPtr'               (('>',i) Font i                                      )) ⍝ font codepoint                                                    ⍝ Get glyph index position in font for a codepoint (unicode character), fallback to '?' if not found
'GetGlyphInfoRAYLIB'                     (⎕NA⊢⎕NA⍤⊢) GlyphInfo           R('GetGlyphInfo'                      (Font i                                              )) ⍝ font codepoint                                                    ⍝ Get glyph font info data for a codepoint (unicode character), fallback to '?' if not found
'GetGlyphInfoRetPtrRAYLIB'               (⎕NA⊢⎕NA⍤⊢)                     R('GetGlyphInfoRetPtr'                (('>',GlyphInfo) Font i                              )) ⍝ font codepoint                                                    ⍝ Get glyph font info data for a codepoint (unicode character), fallback to '?' if not found
'GetGlyphAtlasRecRAYLIB'                 (⎕NA⊢⎕NA⍤⊢) Rectangle           R('GetGlyphAtlasRec'                  (Font i                                              )) ⍝ font codepoint                                                    ⍝ Get glyph rectangle in font atlas for a codepoint (unicode character), fallback to '?' if not found
'GetGlyphAtlasRecRetPtrRAYLIB'           (⎕NA⊢⎕NA⍤⊢)                     R('GetGlyphAtlasRecRetPtr'            (('>',Rectangle) Font i                              )) ⍝ font codepoint                                                    ⍝ Get glyph rectangle in font atlas for a codepoint (unicode character), fallback to '?' if not found
'LoadUTF8RAYLIB'                         (⎕NA⊢⎕NA⍤⊢) (ptr⊣str)           R('LoadUTF8'                          (('=',i) i                                           )) ⍝ codepoints length                                                 ⍝ Load UTF-8 text encoded from codepoints array
'LoadUTF8RetPtrRAYLIB'                   (⎕NA⊢⎕NA⍤⊢)                     R('LoadUTF8RetPtr'                    (('>',str) ('=',i) i                                 )) ⍝ codepoints length                                                 ⍝ Load UTF-8 text encoded from codepoints array
'UnloadUTF8RAYLIB'                       (⎕NA⊢⎕NA⍤⊢)                     R('UnloadUTF8'                        (,⊂ str                                              )) ⍝ text                                                              ⍝ Unload UTF-8 text encoded from codepoints array
'LoadCodepointsRAYLIB'                   (⎕NA⊢⎕NA⍤⊢) ptr                 R('LoadCodepoints'                    (str ('=',i)                                         )) ⍝ text count                                                        ⍝ Load all codepoints from a UTF-8 text string, codepoints count returned by parameter
'LoadCodepointsRetPtrRAYLIB'             (⎕NA⊢⎕NA⍤⊢)                     R('LoadCodepointsRetPtr'              (ptr str ('=',i)                                     )) ⍝ text count                                                        ⍝ Load all codepoints from a UTF-8 text string, codepoints count returned by parameter
'UnloadCodepointsRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('UnloadCodepoints'                  (,⊂ ('=',i)                                          )) ⍝ codepoints                                                        ⍝ Unload codepoints data from memory
'GetCodepointCountRAYLIB'                (⎕NA⊢⎕NA⍤⊢) i                   R('GetCodepointCount'                 (,⊂ str                                              )) ⍝ text                                                              ⍝ Get total number of codepoints in a UTF-8 encoded string
'GetCodepointCountRetPtrRAYLIB'          (⎕NA⊢⎕NA⍤⊢)                     R('GetCodepointCountRetPtr'           (('>',i) str                                         )) ⍝ text                                                              ⍝ Get total number of codepoints in a UTF-8 encoded string
'GetCodepointRAYLIB'                     (⎕NA⊢⎕NA⍤⊢) i                   R('GetCodepoint'                      (str ('=',i)                                         )) ⍝ text codepointSize                                                ⍝ Get next codepoint in a UTF-8 encoded string, 0x3f('?') is returned on failure
'GetCodepointRetPtrRAYLIB'               (⎕NA⊢⎕NA⍤⊢)                     R('GetCodepointRetPtr'                (('>',i) str ('=',i)                                 )) ⍝ text codepointSize                                                ⍝ Get next codepoint in a UTF-8 encoded string, 0x3f('?') is returned on failure
'GetCodepointNextRAYLIB'                 (⎕NA⊢⎕NA⍤⊢) i                   R('GetCodepointNext'                  (str ('=',i)                                         )) ⍝ text codepointSize                                                ⍝ Get next codepoint in a UTF-8 encoded string, 0x3f('?') is returned on failure
'GetCodepointNextRetPtrRAYLIB'           (⎕NA⊢⎕NA⍤⊢)                     R('GetCodepointNextRetPtr'            (('>',i) str ('=',i)                                 )) ⍝ text codepointSize                                                ⍝ Get next codepoint in a UTF-8 encoded string, 0x3f('?') is returned on failure
'GetCodepointPreviousRAYLIB'             (⎕NA⊢⎕NA⍤⊢) i                   R('GetCodepointPrevious'              (str ('=',i)                                         )) ⍝ text codepointSize                                                ⍝ Get previous codepoint in a UTF-8 encoded string, 0x3f('?') is returned on failure
'GetCodepointPreviousRetPtrRAYLIB'       (⎕NA⊢⎕NA⍤⊢)                     R('GetCodepointPreviousRetPtr'        (('>',i) str ('=',i)                                 )) ⍝ text codepointSize                                                ⍝ Get previous codepoint in a UTF-8 encoded string, 0x3f('?') is returned on failure
'CodepointToUTF8RAYLIB'                  (⎕NA⊢⎕NA⍤⊢) (ptr⊣str)           R('CodepointToUTF8'                   (i ('=',i)                                           )) ⍝ codepoint utf8Size                                                ⍝ Encode one codepoint into UTF-8 byte array (array length returned as parameter)
'CodepointToUTF8RetPtrRAYLIB'            (⎕NA⊢⎕NA⍤⊢)                     R('CodepointToUTF8RetPtr'             (('>',str) i ('=',i)                                 )) ⍝ codepoint utf8Size                                                ⍝ Encode one codepoint into UTF-8 byte array (array length returned as parameter)
'TextCopyRAYLIB'                         (⎕NA⊢⎕NA⍤⊢) i                   R('TextCopy'                          (str str                                             )) ⍝ dst src                                                           ⍝ Copy one string to another, returns bytes copied
'TextCopyRetPtrRAYLIB'                   (⎕NA⊢⎕NA⍤⊢)                     R('TextCopyRetPtr'                    (('>',i) str str                                     )) ⍝ dst src                                                           ⍝ Copy one string to another, returns bytes copied
'TextIsEqualRAYLIB'                      (⎕NA⊢⎕NA⍤⊢) bool                R('TextIsEqual'                       (str str                                             )) ⍝ text1 text2                                                       ⍝ Check if two text string are equal
'TextIsEqualRetPtrRAYLIB'                (⎕NA⊢⎕NA⍤⊢)                     R('TextIsEqualRetPtr'                 (('>',bool) str str                                  )) ⍝ text1 text2                                                       ⍝ Check if two text string are equal
'TextLengthRAYLIB'                       (⎕NA⊢⎕NA⍤⊢) u                   R('TextLength'                        (,⊂ str                                              )) ⍝ text                                                              ⍝ Get text length, checks for '\0' ending
'TextLengthRetPtrRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('TextLengthRetPtr'                  (('>',u) str                                         )) ⍝ text                                                              ⍝ Get text length, checks for '\0' ending
'TextSubtextRAYLIB'                      (⎕NA⊢⎕NA⍤⊢) (ptr⊣str)           R('TextSubtext'                       (str i i                                             )) ⍝ text position length                                              ⍝ Get a piece of a text string
'TextSubtextRetPtrRAYLIB'                (⎕NA⊢⎕NA⍤⊢)                     R('TextSubtextRetPtr'                 (('>',str) str i i                                   )) ⍝ text position length                                              ⍝ Get a piece of a text string
'TextReplaceRAYLIB'                      (⎕NA⊢⎕NA⍤⊢) (ptr⊣str)           R('TextReplace'                       (str str str                                         )) ⍝ text replace by                                                   ⍝ Replace text string (WARNING: memory must be freed!)
'TextReplaceRetPtrRAYLIB'                (⎕NA⊢⎕NA⍤⊢)                     R('TextReplaceRetPtr'                 (('>',str) str str str                               )) ⍝ text replace by                                                   ⍝ Replace text string (WARNING: memory must be freed!)
'TextInsertRAYLIB'                       (⎕NA⊢⎕NA⍤⊢) (ptr⊣str)           R('TextInsert'                        (str str i                                           )) ⍝ text insert position                                              ⍝ Insert text in a position (WARNING: memory must be freed!)
'TextInsertRetPtrRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('TextInsertRetPtr'                  (('>',str) str str i                                 )) ⍝ text insert position                                              ⍝ Insert text in a position (WARNING: memory must be freed!)
'TextJoinRAYLIB'                         (⎕NA⊢⎕NA⍤⊢) (ptr⊣str)           R('TextJoin'                          (('=',str) i str                                     )) ⍝ textList count delimiter                                          ⍝ Join text strings with delimiter
'TextJoinRetPtrRAYLIB'                   (⎕NA⊢⎕NA⍤⊢)                     R('TextJoinRetPtr'                    (('>',str) ('=',str) i str                           )) ⍝ textList count delimiter                                          ⍝ Join text strings with delimiter
'TextSplitRAYLIB'                        (⎕NA⊢⎕NA⍤⊢) ptr                 R('TextSplit'                         (str u1 ('=',i)                                      )) ⍝ text delimiter count                                              ⍝ Split text into multiple strings
'TextSplitRetPtrRAYLIB'                  (⎕NA⊢⎕NA⍤⊢)                     R('TextSplitRetPtr'                   (ptr str u1 ('=',i)                                  )) ⍝ text delimiter count                                              ⍝ Split text into multiple strings
'TextAppendRAYLIB'                       (⎕NA⊢⎕NA⍤⊢)                     R('TextAppend'                        (str str ('=',i)                                     )) ⍝ text append position                                              ⍝ Append text at specific position and move cursor!
'TextFindIndexRAYLIB'                    (⎕NA⊢⎕NA⍤⊢) i                   R('TextFindIndex'                     (str str                                             )) ⍝ text find                                                         ⍝ Find first text occurrence within a string
'TextFindIndexRetPtrRAYLIB'              (⎕NA⊢⎕NA⍤⊢)                     R('TextFindIndexRetPtr'               (('>',i) str str                                     )) ⍝ text find                                                         ⍝ Find first text occurrence within a string
'TextToUpperRAYLIB'                      (⎕NA⊢⎕NA⍤⊢) (ptr⊣str)           R('TextToUpper'                       (,⊂ str                                              )) ⍝ text                                                              ⍝ Get upper case version of provided string
'TextToUpperRetPtrRAYLIB'                (⎕NA⊢⎕NA⍤⊢)                     R('TextToUpperRetPtr'                 (('>',str) str                                       )) ⍝ text                                                              ⍝ Get upper case version of provided string
'TextToLowerRAYLIB'                      (⎕NA⊢⎕NA⍤⊢) (ptr⊣str)           R('TextToLower'                       (,⊂ str                                              )) ⍝ text                                                              ⍝ Get lower case version of provided string
'TextToLowerRetPtrRAYLIB'                (⎕NA⊢⎕NA⍤⊢)                     R('TextToLowerRetPtr'                 (('>',str) str                                       )) ⍝ text                                                              ⍝ Get lower case version of provided string
'TextToPascalRAYLIB'                     (⎕NA⊢⎕NA⍤⊢) (ptr⊣str)           R('TextToPascal'                      (,⊂ str                                              )) ⍝ text                                                              ⍝ Get Pascal case notation version of provided string
'TextToPascalRetPtrRAYLIB'               (⎕NA⊢⎕NA⍤⊢)                     R('TextToPascalRetPtr'                (('>',str) str                                       )) ⍝ text                                                              ⍝ Get Pascal case notation version of provided string
'TextToIntegerRAYLIB'                    (⎕NA⊢⎕NA⍤⊢) i                   R('TextToInteger'                     (,⊂ str                                              )) ⍝ text                                                              ⍝ Get integer value from text (negative values not supported)
'TextToIntegerRetPtrRAYLIB'              (⎕NA⊢⎕NA⍤⊢)                     R('TextToIntegerRetPtr'               (('>',i) str                                         )) ⍝ text                                                              ⍝ Get integer value from text (negative values not supported)
'DrawLine3DRAYLIB'                       (⎕NA⊢⎕NA⍤⊢)                     R('DrawLine3D'                        (v3 v3 Color                                         )) ⍝ startPos endPos color                                             ⍝ Draw a line in 3D world space
'DrawPoint3DRAYLIB'                      (⎕NA⊢⎕NA⍤⊢)                     R('DrawPoint3D'                       (v3 Color                                            )) ⍝ position color                                                    ⍝ Draw a point in 3D space, actually a small line
'DrawCircle3DRAYLIB'                     (⎕NA⊢⎕NA⍤⊢)                     R('DrawCircle3D'                      (v3 f v3 f Color                                     )) ⍝ center radius rotationAxis rotationAngle color                    ⍝ Draw a circle in 3D world space
'DrawTriangle3DRAYLIB'                   (⎕NA⊢⎕NA⍤⊢)                     R('DrawTriangle3D'                    (v3 v3 v3 Color                                      )) ⍝ v1 v2 v3 color                                                    ⍝ Draw a color-filled triangle (vertex in counter-clockwise order!)
'DrawTriangleStrip3DRAYLIB'              (⎕NA⊢⎕NA⍤⊢)                     R('DrawTriangleStrip3D'               (('=',v3) i Color                                    )) ⍝ points pointCount color                                           ⍝ Draw a triangle strip defined by points
'DrawCubeRAYLIB'                         (⎕NA⊢⎕NA⍤⊢)                     R('DrawCube'                          (v3 f f f Color                                      )) ⍝ position width height length color                                ⍝ Draw cube
'DrawCubeVRAYLIB'                        (⎕NA⊢⎕NA⍤⊢)                     R('DrawCubeV'                         (v3 v3 Color                                         )) ⍝ position size color                                               ⍝ Draw cube (Vector version)
'DrawCubeWiresRAYLIB'                    (⎕NA⊢⎕NA⍤⊢)                     R('DrawCubeWires'                     (v3 f f f Color                                      )) ⍝ position width height length color                                ⍝ Draw cube wires
'DrawCubeWiresVRAYLIB'                   (⎕NA⊢⎕NA⍤⊢)                     R('DrawCubeWiresV'                    (v3 v3 Color                                         )) ⍝ position size color                                               ⍝ Draw cube wires (Vector version)
'DrawSphereRAYLIB'                       (⎕NA⊢⎕NA⍤⊢)                     R('DrawSphere'                        (v3 f Color                                          )) ⍝ centerPos radius color                                            ⍝ Draw sphere
'DrawSphereExRAYLIB'                     (⎕NA⊢⎕NA⍤⊢)                     R('DrawSphereEx'                      (v3 f i i Color                                      )) ⍝ centerPos radius rings slices color                               ⍝ Draw sphere with extended parameters
'DrawSphereWiresRAYLIB'                  (⎕NA⊢⎕NA⍤⊢)                     R('DrawSphereWires'                   (v3 f i i Color                                      )) ⍝ centerPos radius rings slices color                               ⍝ Draw sphere wires
'DrawCylinderRAYLIB'                     (⎕NA⊢⎕NA⍤⊢)                     R('DrawCylinder'                      (v3 f f f i Color                                    )) ⍝ position radiusTop radiusBottom height slices color               ⍝ Draw a cylinder/cone
'DrawCylinderExRAYLIB'                   (⎕NA⊢⎕NA⍤⊢)                     R('DrawCylinderEx'                    (v3 v3 f f i Color                                   )) ⍝ startPos endPos startRadius endRadius sides color                 ⍝ Draw a cylinder with base at startPos and top at endPos
'DrawCylinderWiresRAYLIB'                (⎕NA⊢⎕NA⍤⊢)                     R('DrawCylinderWires'                 (v3 f f f i Color                                    )) ⍝ position radiusTop radiusBottom height slices color               ⍝ Draw a cylinder/cone wires
'DrawCylinderWiresExRAYLIB'              (⎕NA⊢⎕NA⍤⊢)                     R('DrawCylinderWiresEx'               (v3 v3 f f i Color                                   )) ⍝ startPos endPos startRadius endRadius sides color                 ⍝ Draw a cylinder wires with base at startPos and top at endPos
'DrawCapsuleRAYLIB'                      (⎕NA⊢⎕NA⍤⊢)                     R('DrawCapsule'                       (v3 v3 f i i Color                                   )) ⍝ startPos endPos radius slices rings color                         ⍝ Draw a capsule with the center of its sphere caps at startPos and endPos
'DrawCapsuleWiresRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('DrawCapsuleWires'                  (v3 v3 f i i Color                                   )) ⍝ startPos endPos radius slices rings color                         ⍝ Draw capsule wireframe with the center of its sphere caps at startPos and endPos
'DrawPlaneRAYLIB'                        (⎕NA⊢⎕NA⍤⊢)                     R('DrawPlane'                         (v3 v2 Color                                         )) ⍝ centerPos size color                                              ⍝ Draw a plane XZ
'DrawRayRAYLIB'                          (⎕NA⊢⎕NA⍤⊢)                     R('DrawRay'                           (Ray Color                                           )) ⍝ ray color                                                         ⍝ Draw a ray line
'DrawGridRAYLIB'                         (⎕NA⊢⎕NA⍤⊢)                     R('DrawGrid'                          (i f                                                 )) ⍝ slices spacing                                                    ⍝ Draw a grid (centered at (0, 0, 0))
'LoadModelRAYLIB'                        (⎕NA⊢⎕NA⍤⊢) Model               R('LoadModel'                         (,⊂ str                                              )) ⍝ fileName                                                          ⍝ Load model from files (meshes and materials)
'LoadModelRetPtrRAYLIB'                  (⎕NA⊢⎕NA⍤⊢)                     R('LoadModelRetPtr'                   (('>',Model) str                                     )) ⍝ fileName                                                          ⍝ Load model from files (meshes and materials)
'LoadModelFromMeshRAYLIB'                (⎕NA⊢⎕NA⍤⊢) Model               R('LoadModelFromMesh'                 (,⊂ Mesh                                             )) ⍝ mesh                                                              ⍝ Load model from generated mesh (default material)
'LoadModelFromMeshRetPtrRAYLIB'          (⎕NA⊢⎕NA⍤⊢)                     R('LoadModelFromMeshRetPtr'           (('>',Model) Mesh                                    )) ⍝ mesh                                                              ⍝ Load model from generated mesh (default material)
'IsModelReadyRAYLIB'                     (⎕NA⊢⎕NA⍤⊢) bool                R('IsModelReady'                      (,⊂ Model                                            )) ⍝ model                                                             ⍝ Check if a model is ready
'IsModelReadyRetPtrRAYLIB'               (⎕NA⊢⎕NA⍤⊢)                     R('IsModelReadyRetPtr'                (('>',bool) Model                                    )) ⍝ model                                                             ⍝ Check if a model is ready
'UnloadModelRAYLIB'                      (⎕NA⊢⎕NA⍤⊢)                     R('UnloadModel'                       (,⊂ Model                                            )) ⍝ model                                                             ⍝ Unload model (including meshes) from memory (RAM and/or VRAM)
'GetModelBoundingBoxRAYLIB'              (⎕NA⊢⎕NA⍤⊢) BoundingBox         R('GetModelBoundingBox'               (,⊂ Model                                            )) ⍝ model                                                             ⍝ Compute model bounding box limits (considers all meshes)
'GetModelBoundingBoxRetPtrRAYLIB'        (⎕NA⊢⎕NA⍤⊢)                     R('GetModelBoundingBoxRetPtr'         (('>',BoundingBox) Model                             )) ⍝ model                                                             ⍝ Compute model bounding box limits (considers all meshes)
'DrawModelRAYLIB'                        (⎕NA⊢⎕NA⍤⊢)                     R('DrawModel'                         (Model v3 f Color                                    )) ⍝ model position scale tint                                         ⍝ Draw a model (with texture if set)
'DrawModelExRAYLIB'                      (⎕NA⊢⎕NA⍤⊢)                     R('DrawModelEx'                       (Model v3 v3 f v3 Color                              )) ⍝ model position rotationAxis rotationAngle scale tint              ⍝ Draw a model with extended parameters
'DrawModelWiresRAYLIB'                   (⎕NA⊢⎕NA⍤⊢)                     R('DrawModelWires'                    (Model v3 f Color                                    )) ⍝ model position scale tint                                         ⍝ Draw a model wires (with texture if set)
'DrawModelWiresExRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('DrawModelWiresEx'                  (Model v3 v3 f v3 Color                              )) ⍝ model position rotationAxis rotationAngle scale tint              ⍝ Draw a model wires (with texture if set) with extended parameters
'DrawBoundingBoxRAYLIB'                  (⎕NA⊢⎕NA⍤⊢)                     R('DrawBoundingBox'                   (BoundingBox Color                                   )) ⍝ box color                                                         ⍝ Draw bounding box (wires)
'DrawBillboardRAYLIB'                    (⎕NA⊢⎕NA⍤⊢)                     R('DrawBillboard'                     (Camera Texture2D v3 f Color                         )) ⍝ camera texture position size tint                                 ⍝ Draw a billboard texture
'DrawBillboardRecRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('DrawBillboardRec'                  (Camera Texture2D Rectangle v3 v2 Color              )) ⍝ camera texture source position size tint                          ⍝ Draw a billboard texture defined by source
'DrawBillboardProRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('DrawBillboardPro'                  (Camera Texture2D Rectangle v3 v3 v2 v2 f Color      )) ⍝ camera texture source position up size origin rotation tint       ⍝ Draw a billboard texture defined by source and rotation
'UploadMeshRAYLIB'                       (⎕NA⊢⎕NA⍤⊢)                     R('UploadMesh'                        (('=',Mesh) bool                                     )) ⍝ mesh dynamic                                                      ⍝ Upload mesh vertex data in GPU and provide VAO/VBO ids
'UpdateMeshBufferRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('UpdateMeshBuffer'                  (Mesh i ptr i i                                      )) ⍝ mesh index data dataSize offset                                   ⍝ Update mesh vertex data in GPU for a specific buffer index
'UnloadMeshRAYLIB'                       (⎕NA⊢⎕NA⍤⊢)                     R('UnloadMesh'                        (,⊂ Mesh                                             )) ⍝ mesh                                                              ⍝ Unload mesh data from CPU and GPU
'DrawMeshRAYLIB'                         (⎕NA⊢⎕NA⍤⊢)                     R('DrawMesh'                          (Mesh Material Matrix                                )) ⍝ mesh material transform                                           ⍝ Draw a 3d mesh with material and transform
'DrawMeshInstancedRAYLIB'                (⎕NA⊢⎕NA⍤⊢)                     R('DrawMeshInstanced'                 (Mesh Material ('=',Matrix) i                        )) ⍝ mesh material transforms instances                                ⍝ Draw multiple mesh instances with material and different transforms
'ExportMeshRAYLIB'                       (⎕NA⊢⎕NA⍤⊢) bool                R('ExportMesh'                        (Mesh str                                            )) ⍝ mesh fileName                                                     ⍝ Export mesh data to file, returns true on success
'ExportMeshRetPtrRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('ExportMeshRetPtr'                  (('>',bool) Mesh str                                 )) ⍝ mesh fileName                                                     ⍝ Export mesh data to file, returns true on success
'GetMeshBoundingBoxRAYLIB'               (⎕NA⊢⎕NA⍤⊢) BoundingBox         R('GetMeshBoundingBox'                (,⊂ Mesh                                             )) ⍝ mesh                                                              ⍝ Compute mesh bounding box limits
'GetMeshBoundingBoxRetPtrRAYLIB'         (⎕NA⊢⎕NA⍤⊢)                     R('GetMeshBoundingBoxRetPtr'          (('>',BoundingBox) Mesh                              )) ⍝ mesh                                                              ⍝ Compute mesh bounding box limits
'GenMeshTangentsRAYLIB'                  (⎕NA⊢⎕NA⍤⊢)                     R('GenMeshTangents'                   (,⊂ ('=',Mesh)                                       )) ⍝ mesh                                                              ⍝ Compute mesh tangents
'GenMeshPolyRAYLIB'                      (⎕NA⊢⎕NA⍤⊢) Mesh                R('GenMeshPoly'                       (i f                                                 )) ⍝ sides radius                                                      ⍝ Generate polygonal mesh
'GenMeshPolyRetPtrRAYLIB'                (⎕NA⊢⎕NA⍤⊢)                     R('GenMeshPolyRetPtr'                 (('>',Mesh) i f                                      )) ⍝ sides radius                                                      ⍝ Generate polygonal mesh
'GenMeshPlaneRAYLIB'                     (⎕NA⊢⎕NA⍤⊢) Mesh                R('GenMeshPlane'                      (f f i i                                             )) ⍝ width length resX resZ                                            ⍝ Generate plane mesh (with subdivisions)
'GenMeshPlaneRetPtrRAYLIB'               (⎕NA⊢⎕NA⍤⊢)                     R('GenMeshPlaneRetPtr'                (('>',Mesh) f f i i                                  )) ⍝ width length resX resZ                                            ⍝ Generate plane mesh (with subdivisions)
'GenMeshCubeRAYLIB'                      (⎕NA⊢⎕NA⍤⊢) Mesh                R('GenMeshCube'                       (f f f                                               )) ⍝ width height length                                               ⍝ Generate cuboid mesh
'GenMeshCubeRetPtrRAYLIB'                (⎕NA⊢⎕NA⍤⊢)                     R('GenMeshCubeRetPtr'                 (('>',Mesh) f f f                                    )) ⍝ width height length                                               ⍝ Generate cuboid mesh
'GenMeshSphereRAYLIB'                    (⎕NA⊢⎕NA⍤⊢) Mesh                R('GenMeshSphere'                     (f i i                                               )) ⍝ radius rings slices                                               ⍝ Generate sphere mesh (standard sphere)
'GenMeshSphereRetPtrRAYLIB'              (⎕NA⊢⎕NA⍤⊢)                     R('GenMeshSphereRetPtr'               (('>',Mesh) f i i                                    )) ⍝ radius rings slices                                               ⍝ Generate sphere mesh (standard sphere)
'GenMeshHemiSphereRAYLIB'                (⎕NA⊢⎕NA⍤⊢) Mesh                R('GenMeshHemiSphere'                 (f i i                                               )) ⍝ radius rings slices                                               ⍝ Generate half-sphere mesh (no bottom cap)
'GenMeshHemiSphereRetPtrRAYLIB'          (⎕NA⊢⎕NA⍤⊢)                     R('GenMeshHemiSphereRetPtr'           (('>',Mesh) f i i                                    )) ⍝ radius rings slices                                               ⍝ Generate half-sphere mesh (no bottom cap)
'GenMeshCylinderRAYLIB'                  (⎕NA⊢⎕NA⍤⊢) Mesh                R('GenMeshCylinder'                   (f f i                                               )) ⍝ radius height slices                                              ⍝ Generate cylinder mesh
'GenMeshCylinderRetPtrRAYLIB'            (⎕NA⊢⎕NA⍤⊢)                     R('GenMeshCylinderRetPtr'             (('>',Mesh) f f i                                    )) ⍝ radius height slices                                              ⍝ Generate cylinder mesh
'GenMeshConeRAYLIB'                      (⎕NA⊢⎕NA⍤⊢) Mesh                R('GenMeshCone'                       (f f i                                               )) ⍝ radius height slices                                              ⍝ Generate cone/pyramid mesh
'GenMeshConeRetPtrRAYLIB'                (⎕NA⊢⎕NA⍤⊢)                     R('GenMeshConeRetPtr'                 (('>',Mesh) f f i                                    )) ⍝ radius height slices                                              ⍝ Generate cone/pyramid mesh
'GenMeshTorusRAYLIB'                     (⎕NA⊢⎕NA⍤⊢) Mesh                R('GenMeshTorus'                      (f f i i                                             )) ⍝ radius size radSeg sides                                          ⍝ Generate torus mesh
'GenMeshTorusRetPtrRAYLIB'               (⎕NA⊢⎕NA⍤⊢)                     R('GenMeshTorusRetPtr'                (('>',Mesh) f f i i                                  )) ⍝ radius size radSeg sides                                          ⍝ Generate torus mesh
'GenMeshKnotRAYLIB'                      (⎕NA⊢⎕NA⍤⊢) Mesh                R('GenMeshKnot'                       (f f i i                                             )) ⍝ radius size radSeg sides                                          ⍝ Generate trefoil knot mesh
'GenMeshKnotRetPtrRAYLIB'                (⎕NA⊢⎕NA⍤⊢)                     R('GenMeshKnotRetPtr'                 (('>',Mesh) f f i i                                  )) ⍝ radius size radSeg sides                                          ⍝ Generate trefoil knot mesh
'GenMeshHeightmapRAYLIB'                 (⎕NA⊢⎕NA⍤⊢) Mesh                R('GenMeshHeightmap'                  (Image v3                                            )) ⍝ heightmap size                                                    ⍝ Generate heightmap mesh from image data
'GenMeshHeightmapRetPtrRAYLIB'           (⎕NA⊢⎕NA⍤⊢)                     R('GenMeshHeightmapRetPtr'            (('>',Mesh) Image v3                                 )) ⍝ heightmap size                                                    ⍝ Generate heightmap mesh from image data
'GenMeshCubicmapRAYLIB'                  (⎕NA⊢⎕NA⍤⊢) Mesh                R('GenMeshCubicmap'                   (Image v3                                            )) ⍝ cubicmap cubeSize                                                 ⍝ Generate cubes-based map mesh from image data
'GenMeshCubicmapRetPtrRAYLIB'            (⎕NA⊢⎕NA⍤⊢)                     R('GenMeshCubicmapRetPtr'             (('>',Mesh) Image v3                                 )) ⍝ cubicmap cubeSize                                                 ⍝ Generate cubes-based map mesh from image data
'LoadMaterialsRAYLIB'                    (⎕NA⊢⎕NA⍤⊢) ptr                 R('LoadMaterials'                     (str ('=',i)                                         )) ⍝ fileName materialCount                                            ⍝ Load materials from model file
'LoadMaterialsRetPtrRAYLIB'              (⎕NA⊢⎕NA⍤⊢)                     R('LoadMaterialsRetPtr'               (ptr str ('=',i)                                     )) ⍝ fileName materialCount                                            ⍝ Load materials from model file
'LoadMaterialDefaultRAYLIB'              (⎕NA⊢⎕NA⍤⊢) Material            R('LoadMaterialDefault'               (⍬                                                   )) ⍝                                                                   ⍝ Load default material (Supports: DIFFUSE, SPECULAR, NORMAL maps)
'LoadMaterialDefaultRetPtrRAYLIB'        (⎕NA⊢⎕NA⍤⊢)                     R('LoadMaterialDefaultRetPtr'         (,⊂ ('>',Material)                                   )) ⍝                                                                   ⍝ Load default material (Supports: DIFFUSE, SPECULAR, NORMAL maps)
'IsMaterialReadyRAYLIB'                  (⎕NA⊢⎕NA⍤⊢) bool                R('IsMaterialReady'                   (,⊂ Material                                         )) ⍝ material                                                          ⍝ Check if a material is ready
'IsMaterialReadyRetPtrRAYLIB'            (⎕NA⊢⎕NA⍤⊢)                     R('IsMaterialReadyRetPtr'             (('>',bool) Material                                 )) ⍝ material                                                          ⍝ Check if a material is ready
'UnloadMaterialRAYLIB'                   (⎕NA⊢⎕NA⍤⊢)                     R('UnloadMaterial'                    (,⊂ Material                                         )) ⍝ material                                                          ⍝ Unload material from GPU memory (VRAM)
'SetMaterialTextureRAYLIB'               (⎕NA⊢⎕NA⍤⊢)                     R('SetMaterialTexture'                (('=',Material) i Texture2D                          )) ⍝ material mapType texture                                          ⍝ Set texture for a material map type (MATERIAL_MAP_DIFFUSE, MATERIAL_MAP_SPECULAR...)
'SetModelMeshMaterialRAYLIB'             (⎕NA⊢⎕NA⍤⊢)                     R('SetModelMeshMaterial'              (('=',Model) i i                                     )) ⍝ model meshId materialId                                           ⍝ Set material for a mesh
'LoadModelAnimationsRAYLIB'              (⎕NA⊢⎕NA⍤⊢) ptr                 R('LoadModelAnimations'               (str ('=',i)                                         )) ⍝ fileName animCount                                                ⍝ Load model animations from file
'LoadModelAnimationsRetPtrRAYLIB'        (⎕NA⊢⎕NA⍤⊢)                     R('LoadModelAnimationsRetPtr'         (ptr str ('=',i)                                     )) ⍝ fileName animCount                                                ⍝ Load model animations from file
'UpdateModelAnimationRAYLIB'             (⎕NA⊢⎕NA⍤⊢)                     R('UpdateModelAnimation'              (Model ModelAnimation i                              )) ⍝ model anim frame                                                  ⍝ Update model animation pose
'UnloadModelAnimationRAYLIB'             (⎕NA⊢⎕NA⍤⊢)                     R('UnloadModelAnimation'              (,⊂ ModelAnimation                                   )) ⍝ anim                                                              ⍝ Unload animation data
'UnloadModelAnimationsRAYLIB'            (⎕NA⊢⎕NA⍤⊢)                     R('UnloadModelAnimations'             (('=',ModelAnimation) i                              )) ⍝ animations animCount                                              ⍝ Unload animation array data
'IsModelAnimationValidRAYLIB'            (⎕NA⊢⎕NA⍤⊢) bool                R('IsModelAnimationValid'             (Model ModelAnimation                                )) ⍝ model anim                                                        ⍝ Check model animation skeleton match
'IsModelAnimationValidRetPtrRAYLIB'      (⎕NA⊢⎕NA⍤⊢)                     R('IsModelAnimationValidRetPtr'       (('>',bool) Model ModelAnimation                     )) ⍝ model anim                                                        ⍝ Check model animation skeleton match
'CheckCollisionSpheresRAYLIB'            (⎕NA⊢⎕NA⍤⊢) bool                R('CheckCollisionSpheres'             (v3 f v3 f                                           )) ⍝ center1 radius1 center2 radius2                                   ⍝ Check collision between two spheres
'CheckCollisionSpheresRetPtrRAYLIB'      (⎕NA⊢⎕NA⍤⊢)                     R('CheckCollisionSpheresRetPtr'       (('>',bool) v3 f v3 f                                )) ⍝ center1 radius1 center2 radius2                                   ⍝ Check collision between two spheres
'CheckCollisionBoxesRAYLIB'              (⎕NA⊢⎕NA⍤⊢) bool                R('CheckCollisionBoxes'               (BoundingBox BoundingBox                             )) ⍝ box1 box2                                                         ⍝ Check collision between two bounding boxes
'CheckCollisionBoxesRetPtrRAYLIB'        (⎕NA⊢⎕NA⍤⊢)                     R('CheckCollisionBoxesRetPtr'         (('>',bool) BoundingBox BoundingBox                  )) ⍝ box1 box2                                                         ⍝ Check collision between two bounding boxes
'CheckCollisionBoxSphereRAYLIB'          (⎕NA⊢⎕NA⍤⊢) bool                R('CheckCollisionBoxSphere'           (BoundingBox v3 f                                    )) ⍝ box center radius                                                 ⍝ Check collision between box and sphere
'CheckCollisionBoxSphereRetPtrRAYLIB'    (⎕NA⊢⎕NA⍤⊢)                     R('CheckCollisionBoxSphereRetPtr'     (('>',bool) BoundingBox v3 f                         )) ⍝ box center radius                                                 ⍝ Check collision between box and sphere
'GetRayCollisionSphereRAYLIB'            (⎕NA⊢⎕NA⍤⊢) RayCollision        R('GetRayCollisionSphere'             (Ray v3 f                                            )) ⍝ ray center radius                                                 ⍝ Get collision info between ray and sphere
'GetRayCollisionSphereRetPtrRAYLIB'      (⎕NA⊢⎕NA⍤⊢)                     R('GetRayCollisionSphereRetPtr'       (('>',RayCollision) Ray v3 f                         )) ⍝ ray center radius                                                 ⍝ Get collision info between ray and sphere
'GetRayCollisionBoxRAYLIB'               (⎕NA⊢⎕NA⍤⊢) RayCollision        R('GetRayCollisionBox'                (Ray BoundingBox                                     )) ⍝ ray box                                                           ⍝ Get collision info between ray and box
'GetRayCollisionBoxRetPtrRAYLIB'         (⎕NA⊢⎕NA⍤⊢)                     R('GetRayCollisionBoxRetPtr'          (('>',RayCollision) Ray BoundingBox                  )) ⍝ ray box                                                           ⍝ Get collision info between ray and box
'GetRayCollisionMeshRAYLIB'              (⎕NA⊢⎕NA⍤⊢) RayCollision        R('GetRayCollisionMesh'               (Ray Mesh Matrix                                     )) ⍝ ray mesh transform                                                ⍝ Get collision info between ray and mesh
'GetRayCollisionMeshRetPtrRAYLIB'        (⎕NA⊢⎕NA⍤⊢)                     R('GetRayCollisionMeshRetPtr'         (('>',RayCollision) Ray Mesh Matrix                  )) ⍝ ray mesh transform                                                ⍝ Get collision info between ray and mesh
'GetRayCollisionTriangleRAYLIB'          (⎕NA⊢⎕NA⍤⊢) RayCollision        R('GetRayCollisionTriangle'           (Ray v3 v3 v3                                        )) ⍝ ray p1 p2 p3                                                      ⍝ Get collision info between ray and triangle
'GetRayCollisionTriangleRetPtrRAYLIB'    (⎕NA⊢⎕NA⍤⊢)                     R('GetRayCollisionTriangleRetPtr'     (('>',RayCollision) Ray v3 v3 v3                     )) ⍝ ray p1 p2 p3                                                      ⍝ Get collision info between ray and triangle
'GetRayCollisionQuadRAYLIB'              (⎕NA⊢⎕NA⍤⊢) RayCollision        R('GetRayCollisionQuad'               (Ray v3 v3 v3 v3                                     )) ⍝ ray p1 p2 p3 p4                                                   ⍝ Get collision info between ray and quad
'GetRayCollisionQuadRetPtrRAYLIB'        (⎕NA⊢⎕NA⍤⊢)                     R('GetRayCollisionQuadRetPtr'         (('>',RayCollision) Ray v3 v3 v3 v3                  )) ⍝ ray p1 p2 p3 p4                                                   ⍝ Get collision info between ray and quad
'InitAudioDeviceRAYLIB'                  (⎕NA⊢⎕NA⍤⊢)                     R('InitAudioDevice'                   (⍬                                                   )) ⍝                                                                   ⍝ Initialize audio device and context
'CloseAudioDeviceRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('CloseAudioDevice'                  (⍬                                                   )) ⍝                                                                   ⍝ Close the audio device and context
'IsAudioDeviceReadyRAYLIB'               (⎕NA⊢⎕NA⍤⊢) bool                R('IsAudioDeviceReady'                (⍬                                                   )) ⍝                                                                   ⍝ Check if audio device has been initialized successfully
'IsAudioDeviceReadyRetPtrRAYLIB'         (⎕NA⊢⎕NA⍤⊢)                     R('IsAudioDeviceReadyRetPtr'          (,⊂ ('>',bool)                                       )) ⍝                                                                   ⍝ Check if audio device has been initialized successfully
'SetMasterVolumeRAYLIB'                  (⎕NA⊢⎕NA⍤⊢)                     R('SetMasterVolume'                   (,⊂ f                                                )) ⍝ volume                                                            ⍝ Set master volume (listener)
'GetMasterVolumeRAYLIB'                  (⎕NA⊢⎕NA⍤⊢) f                   R('GetMasterVolume'                   (⍬                                                   )) ⍝                                                                   ⍝ Get master volume (listener)
'GetMasterVolumeRetPtrRAYLIB'            (⎕NA⊢⎕NA⍤⊢)                     R('GetMasterVolumeRetPtr'             (,⊂ ('>',f)                                          )) ⍝                                                                   ⍝ Get master volume (listener)
'LoadWaveRAYLIB'                         (⎕NA⊢⎕NA⍤⊢) Wave                R('LoadWave'                          (,⊂ str                                              )) ⍝ fileName                                                          ⍝ Load wave data from file
'LoadWaveRetPtrRAYLIB'                   (⎕NA⊢⎕NA⍤⊢)                     R('LoadWaveRetPtr'                    (('>',Wave) str                                      )) ⍝ fileName                                                          ⍝ Load wave data from file
'LoadWaveFromMemoryRAYLIB'               (⎕NA⊢⎕NA⍤⊢) Wave                R('LoadWaveFromMemory'                (str ustr i                                          )) ⍝ fileType fileData dataSize                                        ⍝ Load wave from memory buffer, fileType refers to extension: i.e. '.wav'
'LoadWaveFromMemoryRetPtrRAYLIB'         (⎕NA⊢⎕NA⍤⊢)                     R('LoadWaveFromMemoryRetPtr'          (('>',Wave) str ustr i                               )) ⍝ fileType fileData dataSize                                        ⍝ Load wave from memory buffer, fileType refers to extension: i.e. '.wav'
'IsWaveReadyRAYLIB'                      (⎕NA⊢⎕NA⍤⊢) bool                R('IsWaveReady'                       (,⊂ Wave                                             )) ⍝ wave                                                              ⍝ Checks if wave data is ready
'IsWaveReadyRetPtrRAYLIB'                (⎕NA⊢⎕NA⍤⊢)                     R('IsWaveReadyRetPtr'                 (('>',bool) Wave                                     )) ⍝ wave                                                              ⍝ Checks if wave data is ready
'LoadSoundRAYLIB'                        (⎕NA⊢⎕NA⍤⊢) Sound               R('LoadSound'                         (,⊂ str                                              )) ⍝ fileName                                                          ⍝ Load sound from file
'LoadSoundRetPtrRAYLIB'                  (⎕NA⊢⎕NA⍤⊢)                     R('LoadSoundRetPtr'                   (('>',Sound) str                                     )) ⍝ fileName                                                          ⍝ Load sound from file
'LoadSoundFromWaveRAYLIB'                (⎕NA⊢⎕NA⍤⊢) Sound               R('LoadSoundFromWave'                 (,⊂ Wave                                             )) ⍝ wave                                                              ⍝ Load sound from wave data
'LoadSoundFromWaveRetPtrRAYLIB'          (⎕NA⊢⎕NA⍤⊢)                     R('LoadSoundFromWaveRetPtr'           (('>',Sound) Wave                                    )) ⍝ wave                                                              ⍝ Load sound from wave data
'LoadSoundAliasRAYLIB'                   (⎕NA⊢⎕NA⍤⊢) Sound               R('LoadSoundAlias'                    (,⊂ Sound                                            )) ⍝ source                                                            ⍝ Create a new sound that shares the same sample data as the source sound, does not own the sound data
'LoadSoundAliasRetPtrRAYLIB'             (⎕NA⊢⎕NA⍤⊢)                     R('LoadSoundAliasRetPtr'              (('>',Sound) Sound                                   )) ⍝ source                                                            ⍝ Create a new sound that shares the same sample data as the source sound, does not own the sound data
'IsSoundReadyRAYLIB'                     (⎕NA⊢⎕NA⍤⊢) bool                R('IsSoundReady'                      (,⊂ Sound                                            )) ⍝ sound                                                             ⍝ Checks if a sound is ready
'IsSoundReadyRetPtrRAYLIB'               (⎕NA⊢⎕NA⍤⊢)                     R('IsSoundReadyRetPtr'                (('>',bool) Sound                                    )) ⍝ sound                                                             ⍝ Checks if a sound is ready
'UpdateSoundRAYLIB'                      (⎕NA⊢⎕NA⍤⊢)                     R('UpdateSound'                       (Sound ptr i                                         )) ⍝ sound data sampleCount                                            ⍝ Update sound buffer with new data
'UnloadWaveRAYLIB'                       (⎕NA⊢⎕NA⍤⊢)                     R('UnloadWave'                        (,⊂ Wave                                             )) ⍝ wave                                                              ⍝ Unload wave data
'UnloadSoundRAYLIB'                      (⎕NA⊢⎕NA⍤⊢)                     R('UnloadSound'                       (,⊂ Sound                                            )) ⍝ sound                                                             ⍝ Unload sound
'UnloadSoundAliasRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('UnloadSoundAlias'                  (,⊂ Sound                                            )) ⍝ alias                                                             ⍝ Unload a sound alias (does not deallocate sample data)
'ExportWaveRAYLIB'                       (⎕NA⊢⎕NA⍤⊢) bool                R('ExportWave'                        (Wave str                                            )) ⍝ wave fileName                                                     ⍝ Export wave data to file, returns true on success
'ExportWaveRetPtrRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('ExportWaveRetPtr'                  (('>',bool) Wave str                                 )) ⍝ wave fileName                                                     ⍝ Export wave data to file, returns true on success
'ExportWaveAsCodeRAYLIB'                 (⎕NA⊢⎕NA⍤⊢) bool                R('ExportWaveAsCode'                  (Wave str                                            )) ⍝ wave fileName                                                     ⍝ Export wave sample data to code (.h), returns true on success
'ExportWaveAsCodeRetPtrRAYLIB'           (⎕NA⊢⎕NA⍤⊢)                     R('ExportWaveAsCodeRetPtr'            (('>',bool) Wave str                                 )) ⍝ wave fileName                                                     ⍝ Export wave sample data to code (.h), returns true on success
'PlaySoundRAYLIB'                        (⎕NA⊢⎕NA⍤⊢)                     R('PlaySound'                         (,⊂ Sound                                            )) ⍝ sound                                                             ⍝ Play a sound
'StopSoundRAYLIB'                        (⎕NA⊢⎕NA⍤⊢)                     R('StopSound'                         (,⊂ Sound                                            )) ⍝ sound                                                             ⍝ Stop playing a sound
'PauseSoundRAYLIB'                       (⎕NA⊢⎕NA⍤⊢)                     R('PauseSound'                        (,⊂ Sound                                            )) ⍝ sound                                                             ⍝ Pause a sound
'ResumeSoundRAYLIB'                      (⎕NA⊢⎕NA⍤⊢)                     R('ResumeSound'                       (,⊂ Sound                                            )) ⍝ sound                                                             ⍝ Resume a paused sound
'IsSoundPlayingRAYLIB'                   (⎕NA⊢⎕NA⍤⊢) bool                R('IsSoundPlaying'                    (,⊂ Sound                                            )) ⍝ sound                                                             ⍝ Check if a sound is currently playing
'IsSoundPlayingRetPtrRAYLIB'             (⎕NA⊢⎕NA⍤⊢)                     R('IsSoundPlayingRetPtr'              (('>',bool) Sound                                    )) ⍝ sound                                                             ⍝ Check if a sound is currently playing
'SetSoundVolumeRAYLIB'                   (⎕NA⊢⎕NA⍤⊢)                     R('SetSoundVolume'                    (Sound f                                             )) ⍝ sound volume                                                      ⍝ Set volume for a sound (1.0 is max level)
'SetSoundPitchRAYLIB'                    (⎕NA⊢⎕NA⍤⊢)                     R('SetSoundPitch'                     (Sound f                                             )) ⍝ sound pitch                                                       ⍝ Set pitch for a sound (1.0 is base level)
'SetSoundPanRAYLIB'                      (⎕NA⊢⎕NA⍤⊢)                     R('SetSoundPan'                       (Sound f                                             )) ⍝ sound pan                                                         ⍝ Set pan for a sound (0.5 is center)
'WaveCopyRAYLIB'                         (⎕NA⊢⎕NA⍤⊢) Wave                R('WaveCopy'                          (,⊂ Wave                                             )) ⍝ wave                                                              ⍝ Copy a wave to a new wave
'WaveCopyRetPtrRAYLIB'                   (⎕NA⊢⎕NA⍤⊢)                     R('WaveCopyRetPtr'                    (('>',Wave) Wave                                     )) ⍝ wave                                                              ⍝ Copy a wave to a new wave
'WaveCropRAYLIB'                         (⎕NA⊢⎕NA⍤⊢)                     R('WaveCrop'                          (('=',Wave) i i                                      )) ⍝ wave initSample finalSample                                       ⍝ Crop a wave to defined samples range
'WaveFormatRAYLIB'                       (⎕NA⊢⎕NA⍤⊢)                     R('WaveFormat'                        (('=',Wave) i i i                                    )) ⍝ wave sampleRate sampleSize channels                               ⍝ Convert wave data to desired format
'LoadWaveSamplesRAYLIB'                  (⎕NA⊢⎕NA⍤⊢) ptr                 R('LoadWaveSamples'                   (,⊂ Wave                                             )) ⍝ wave                                                              ⍝ Load samples data from wave as a 32bit float data array
'LoadWaveSamplesRetPtrRAYLIB'            (⎕NA⊢⎕NA⍤⊢)                     R('LoadWaveSamplesRetPtr'             (ptr Wave                                            )) ⍝ wave                                                              ⍝ Load samples data from wave as a 32bit float data array
'UnloadWaveSamplesRAYLIB'                (⎕NA⊢⎕NA⍤⊢)                     R('UnloadWaveSamples'                 (,⊂ ('=',f)                                          )) ⍝ samples                                                           ⍝ Unload samples data loaded with LoadWaveSamples()
'LoadMusicStreamRAYLIB'                  (⎕NA⊢⎕NA⍤⊢) Music               R('LoadMusicStream'                   (,⊂ str                                              )) ⍝ fileName                                                          ⍝ Load music stream from file
'LoadMusicStreamRetPtrRAYLIB'            (⎕NA⊢⎕NA⍤⊢)                     R('LoadMusicStreamRetPtr'             (('>',Music) str                                     )) ⍝ fileName                                                          ⍝ Load music stream from file
'LoadMusicStreamFromMemoryRAYLIB'        (⎕NA⊢⎕NA⍤⊢) Music               R('LoadMusicStreamFromMemory'         (str ustr i                                          )) ⍝ fileType data dataSize                                            ⍝ Load music stream from data
'LoadMusicStreamFromMemoryRetPtrRAYLIB'  (⎕NA⊢⎕NA⍤⊢)                     R('LoadMusicStreamFromMemoryRetPtr'   (('>',Music) str ustr i                              )) ⍝ fileType data dataSize                                            ⍝ Load music stream from data
'IsMusicReadyRAYLIB'                     (⎕NA⊢⎕NA⍤⊢) bool                R('IsMusicReady'                      (,⊂ Music                                            )) ⍝ music                                                             ⍝ Checks if a music stream is ready
'IsMusicReadyRetPtrRAYLIB'               (⎕NA⊢⎕NA⍤⊢)                     R('IsMusicReadyRetPtr'                (('>',bool) Music                                    )) ⍝ music                                                             ⍝ Checks if a music stream is ready
'UnloadMusicStreamRAYLIB'                (⎕NA⊢⎕NA⍤⊢)                     R('UnloadMusicStream'                 (,⊂ Music                                            )) ⍝ music                                                             ⍝ Unload music stream
'PlayMusicStreamRAYLIB'                  (⎕NA⊢⎕NA⍤⊢)                     R('PlayMusicStream'                   (,⊂ Music                                            )) ⍝ music                                                             ⍝ Start music playing
'IsMusicStreamPlayingRAYLIB'             (⎕NA⊢⎕NA⍤⊢) bool                R('IsMusicStreamPlaying'              (,⊂ Music                                            )) ⍝ music                                                             ⍝ Check if music is playing
'IsMusicStreamPlayingRetPtrRAYLIB'       (⎕NA⊢⎕NA⍤⊢)                     R('IsMusicStreamPlayingRetPtr'        (('>',bool) Music                                    )) ⍝ music                                                             ⍝ Check if music is playing
'UpdateMusicStreamRAYLIB'                (⎕NA⊢⎕NA⍤⊢)                     R('UpdateMusicStream'                 (,⊂ Music                                            )) ⍝ music                                                             ⍝ Updates buffers for music streaming
'StopMusicStreamRAYLIB'                  (⎕NA⊢⎕NA⍤⊢)                     R('StopMusicStream'                   (,⊂ Music                                            )) ⍝ music                                                             ⍝ Stop music playing
'PauseMusicStreamRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('PauseMusicStream'                  (,⊂ Music                                            )) ⍝ music                                                             ⍝ Pause music playing
'ResumeMusicStreamRAYLIB'                (⎕NA⊢⎕NA⍤⊢)                     R('ResumeMusicStream'                 (,⊂ Music                                            )) ⍝ music                                                             ⍝ Resume playing paused music
'SeekMusicStreamRAYLIB'                  (⎕NA⊢⎕NA⍤⊢)                     R('SeekMusicStream'                   (Music f                                             )) ⍝ music position                                                    ⍝ Seek music to a position (in seconds)
'SetMusicVolumeRAYLIB'                   (⎕NA⊢⎕NA⍤⊢)                     R('SetMusicVolume'                    (Music f                                             )) ⍝ music volume                                                      ⍝ Set volume for music (1.0 is max level)
'SetMusicPitchRAYLIB'                    (⎕NA⊢⎕NA⍤⊢)                     R('SetMusicPitch'                     (Music f                                             )) ⍝ music pitch                                                       ⍝ Set pitch for a music (1.0 is base level)
'SetMusicPanRAYLIB'                      (⎕NA⊢⎕NA⍤⊢)                     R('SetMusicPan'                       (Music f                                             )) ⍝ music pan                                                         ⍝ Set pan for a music (0.5 is center)
'GetMusicTimeLengthRAYLIB'               (⎕NA⊢⎕NA⍤⊢) f                   R('GetMusicTimeLength'                (,⊂ Music                                            )) ⍝ music                                                             ⍝ Get music time length (in seconds)
'GetMusicTimeLengthRetPtrRAYLIB'         (⎕NA⊢⎕NA⍤⊢)                     R('GetMusicTimeLengthRetPtr'          (('>',f) Music                                       )) ⍝ music                                                             ⍝ Get music time length (in seconds)
'GetMusicTimePlayedRAYLIB'               (⎕NA⊢⎕NA⍤⊢) f                   R('GetMusicTimePlayed'                (,⊂ Music                                            )) ⍝ music                                                             ⍝ Get current music time played (in seconds)
'GetMusicTimePlayedRetPtrRAYLIB'         (⎕NA⊢⎕NA⍤⊢)                     R('GetMusicTimePlayedRetPtr'          (('>',f) Music                                       )) ⍝ music                                                             ⍝ Get current music time played (in seconds)
'LoadAudioStreamRAYLIB'                  (⎕NA⊢⎕NA⍤⊢) AudioStream         R('LoadAudioStream'                   (u u u                                               )) ⍝ sampleRate sampleSize channels                                    ⍝ Load audio stream (to stream raw audio pcm data)
'LoadAudioStreamRetPtrRAYLIB'            (⎕NA⊢⎕NA⍤⊢)                     R('LoadAudioStreamRetPtr'             (('>',AudioStream) u u u                             )) ⍝ sampleRate sampleSize channels                                    ⍝ Load audio stream (to stream raw audio pcm data)
'IsAudioStreamReadyRAYLIB'               (⎕NA⊢⎕NA⍤⊢) bool                R('IsAudioStreamReady'                (,⊂ AudioStream                                      )) ⍝ stream                                                            ⍝ Checks if an audio stream is ready
'IsAudioStreamReadyRetPtrRAYLIB'         (⎕NA⊢⎕NA⍤⊢)                     R('IsAudioStreamReadyRetPtr'          (('>',bool) AudioStream                              )) ⍝ stream                                                            ⍝ Checks if an audio stream is ready
'UnloadAudioStreamRAYLIB'                (⎕NA⊢⎕NA⍤⊢)                     R('UnloadAudioStream'                 (,⊂ AudioStream                                      )) ⍝ stream                                                            ⍝ Unload audio stream and free memory
'UpdateAudioStreamRAYLIB'                (⎕NA⊢⎕NA⍤⊢)                     R('UpdateAudioStream'                 (AudioStream ptr i                                   )) ⍝ stream data frameCount                                            ⍝ Update audio stream buffers with data
'IsAudioStreamProcessedRAYLIB'           (⎕NA⊢⎕NA⍤⊢) bool                R('IsAudioStreamProcessed'            (,⊂ AudioStream                                      )) ⍝ stream                                                            ⍝ Check if any audio stream buffers requires refill
'IsAudioStreamProcessedRetPtrRAYLIB'     (⎕NA⊢⎕NA⍤⊢)                     R('IsAudioStreamProcessedRetPtr'      (('>',bool) AudioStream                              )) ⍝ stream                                                            ⍝ Check if any audio stream buffers requires refill
'PlayAudioStreamRAYLIB'                  (⎕NA⊢⎕NA⍤⊢)                     R('PlayAudioStream'                   (,⊂ AudioStream                                      )) ⍝ stream                                                            ⍝ Play audio stream
'PauseAudioStreamRAYLIB'                 (⎕NA⊢⎕NA⍤⊢)                     R('PauseAudioStream'                  (,⊂ AudioStream                                      )) ⍝ stream                                                            ⍝ Pause audio stream
'ResumeAudioStreamRAYLIB'                (⎕NA⊢⎕NA⍤⊢)                     R('ResumeAudioStream'                 (,⊂ AudioStream                                      )) ⍝ stream                                                            ⍝ Resume audio stream
'IsAudioStreamPlayingRAYLIB'             (⎕NA⊢⎕NA⍤⊢) bool                R('IsAudioStreamPlaying'              (,⊂ AudioStream                                      )) ⍝ stream                                                            ⍝ Check if audio stream is playing
'IsAudioStreamPlayingRetPtrRAYLIB'       (⎕NA⊢⎕NA⍤⊢)                     R('IsAudioStreamPlayingRetPtr'        (('>',bool) AudioStream                              )) ⍝ stream                                                            ⍝ Check if audio stream is playing
'StopAudioStreamRAYLIB'                  (⎕NA⊢⎕NA⍤⊢)                     R('StopAudioStream'                   (,⊂ AudioStream                                      )) ⍝ stream                                                            ⍝ Stop audio stream
'SetAudioStreamVolumeRAYLIB'             (⎕NA⊢⎕NA⍤⊢)                     R('SetAudioStreamVolume'              (AudioStream f                                       )) ⍝ stream volume                                                     ⍝ Set volume for audio stream (1.0 is max level)
'SetAudioStreamPitchRAYLIB'              (⎕NA⊢⎕NA⍤⊢)                     R('SetAudioStreamPitch'               (AudioStream f                                       )) ⍝ stream pitch                                                      ⍝ Set pitch for audio stream (1.0 is base level)
'SetAudioStreamPanRAYLIB'                (⎕NA⊢⎕NA⍤⊢)                     R('SetAudioStreamPan'                 (AudioStream f                                       )) ⍝ stream pan                                                        ⍝ Set pan for audio stream (0.5 is centered)
'SetAudioStreamBufferSizeDefaultRAYLIB'  (⎕NA⊢⎕NA⍤⊢)                     R('SetAudioStreamBufferSizeDefault'   (,⊂ i                                                )) ⍝ size                                                              ⍝ Default size for new audio streams
'SetAudioStreamCallbackRAYLIB'           (⎕NA⊢⎕NA⍤⊢)                     R('SetAudioStreamCallback'            (AudioStream ptr                                     )) ⍝ stream callback                                                   ⍝ Audio thread callback to request new data
'AttachAudioStreamProcessorRAYLIB'       (⎕NA⊢⎕NA⍤⊢)                     R('AttachAudioStreamProcessor'        (AudioStream ptr                                     )) ⍝ stream processor                                                  ⍝ Attach audio stream processor to stream, receives the samples as <float>s
'DetachAudioStreamProcessorRAYLIB'       (⎕NA⊢⎕NA⍤⊢)                     R('DetachAudioStreamProcessor'        (AudioStream ptr                                     )) ⍝ stream processor                                                  ⍝ Detach audio stream processor from stream
'AttachAudioMixedProcessorRAYLIB'        (⎕NA⊢⎕NA⍤⊢)                     R('AttachAudioMixedProcessor'         (,⊂ ptr                                              )) ⍝ processor                                                         ⍝ Attach audio stream processor to the entire audio pipeline, receives the samples as <float>s
'DetachAudioMixedProcessorRAYLIB'        (⎕NA⊢⎕NA⍤⊢)                     R('DetachAudioMixedProcessor'         (,⊂ ptr                                              )) ⍝ processor                                                         ⍝ Detach audio stream processor from the entire audio pipeline
AfterDefaultDefinitions mode
∇
:EndNamespace