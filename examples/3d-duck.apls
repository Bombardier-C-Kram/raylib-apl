#!cd $dir && /usr/bin/dyalogscript $fileName
rlDir ← '../link/',⍨⊃1⎕NPARTS''
rl ← 0⎕Fix rlDir,'raylib.apln'
0 rl.Init rlDir⍬

rl.InitWindowRetPtrRAYLIB 800 800 'Hello!!!'
rl.DisableCursorRetPtrRAYLIB

⍝ Define the camera to look into our 3d world
camera ← ⍬
camera ,←⊂ 50 50 50 ⍝ Camera position
camera ,←⊂  0 10  0 ⍝ Camera looking at point
camera ,←⊂  0  1  0 ⍝ Camera up vector (rotation towards target)
camera ,←⊂ 45       ⍝ Camera field-of-view Y
camera ,←⊂ rl.CameraProjection.CAMERA_PERSPECTIVE ⍝ Camera type

model _ ← rl.LoadModelRetPtrRAYLIB 'OBJ/RubberDuck_LOD0.obj'

frame←0
⍝ For every frame till user closes the window
:While ~rl.WindowShouldCloseRetPtrRAYLIB ⍬
    frame+←1
    ⍝ Look for keystrokes from user, move the camera
    camera ← rl.UpdateCameraRetPtrRAYLIB ((,⊂camera) rl.CameraMode.CAMERA_THIRD_PERSON)
    ⍝ Preparing another buffer to draw the new frame, with white background
    rl.BeginDrawingRetPtrRAYLIB⍬
        rl.ClearBackgroundRetPtrRAYLIB ⊂rl.color.white

        ⍝ Draws FPS at x=40 y=40
        rl.DrawFPSRetPtrRAYLIB 40 40

        ⍝ Draw 3d stuff relative to the camera
        rl.BeginMode3DRetPtrRAYLIB ⊂camera

            ⍝ draws grid
            rl.DrawGridRetPtrRAYLIB 20 10

            ⍝ Draw the duck model at position
            position ← 0 0 0  ⋄  scale ← 1
            rl.DrawModelRetPtrRAYLIB (model position scale (rl.color.white))

        ⍝ Stop drawing 3d
        rl.EndMode3DRetPtrRAYLIB⍬

    ⍝ wait till next frame is needed, then switch to this new buffer we've drawn
    rl.EndDrawingRetPtrRAYLIB⍬
:EndWhile

⍝ Unloading model, freeing it's memory.
rl.UnloadModelRetPtrRAYLIB ,⊂model
rl.CloseWindowRetPtrRAYLIB⍬
